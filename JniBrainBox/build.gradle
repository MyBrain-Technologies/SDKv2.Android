plugins {
    id 'com.android.library'
    id 'maven-publish'
}

android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 2
        versionName "3.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        externalNativeBuild {
            cmake {
                arguments "-DCMAKE_BUILD_TYPE=Release"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
}

dependencies {
    // Kotlin
    implementation deps.kotlin.stdlib

    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.3.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

//************************************************
//* publish artifact to maven
//* add your credentials in local.properties
//* to run from terminal: ./gradlew :JniBrainBox:publishReleasePublicationToMavenRepository --stacktrace
//************************************************
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def mavenUsername = properties.getProperty('maven_username')
def mavenPassword = properties.getProperty('maven_password')
def releasesRepoUrl = 'https://package.mybraintech.com/repository/maven-2-releases/'
def snapshotsRepoUrl = 'https://package.mybraintech.com/repository/maven-2-snapshots/'

project.afterEvaluate {
    publishing {
        repositories {
            maven {
                url = android.defaultConfig.versionName.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                credentials {
                    username mavenUsername
                    password mavenPassword
                }
            }
        }
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                from components.release

                groupId = 'com.mybraintech.android'
                artifactId = 'jnibrainbox'
                version = android.defaultConfig.versionName
            }
//            debug(MavenPublication) {
//                from components.debug
//
//                groupId = 'com.mybraintech.android'
//                artifactId = 'jnibrainbox-debug'
//                version = '3.0.0'
//            }
        }
    }
}