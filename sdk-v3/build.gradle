plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven-publish'
}

android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 21

        //noinspection ExpiredTargetSdkVersion
        targetSdkVersion 30

        versionCode 130
        versionName '3.3.2'

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        String sharedTestDir = 'src/sharedTest/java'
        test {
            java.srcDir sharedTestDir
        }
        androidTest {
            java.srcDir sharedTestDir
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

configurations {
    doclava
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // brainbox
    def useLocalJni = false
    if (useLocalJni) {
//        implementation project(path: ':JniBrainBox')
    } else {
        implementation "com.mybraintech.android:jnibrainbox:3.0.0rc2"
    }

    // bluetooth
    def useCustomizedBle = true
    if (useCustomizedBle) {
        implementation 'no.nordicsemi.android:ble-common:2.3.1.mbt.rc2'
//        implementation project(path: ':ble')
//        implementation project(path: ':ble-common')
    } else {
        implementation 'no.nordicsemi.android:ble:2.3.1'
    }

    implementation deps.kotlin.stdlib
    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'com.google.code.gson:gson:2.8.5'

    // logger
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // rxjava
    implementation deps.rx_android
    implementation deps.rx_kotlin
    implementation deps.rxjava2

    // coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2'

    // documentation
    doclava 'com.google.doclava:doclava:1.0.6'

    // test
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.robolectric:robolectric:4.9.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

//************************************************
//* publish artifact to maven
//* add your credentials in local.properties
//* to run from terminal: ./gradlew :sdk-v3:publishReleasePublicationToMavenRepository --stacktrace
//************************************************
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def mavenUsername = properties.getProperty('maven_user')
def mavenPassword = properties.getProperty('maven_password')
def releasesRepoUrl = 'https://package.mybraintech.com/repository/maven-2-releases/'
def snapshotsRepoUrl = 'https://package.mybraintech.com/repository/maven-2-snapshots/'

project.afterEvaluate {
    publishing {
        repositories {
            maven {
                url = android.defaultConfig.versionName.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                credentials {
                    username mavenUsername
                    password mavenPassword
                }
            }
        }
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                from components.release

                groupId = 'com.mybraintech.android'
                artifactId = 'sdk'
                version = android.defaultConfig.versionName
            }
        }
    }
}