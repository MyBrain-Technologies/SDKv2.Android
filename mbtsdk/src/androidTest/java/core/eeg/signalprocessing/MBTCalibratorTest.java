package core.eeg.signalprocessing;
import androidx.annotation.NonNull;

import org.apache.commons.lang.ArrayUtils;
import org.junit.Before;
import org.junit.Test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

import core.eeg.storage.MbtEEGPacket;

import static org.junit.Assert.*;

public class MBTCalibratorTest {


    @Before
    public void setUp() {
        try {
            System.loadLibrary("mbtalgo_2.3.1");
        } catch (@NonNull final UnsatisfiedLinkError e) {
            e.printStackTrace();
        }

        MBTSignalQualityChecker.initQualityChecker();
    }

    /**
     * Check that the calibrateNew method generates a calibration map equals to an expected output for a given/defined input
     */
    @Test
    public void calibrateNewCompareExpectedOutputTest() {
        final int sampRate = 250;
        final int packetLength = 250;

        HashMap<String, float[]> expectedOutput = new HashMap<>();
        expectedOutput.put("errorMsg",new float[]{0.0f});
        expectedOutput.put("histFrequencies",new float[]{9.277344f, 10.253906f, 8.7890625f, 9.277344f, 8.7890625f, 8.7890625f, 8.7890625f, 8.300781f, 9.765625f, 9.277344f, 9.277344f, 9.277344f, 8.7890625f, 11.71875f, 12.207031f, 12.207031f, 10.7421875f, 10.7421875f, 9.765625f, 9.277344f, 6.3476562f, 6.3476562f, 12.207031f, 10.7421875f, 10.253906f, 9.765625f, 9.277344f, 9.765625f, 7.8125f, 8.7890625f, 9.277344f, 10.7421875f, 10.7421875f});
        expectedOutput.put("snrCalib",new float[]{1.3916616f, 1.5114217f, 1.6333491f, 1.7097569f, 1.7002459f, 1.691025f, 1.8396616f, 2.1427798f, 2.0394905f, 1.6949877f, 2.2045376f, 2.8871717f, 2.9505434f, 2.116245f, 1.4321058f, 1.6352859f, 2.1322348f, 1.841139f, 1.2421434f, 1.4774636f, 1.6806155f, 1.726794f, 1.7419765f, 1.6719801f, 2.0048494f, 1.913286f, 2.2426226f});
        expectedOutput.put("rawSnrCalib",new float[]{1.3916616f, 1.6311818f, 1.6355163f, 1.7839974f, 1.6164944f, 1.7655555f, 1.9137676f, 2.3717923f, 1.7071886f, 1.6827867f, 2.7262886f, 3.0480552f, 2.8530316f, 1.3794583f, 1.4847533f, 1.7858185f, 2.4786513f, 1.2036266f, 1.2806602f, 1.674267f, 1.686964f, 1.766624f, 1.7173291f, 1.6266313f, 2.3830676f, 1.4435042f, 3.041741f});

        ArrayList<MbtEEGPacket> eegPackets1stQuarter = getEEGDataSet1(true); // /!\ the data set is divided in 4 methods that return 1/4 of the data set  because it can not compile (code too large) with just 1 method
        ArrayList<MbtEEGPacket> eegPackets2ndQuarter = getEEGDataSet2(true);
        ArrayList<MbtEEGPacket> eegPackets3rdQuarter = getEEGDataSet3(true);
        ArrayList<MbtEEGPacket> eegPackets4thQuarter = getEEGDataSet4(true);
        assertTrue(eegPackets1stQuarter.size() == 7);
        assertTrue(eegPackets2ndQuarter.size() == 8);
        assertTrue(eegPackets3rdQuarter.size() == 7);
        assertTrue(eegPackets4thQuarter.size() == 8);
        HashMap<String, float[]> computedOutput = MBTCalibrator.calibrateNew(sampRate, packetLength, 2, eegPackets1stQuarter.get(0),eegPackets1stQuarter.get(1),eegPackets1stQuarter.get(2),eegPackets1stQuarter.get(3),eegPackets1stQuarter.get(4),eegPackets1stQuarter.get(5),eegPackets1stQuarter.get(6), eegPackets2ndQuarter.get(0),eegPackets2ndQuarter.get(1),eegPackets2ndQuarter.get(2),eegPackets2ndQuarter.get(3),eegPackets2ndQuarter.get(4),eegPackets2ndQuarter.get(5),eegPackets2ndQuarter.get(6),eegPackets2ndQuarter.get(7), eegPackets3rdQuarter.get(0),eegPackets3rdQuarter.get(1),eegPackets3rdQuarter.get(2),eegPackets3rdQuarter.get(3),eegPackets3rdQuarter.get(4),eegPackets3rdQuarter.get(5),eegPackets3rdQuarter.get(6), eegPackets4thQuarter.get(0),eegPackets4thQuarter.get(1),eegPackets4thQuarter.get(2),eegPackets4thQuarter.get(3),eegPackets4thQuarter.get(4),eegPackets4thQuarter.get(5),eegPackets4thQuarter.get(6),eegPackets4thQuarter.get(7));

        StringBuilder mapToString = new StringBuilder();
        for(Map.Entry<String, float[]> entry : computedOutput.entrySet()){
            mapToString.append("\n "+entry.getKey()+" value= "+Arrays.toString(entry.getValue()));
        }
        StringBuilder mapToStringExpected = new StringBuilder();
        for(Map.Entry<String, float[]> entry : expectedOutput.entrySet()){
            mapToStringExpected.append("\n "+entry.getKey()+" value= "+Arrays.toString(entry.getValue()));
        }
        assertTrue(" map "+mapToString+"\n expected "+mapToStringExpected, isMapsEqual(computedOutput,expectedOutput)); //the same smoothing duration was given in input parameter
        assertTrue(" error "+ Arrays.toString(computedOutput.get("errorMsg")) +"\n  expected "+Arrays.toString(expectedOutput.get("errorMsg")), Arrays.equals(computedOutput.get("errorMsg"),expectedOutput.get("errorMsg")));
        assertTrue(" hist "+Arrays.toString(computedOutput.get("histFrequencies"))+"\n  expected "+Arrays.toString(expectedOutput.get("histFrequencies")), Arrays.equals(computedOutput.get("histFrequencies"),expectedOutput.get("histFrequencies")));
        assertTrue(" snr raw "+Arrays.toString(computedOutput.get("rawSnrCalib"))+"\n  expected "+Arrays.toString(expectedOutput.get("rawSnrCalib")), Arrays.equals(computedOutput.get("rawSnrCalib"),expectedOutput.get("rawSnrCalib")));
        assertTrue(" snr"+Arrays.toString(computedOutput.get("snrCalib"))+"\n  expected "+Arrays.toString(expectedOutput.get("snrCalib")), Arrays.equals(computedOutput.get("snrCalib"), expectedOutput.get("snrCalib"))); //smoothed
    }

    /**
     * check that output of calibrateNew gives two maps that contains the same (equals) array for errorMsg, histFrequencies, rawSnrCalib but two different arrays for the snrCalib (smoothed)
     */
    @Test
    public void calibrateNewCompareSmoothingSizeTest() {
        final int sampRate = 250;
        final int packetLength = sampRate;
        
        HashMap<String, float[]> expectedOutput = new HashMap<>();
        expectedOutput.put("errorMsg",new float[]{0.0f});
        expectedOutput.put("histFrequencies",new float[]{9.277344f, 10.253906f, 8.7890625f, 9.277344f, 8.7890625f, 8.7890625f, 8.7890625f, 8.300781f, 9.765625f, 9.277344f, 9.277344f, 9.277344f, 8.7890625f, 11.71875f, 12.207031f, 12.207031f, 10.7421875f, 10.7421875f, 9.765625f, 9.277344f, 6.3476562f, 6.3476562f, 12.207031f, 10.7421875f, 10.253906f, 9.765625f, 9.277344f, 9.765625f, 7.8125f, 8.7890625f, 9.277344f, 10.7421875f, 10.7421875f});
        expectedOutput.put("snrCalib",new float[]{1.3916616f, 1.5114217f, 1.6333491f, 1.7097569f, 1.7002459f, 1.691025f, 1.8396616f, 2.1427798f, 2.0394905f, 1.6949877f, 2.2045376f, 2.8871717f, 2.9505434f, 2.116245f, 1.4321058f, 1.6352859f, 2.1322348f, 1.841139f, 1.2421434f, 1.4774636f, 1.6806155f, 1.726794f, 1.7419765f, 1.6719801f, 2.0048494f, 1.913286f, 2.2426226f});
        expectedOutput.put("rawSnrCalib",new float[]{1.3916616f, 1.6311818f, 1.6355163f, 1.7839974f, 1.6164944f, 1.7655555f, 1.9137676f, 2.3717923f, 1.7071886f, 1.6827867f, 2.7262886f, 3.0480552f, 2.8530316f, 1.3794583f, 1.4847533f, 1.7858185f, 2.4786513f, 1.2036266f, 1.2806602f, 1.674267f, 1.686964f, 1.766624f, 1.7173291f, 1.6266313f, 2.3830676f, 1.4435042f, 3.041741f});

        ArrayList<MbtEEGPacket> eegPackets1stQuarter = getEEGDataSet1(true); // /!\ the data set is divided in 4 methods that return 1/4 of the data set  because it can not compile (code too large) with just 1 method
        ArrayList<MbtEEGPacket> eegPackets2ndQuarter = getEEGDataSet2(true);
        ArrayList<MbtEEGPacket> eegPackets3rdQuarter = getEEGDataSet3(true);
        ArrayList<MbtEEGPacket> eegPackets4thQuarter = getEEGDataSet4(true);

        HashMap<String, float[]> computedOutputLowSD = MBTCalibrator.calibrateNew(sampRate, packetLength, 2, eegPackets1stQuarter.get(0),eegPackets1stQuarter.get(1),eegPackets1stQuarter.get(2),eegPackets1stQuarter.get(3),eegPackets1stQuarter.get(4),eegPackets1stQuarter.get(5),eegPackets1stQuarter.get(6), eegPackets2ndQuarter.get(0),eegPackets2ndQuarter.get(1),eegPackets2ndQuarter.get(2),eegPackets2ndQuarter.get(3),eegPackets2ndQuarter.get(4),eegPackets2ndQuarter.get(5),eegPackets2ndQuarter.get(6),eegPackets2ndQuarter.get(7), eegPackets3rdQuarter.get(0),eegPackets3rdQuarter.get(1),eegPackets3rdQuarter.get(2),eegPackets3rdQuarter.get(3),eegPackets3rdQuarter.get(4),eegPackets3rdQuarter.get(5),eegPackets3rdQuarter.get(6), eegPackets4thQuarter.get(0),eegPackets4thQuarter.get(1),eegPackets4thQuarter.get(2),eegPackets4thQuarter.get(3),eegPackets4thQuarter.get(4),eegPackets4thQuarter.get(5),eegPackets4thQuarter.get(6),eegPackets4thQuarter.get(7));
        HashMap<String, float[]> computedOutputHighSD = MBTCalibrator.calibrateNew(sampRate, packetLength,4, eegPackets1stQuarter.get(0),eegPackets1stQuarter.get(1),eegPackets1stQuarter.get(2),eegPackets1stQuarter.get(3),eegPackets1stQuarter.get(4),eegPackets1stQuarter.get(5),eegPackets1stQuarter.get(6), eegPackets2ndQuarter.get(0),eegPackets2ndQuarter.get(1),eegPackets2ndQuarter.get(2),eegPackets2ndQuarter.get(3),eegPackets2ndQuarter.get(4),eegPackets2ndQuarter.get(5),eegPackets2ndQuarter.get(6),eegPackets2ndQuarter.get(7), eegPackets3rdQuarter.get(0),eegPackets3rdQuarter.get(1),eegPackets3rdQuarter.get(2),eegPackets3rdQuarter.get(3),eegPackets3rdQuarter.get(4),eegPackets3rdQuarter.get(5),eegPackets3rdQuarter.get(6), eegPackets4thQuarter.get(0),eegPackets4thQuarter.get(1),eegPackets4thQuarter.get(2),eegPackets4thQuarter.get(3),eegPackets4thQuarter.get(4),eegPackets4thQuarter.get(5),eegPackets4thQuarter.get(6),eegPackets4thQuarter.get(7));

        StringBuilder mapToStringHigh = new StringBuilder();
        for(Map.Entry<String, float[]> entry : computedOutputHighSD.entrySet()){
            mapToStringHigh.append("\n "+entry.getKey()+" value= "+Arrays.toString(entry.getValue()));
        }
        StringBuilder mapToStringLow = new StringBuilder();
        for(Map.Entry<String, float[]> entry : computedOutputLowSD.entrySet()){
            mapToStringLow.append("\n "+entry.getKey()+" value= "+Arrays.toString(entry.getValue()));
        }
        StringBuilder mapToStringExpected = new StringBuilder();
        for(Map.Entry<String, float[]> entry : expectedOutput.entrySet()){
            mapToStringExpected.append("\n "+entry.getKey()+" value= "+Arrays.toString(entry.getValue()));
        }

        assertTrue(" MAP low "+mapToStringLow+"\n MAP high "+mapToStringExpected, isMapsEqual(computedOutputLowSD,expectedOutput)); //the same smoothing duration was given in input parameter
        assertTrue(" error low  "+ Arrays.toString(computedOutputLowSD.get("errorMsg")) +"\n  high "+Arrays.toString(computedOutputHighSD.get("errorMsg")), Arrays.equals(computedOutputLowSD.get("errorMsg"),computedOutputHighSD.get("errorMsg")));
        assertTrue(" hist low  "+Arrays.toString(computedOutputLowSD.get("histFrequencies"))+"\n  high "+Arrays.toString(computedOutputHighSD.get("histFrequencies")), Arrays.equals(computedOutputLowSD.get("histFrequencies"),computedOutputHighSD.get("histFrequencies")));
        assertTrue(" snr raw low  "+Arrays.toString(computedOutputLowSD.get("rawSnrCalib"))+"\n  high "+Arrays.toString(computedOutputHighSD.get("rawSnrCalib")), Arrays.equals(computedOutputLowSD.get("rawSnrCalib"),computedOutputHighSD.get("rawSnrCalib")));

        assertTrue(" low snr"+mapToStringLow+"\n  high "+mapToStringHigh, !Arrays.equals(computedOutputLowSD.get("snrCalib"), computedOutputHighSD.get("snrCalib"))); //smoothed
    }

    private boolean isMapsEqual(HashMap<String, float[]> map1, HashMap<String, float[]> map2){
        boolean isEqual = false;
        if (map1.size()== map2.size() && map1.containsKey("errorMsg") && map2.containsKey("errorMsg") && Arrays.equals(map1.get("errorMsg"), map2.get("errorMsg")) && map1.containsKey("histFrequencies") && map2.containsKey("histFrequencies") && Arrays.equals(map1.get("histFrequencies"), map2.get("histFrequencies")) && map1.containsKey("snrCalib") && map2.containsKey("snrCalib") && Arrays.equals(map1.get("snrCalib"), map2.get("snrCalib")) && map1.containsKey("rawSnrCalib") && map2.containsKey("rawSnrCalib") && Arrays.equals(map1.get("rawSnrCalib"), map2.get("rawSnrCalib")))
            isEqual = true;
        return isEqual;
    }

    @Test
    public void calibrateNewZeroSampRateTest() {
        final int sampRate = 0;
        final int packetLength = 1;
        final ArrayList<ArrayList<Float>> channelsData = new ArrayList<ArrayList<Float>>();
        channelsData.add(new ArrayList<Float>());
        channelsData.add(new ArrayList<Float>());//channels data size must equals 2
        ArrayList<Float> qualities = new ArrayList<Float>();
        qualities.add(1F);
        qualities.add(1F);
        
        final MbtEEGPacket packets = new MbtEEGPacket(channelsData, null);
        HashMap<String, float[]> map = MBTCalibrator.calibrateNew(sampRate, packetLength, ContextSP.smoothingDuration, packets);
        assertNotNull(map);
    }

    @Test (expected = IllegalArgumentException.class)
    public void calibrateNewNegativeSampRateTest() {
        final int sampRate = -1; //check that IllegalArgumentException is raised if samprate is negative
        final int packetLength = 0;
        final ArrayList<ArrayList<Float>> channelsData = new ArrayList<ArrayList<Float>>();
        channelsData.add(new ArrayList<>());
        channelsData.add(new ArrayList<>());//channels data size must equals 2
        ArrayList<Float> qualities = new ArrayList<>();
        qualities.add(1F);
        
        final MbtEEGPacket packets = new MbtEEGPacket(channelsData, null);
        MBTCalibrator.calibrateNew(sampRate, packetLength, ContextSP.smoothingDuration, packets);
    }

    @Test (expected = IllegalArgumentException.class)
    public void calibrateNewNegativePacketLengthTest() {
        final int sampRate = 0;
        final int packetLength = -1; //check that IllegalArgumentException is raised if packetsLength is negative
        final ArrayList<ArrayList<Float>> channelsData = new ArrayList<>();
        channelsData.add(new ArrayList<>());
        channelsData.add(new ArrayList<>());//channels data size must equals 2
        ArrayList<Float> qualities = new ArrayList<>();
        qualities.add(1F);
        
        final MbtEEGPacket packets = new MbtEEGPacket(channelsData, null);
        MBTCalibrator.calibrateNew(sampRate, packetLength, ContextSP.smoothingDuration, packets);
    }

    @Test (expected = NullPointerException.class)
    public void calibrateNewPacketsNullTest() {
        final int sampRate = 0;
        final int packetLength = 0;
        final MbtEEGPacket packets = null; //check that IllegalArgumentException is raised if packets is null
        MBTCalibrator.calibrateNew(sampRate, packetLength, ContextSP.smoothingDuration, packets);
    }

    @Test (expected = IllegalArgumentException.class)
    public void calibrateNewPacketsEmptyTest() {
        final int sampRate = 0;
        final int packetLength = 0;
        final MbtEEGPacket[] packets = new MbtEEGPacket[0]; //check that IllegalArgumentException is raised if packets.size = 0
        MBTCalibrator.calibrateNew(sampRate, packetLength, ContextSP.smoothingDuration, packets);
    }
    /**
     * Check that the calibrateNew method generates a calibration map equals to an expected output (with -2 error, no hist frequencies, and infinity snrCalib and rawSnrCalib for a given/defined input
     */
    @Test
    public void calibrateNewNoQualitiesTest() {
        final int sampRate = 250;
        final int packetLength = sampRate;
        final int smoothingDuration = 2;

        HashMap<String, float[]> expectedOutput = new HashMap<>();
        expectedOutput.put("errorMsg",new float[]{-2.0f});
        expectedOutput.put("histFrequencies",new float[0]);
        expectedOutput.put("snrCalib",new float[]{Float.POSITIVE_INFINITY});
        expectedOutput.put("rawSnrCalib",new float[]{Float.POSITIVE_INFINITY});

        ArrayList<MbtEEGPacket> eegPackets1stQuarter = getEEGDataSet1(false); // /!\ the data set is divided in 4 methods that return 1/4 of the data set  because it can not compile (code too large) with just 1 method
        ArrayList<MbtEEGPacket> eegPackets2ndQuarter = getEEGDataSet2(false);
        ArrayList<MbtEEGPacket> eegPackets3rdQuarter = getEEGDataSet3(false);
        ArrayList<MbtEEGPacket> eegPackets4thQuarter = getEEGDataSet4(false);
        HashMap<String, float[]> computedOutput = MBTCalibrator.calibrateNew(sampRate, packetLength, smoothingDuration, eegPackets1stQuarter.get(0),eegPackets1stQuarter.get(1),eegPackets1stQuarter.get(2),eegPackets1stQuarter.get(3),eegPackets1stQuarter.get(4),eegPackets1stQuarter.get(5),eegPackets1stQuarter.get(6), eegPackets2ndQuarter.get(0),eegPackets2ndQuarter.get(1),eegPackets2ndQuarter.get(2),eegPackets2ndQuarter.get(3),eegPackets2ndQuarter.get(4),eegPackets2ndQuarter.get(5),eegPackets2ndQuarter.get(6),eegPackets2ndQuarter.get(7), eegPackets3rdQuarter.get(0),eegPackets3rdQuarter.get(1),eegPackets3rdQuarter.get(2),eegPackets3rdQuarter.get(3),eegPackets3rdQuarter.get(4),eegPackets3rdQuarter.get(5),eegPackets3rdQuarter.get(6), eegPackets4thQuarter.get(0),eegPackets4thQuarter.get(1),eegPackets4thQuarter.get(2),eegPackets4thQuarter.get(3),eegPackets4thQuarter.get(4),eegPackets4thQuarter.get(5),eegPackets4thQuarter.get(6),eegPackets4thQuarter.get(7));

        StringBuilder mapToString = new StringBuilder();
        for(Map.Entry<String, float[]> entry : computedOutput.entrySet()){
            mapToString.append("\n "+entry.getKey()+" value= "+Arrays.toString(entry.getValue()));
        }
        StringBuilder mapToStringExpected = new StringBuilder();
        for(Map.Entry<String, float[]> entry : expectedOutput.entrySet()){
            mapToStringExpected.append("\n "+entry.getKey()+" value= "+Arrays.toString(entry.getValue()));
        }
        assertTrue("computed "+ mapToString+" expected "+mapToStringExpected,isMapsEqual(computedOutput,expectedOutput));
    }


    @Test
    public void calibrateNewPacketsQualitiesTest() {
        final int sampRate = 0;
        final int packetLength = 0;
        final ArrayList<ArrayList<Float>> channelsData = new ArrayList<>();
        channelsData.add(new ArrayList<>());
        channelsData.add(new ArrayList<>());//channels data size must equals 2
        ArrayList<Float> qualities = new ArrayList<>();
        qualities.add(1F);
        qualities.add(1F);
        
        final MbtEEGPacket packets = new MbtEEGPacket(channelsData, null);
        HashMap<String, float[]> map = MBTCalibrator.calibrateNew(sampRate, packetLength, ContextSP.smoothingDuration, packets);
        if(packets.getQualities()!=null)
            assertFalse(packets.getQualities().isEmpty()); //check that packets qualities is not empty

    }

    private ArrayList<MbtEEGPacket> getEEGDataSet1(boolean useQualities) {
        ArrayList<MbtEEGPacket> eegPacketsList = new ArrayList<>();
        ArrayList<ArrayList<Float>> channelsData = new ArrayList<>();
        channelsData.add(new ArrayList<>(Arrays.asList(
                -2.86E-5f, -1.5443999E-5f, -6.292E-6f, -6.8639997E-6f, -1.43E-5f, -2.1164E-5f, -2.1736E-5f, -1.6588E-5f, -9.724E-6f, -5.7199995E-6f, -2.288E-6f, -2.288E-6f, -5.7199995E-6f, -9.152E-6f, -1.0868E-5f, -9.152E-6f, -6.8639997E-6f, -5.1479997E-6f, -5.1479997E-6f, -8.008E-6f, -9.152E-6f, -9.724E-6f, -1.0868E-5f, -1.3727999E-5f, -1.2584E-5f, -5.7199995E-6f, 5.72E-7f, 1.144E-6f, -2.288E-6f, -6.292E-6f, -3.4319999E-6f, 9.724E-6f, 2.4595998E-5f, 3.0887997E-5f, 2.9743998E-5f, 2.9743998E-5f, 3.2604E-5f, 3.5464E-5f, 3.4892E-5f, 2.7455999E-5f, 1.8875999E-5f, 1.3727999E-5f, 1.43E-5f, 1.6588E-5f, 1.3155999E-5f, 7.4359996E-6f, 4.004E-6f, 4.004E-6f, 5.1479997E-6f, 2.288E-6f, -1.144E-6f, -3.4319999E-6f, -1.144E-6f, 6.292E-6f, 1.5443999E-5f, 2.4595998E-5f, 3.146E-5f, 3.4319997E-5f, 3.3747998E-5f, 2.9171999E-5f, 2.5168E-5f, 2.7455999E-5f, 3.4892E-5f, 4.0611998E-5f, 3.8323997E-5f, 3.146E-5f, 2.2879998E-5f, 1.5443999E-5f, 1.1439999E-5f, 8.579999E-6f, 6.8639997E-6f, 2.8599998E-6f, -1.144E-6f, 1.144E-6f, 4.004E-6f, 6.8639997E-6f, 1.1439999E-5f, 1.7159999E-5f, 2.3452E-5f, 2.5168E-5f, 2.4595998E-5f, 2.4595998E-5f, 2.2307999E-5f, 1.7159999E-5f, 1.2584E-5f, 1.3727999E-5f, 2.1736E-5f, 3.5464E-5f, 4.8619997E-5f, 5.0336E-5f, 4.2328E-5f, 3.0316E-5f, 1.7732E-5f, 6.8639997E-6f, -4.004E-6f, -5.7199995E-6f, 5.1479997E-6f, 2.002E-5f, 2.8027998E-5f, 2.5739999E-5f, 1.9448E-5f, 1.0868E-5f, 0.0f, -7.4359996E-6f, -8.579999E-6f, -1.7159999E-6f, 8.579999E-6f, 2.002E-5f, 3.0887997E-5f, 3.4319997E-5f, 3.0887997E-5f, 2.4023999E-5f, 1.3155999E-5f, 1.7159999E-6f, -6.8639997E-6f, -8.579999E-6f, -5.7199995E-6f, 1.7159999E-6f, 1.6588E-5f, 3.0887997E-5f, 3.8896E-5f, 4.1183997E-5f, 3.6608E-5f, 2.8027998E-5f, 1.8304E-5f, 1.43E-5f, 2.002E-5f, 2.86E-5f, 3.2032E-5f, 2.4595998E-5f, 1.4871999E-5f, 1.3727999E-5f, 2.0591999E-5f, 2.8027998E-5f, 2.5739999E-5f, 1.5443999E-5f, 5.1479997E-6f, -5.72E-7f, -5.72E-7f, 1.7159999E-6f, 6.8639997E-6f, 1.43E-5f, 1.9448E-5f, 2.0591999E-5f, 1.7159999E-5f, 1.3727999E-5f, 1.0868E-5f, 1.0295999E-5f, 1.1439999E-5f, 1.2584E-5f, 1.0868E-5f, 5.7199995E-6f, -5.72E-7f, 5.72E-7f, 8.008E-6f, 1.7159999E-5f, 2.5168E-5f, 2.86E-5f, 2.5739999E-5f, 1.6016E-5f, 6.292E-6f, 1.7159999E-6f, 1.144E-6f, 4.576E-6f, 6.292E-6f, 2.288E-6f, -5.7199995E-6f, -1.5443999E-5f, -2.2879998E-5f, -2.6884E-5f, -2.5168E-5f, -1.8875999E-5f, -1.6016E-5f, -1.8875999E-5f, -2.8027998E-5f, -3.8323997E-5f, -4.5187997E-5f, -4.6332E-5f, -4.4043998E-5f, -4.1183997E-5f, -3.2604E-5f, -1.5443999E-5f, -5.72E-7f, 3.4319999E-6f, -4.576E-6f, -1.8875999E-5f, -2.9171999E-5f, -3.3747998E-5f, -3.2604E-5f, -3.146E-5f, -3.0316E-5f, -2.8027998E-5f, -2.3452E-5f, -1.8875999E-5f, -1.8304E-5f, -2.0591999E-5f, -1.9448E-5f, -1.6016E-5f, -1.3155999E-5f, -1.3727999E-5f, -1.7159999E-5f, -1.8304E-5f, -1.7732E-5f, -1.4871999E-5f, -1.2011999E-5f, -9.724E-6f, -7.4359996E-6f, -6.292E-6f, -6.8639997E-6f, -1.2011999E-5f, -2.2307999E-5f, -2.9171999E-5f, -2.5168E-5f, -1.3155999E-5f, -4.004E-6f, -2.288E-6f, -5.7199995E-6f, -8.579999E-6f, -6.292E-6f, -3.4319999E-6f, -5.1479997E-6f, -1.0868E-5f, -1.9448E-5f, -2.4595998E-5f, -2.6311998E-5f, -2.5168E-5f, -2.0591999E-5f, -1.4871999E-5f, -9.724E-6f, -9.724E-6f, -1.4871999E-5f, -1.9448E-5f, -2.2307999E-5f, -2.5168E-5f, -2.86E-5f, -3.146E-5f, -3.2604E-5f, -3.5464E-5f, -3.7751997E-5f, -3.8323997E-5f, -3.6036E-5f, -3.146E-5f, -2.7455999E-5f, -2.1736E-5f, -1.3155999E-5f, -3.4319999E-6f, 6.292E-6f, 1.2584E-5f, 1.2011999E-5f, 8.008E-6f
        )));
        channelsData.add(new ArrayList<>(Arrays.asList(
                -8.1223996E-5f, -6.8067995E-5f, -5.8343998E-5f, -5.6055997E-5f, -6.1203995E-5f, -6.7495996E-5f, -6.6352E-5f, -5.72E-5f, -4.5759996E-5f, -3.8323997E-5f, -3.7179998E-5f, -4.004E-5f, -4.4615997E-5f, -4.5187997E-5f, -4.3472E-5f, -4.29E-5f, -4.2328E-5f, -4.1755997E-5f, -4.0611998E-5f, -4.2328E-5f, -4.6332E-5f, -5.1479998E-5f, -5.5483997E-5f, -5.6627996E-5f, -5.3768E-5f, -4.9191996E-5f, -4.8047998E-5f, -5.1479998E-5f, -5.6627996E-5f, -6.0632E-5f, -6.1203995E-5f, -5.3768E-5f, -4.3472E-5f, -3.4892E-5f, -2.8027998E-5f, -2.1164E-5f, -1.3727999E-5f, -6.8639997E-6f, -3.4319999E-6f, -8.008E-6f, -1.7732E-5f, -2.5739999E-5f, -2.7455999E-5f, -2.6311998E-5f, -2.86E-5f, -3.6608E-5f, -4.1183997E-5f, -3.8323997E-5f, -3.0316E-5f, -2.4023999E-5f, -2.2307999E-5f, -2.4023999E-5f, -2.2879998E-5f, -1.6016E-5f, -5.7199995E-6f, 3.4319999E-6f, 1.0868E-5f, 1.7159999E-5f, 2.1736E-5f, 2.2307999E-5f, 1.8875999E-5f, 1.8304E-5f, 2.1164E-5f, 2.4595998E-5f, 2.2879998E-5f, 1.4871999E-5f, 5.1479997E-6f, -4.004E-6f, -9.724E-6f, -1.2584E-5f, -1.3727999E-5f, -1.5443999E-5f, -1.4871999E-5f, -9.724E-6f, -4.004E-6f, -2.8599998E-6f, -2.288E-6f, 1.144E-6f, 7.4359996E-6f, 1.3155999E-5f, 1.6016E-5f, 1.8875999E-5f, 2.0591999E-5f, 2.0591999E-5f, 2.1736E-5f, 2.5168E-5f, 3.2032E-5f, 4.3472E-5f, 5.6055997E-5f, 6.1203995E-5f, 5.3768E-5f, 3.8323997E-5f, 2.2879998E-5f, 1.0868E-5f, 2.288E-6f, 0.0f, 9.152E-6f, 2.2307999E-5f, 2.9743998E-5f, 2.9743998E-5f, 2.4023999E-5f, 1.4871999E-5f, 4.004E-6f, -2.288E-6f, 0.0f, 8.579999E-6f, 1.8875999E-5f, 3.0316E-5f, 4.1755997E-5f, 4.9191996E-5f, 4.8619997E-5f, 4.4043998E-5f, 3.4892E-5f, 2.4595998E-5f, 1.7159999E-5f, 1.3727999E-5f, 1.3155999E-5f, 1.7159999E-5f, 3.0887997E-5f, 4.9191996E-5f, 6.1775994E-5f, 6.8639994E-5f, 6.8639994E-5f, 6.578E-5f, 6.3492E-5f, 6.2348E-5f, 6.5208E-5f, 6.9784E-5f, 7.0356E-5f, 6.5208E-5f, 5.8915997E-5f, 5.8343998E-5f, 6.2348E-5f, 6.4636E-5f, 6.0632E-5f, 5.0336E-5f, 4.0611998E-5f, 3.3747998E-5f, 3.2604E-5f, 3.4892E-5f, 4.0611998E-5f, 4.7475998E-5f, 5.3768E-5f, 5.72E-5f, 5.8343998E-5f, 5.6627996E-5f, 5.3768E-5f, 5.1479998E-5f, 5.2623996E-5f, 5.6055997E-5f, 5.7772E-5f, 5.434E-5f, 4.9764E-5f, 5.2051997E-5f, 6.2348E-5f, 7.2072E-5f, 7.7792E-5f, 7.9508E-5f, 7.9508E-5f, 7.4931995E-5f, 6.8067995E-5f, 6.2348E-5f, 5.9487997E-5f, 6.1203995E-5f, 6.3492E-5f, 5.9487997E-5f, 4.8619997E-5f, 3.6608E-5f, 2.9171999E-5f, 2.7455999E-5f, 2.9171999E-5f, 3.0316E-5f, 3.0316E-5f, 2.86E-5f, 2.2879998E-5f, 1.3155999E-5f, 3.4319999E-6f, 5.72E-7f, 4.004E-6f, 1.0295999E-5f, 2.0591999E-5f, 3.4892E-5f, 4.6332E-5f, 4.8619997E-5f, 4.1755997E-5f, 2.86E-5f, 1.5443999E-5f, 7.4359996E-6f, 4.004E-6f, 5.72E-7f, -4.576E-6f, -8.579999E-6f, -9.152E-6f, -7.4359996E-6f, -8.008E-6f, -1.0868E-5f, -1.1439999E-5f, -8.579999E-6f, -4.576E-6f, -3.4319999E-6f, -6.292E-6f, -1.0868E-5f, -1.3155999E-5f, -1.2011999E-5f, -8.579999E-6f, -5.7199995E-6f, -3.4319999E-6f, -2.288E-6f, -4.004E-6f, -9.152E-6f, -2.1164E-5f, -3.2604E-5f, -3.2604E-5f, -2.2879998E-5f, -1.2011999E-5f, -1.0295999E-5f, -1.7732E-5f, -2.5168E-5f, -2.5739999E-5f, -2.1736E-5f, -2.1736E-5f, -2.9171999E-5f, -4.1183997E-5f, -4.9191996E-5f, -5.1479998E-5f, -5.1479998E-5f, -5.0908E-5f, -4.8619997E-5f, -4.5187997E-5f, -4.3472E-5f, -4.8047998E-5f, -5.434E-5f, -5.8915997E-5f, -6.1203995E-5f, -6.292E-5f, -6.6923996E-5f, -7.2644E-5f, -7.8936E-5f, -8.1223996E-5f, -7.722E-5f, -7.0928E-5f, -6.4064E-5f, -5.9487997E-5f, -5.3768E-5f, -4.4615997E-5f, -3.5464E-5f, -2.9171999E-5f, -2.6311998E-5f, -2.9743998E-5f, -3.3176E-5f
        )));
        MbtEEGPacket eegPacket = new MbtEEGPacket(channelsData);
        if(useQualities)
            eegPacket.setQualities(new ArrayList<Float>(Arrays.asList(ArrayUtils.toObject(MBTSignalQualityChecker.computeQualitiesForPacketNew(250,250,channelsData)))));
        eegPacketsList.add(eegPacket);
        channelsData = new ArrayList<>();

        channelsData.add(new ArrayList<>(Arrays.asList(
                8.579999E-6f, 1.3155999E-5f, 1.6016E-5f, 1.6588E-5f, 1.3155999E-5f, 6.292E-6f, 1.7159999E-6f, 2.8599998E-6f, 1.0868E-5f, 1.9448E-5f, 2.5168E-5f, 2.86E-5f, 2.6311998E-5f, 2.0591999E-5f, 1.2011999E-5f, 3.4319999E-6f, -5.72E-7f, 0.0f, 3.4319999E-6f, 9.724E-6f, 1.8304E-5f, 2.8027998E-5f, 3.3176E-5f, 3.0316E-5f, 1.8304E-5f, 2.8599998E-6f, -6.292E-6f, -8.579999E-6f, -9.724E-6f, -1.6588E-5f, -2.5739999E-5f, -2.8027998E-5f, -1.4871999E-5f, 8.579999E-6f, 2.6884E-5f, 2.9743998E-5f, 1.9448E-5f, 2.8599998E-6f, -1.0868E-5f, -1.3727999E-5f, -9.724E-6f, -1.7159999E-6f, 5.1479997E-6f, 6.292E-6f, 2.8599998E-6f, -2.8599998E-6f, -4.576E-6f, -4.004E-6f, -5.1479997E-6f, -9.724E-6f, -1.6588E-5f, -1.8875999E-5f, -1.6016E-5f, -1.2011999E-5f, -1.2011999E-5f, -1.6016E-5f, -1.7732E-5f, -1.6588E-5f, -1.2011999E-5f, -5.7199995E-6f, -5.72E-7f, 1.7159999E-6f, 0.0f, -7.4359996E-6f, -1.8875999E-5f, -2.9743998E-5f, -2.7455999E-5f, -1.0868E-5f, 8.579999E-6f, 1.8304E-5f, 1.0295999E-5f, -5.7199995E-6f, -1.5443999E-5f, -1.0295999E-5f, 2.8599998E-6f, 1.3155999E-5f, 1.7159999E-5f, 1.5443999E-5f, 1.3155999E-5f, 1.3155999E-5f, 1.5443999E-5f, 1.8304E-5f, 1.8875999E-5f, 1.6588E-5f, 1.43E-5f, 1.6016E-5f, 2.4023999E-5f, 3.2032E-5f, 3.5464E-5f, 3.3747998E-5f, 2.9171999E-5f, 2.7455999E-5f, 2.5168E-5f, 2.002E-5f, 1.5443999E-5f, 1.2584E-5f, 1.5443999E-5f, 2.002E-5f, 1.7159999E-5f, 7.4359996E-6f, -4.004E-6f, -8.008E-6f, -4.576E-6f, 2.8599998E-6f, 9.152E-6f, 6.8639997E-6f, 0.0f, -4.004E-6f, 0.0f, 1.0868E-5f, 1.6588E-5f, 1.43E-5f, 6.8639997E-6f, 5.72E-7f, -5.72E-7f, 1.144E-6f, 4.004E-6f, 5.1479997E-6f, 1.7159999E-6f, -3.4319999E-6f, -8.579999E-6f, -1.0868E-5f, -9.724E-6f, -9.152E-6f, -1.2011999E-5f, -2.1164E-5f, -2.9171999E-5f, -2.6884E-5f, -1.6588E-5f, -5.1479997E-6f, 0.0f, -5.72E-7f, -7.4359996E-6f, -1.7159999E-5f, -2.3452E-5f, -2.5739999E-5f, -2.1164E-5f, -1.5443999E-5f, -1.2011999E-5f, -8.008E-6f, -3.4319999E-6f, 2.288E-6f, 8.579999E-6f, 9.152E-6f, 5.72E-7f, -1.0868E-5f, -1.3155999E-5f, -6.292E-6f, 2.288E-6f, 5.7199995E-6f, 5.72E-7f, -8.579999E-6f, -1.5443999E-5f, -1.8875999E-5f, -1.8875999E-5f, -1.9448E-5f, -1.8875999E-5f, -1.4871999E-5f, -1.0868E-5f, -1.1439999E-5f, -1.5443999E-5f, -1.8304E-5f, -1.43E-5f, -1.7159999E-6f, 1.3727999E-5f, 2.0591999E-5f, 1.6588E-5f, 9.152E-6f, 3.4319999E-6f, 3.4319999E-6f, 2.8599998E-6f, 0.0f, -5.1479997E-6f, -1.1439999E-5f, -1.7159999E-5f, -2.1164E-5f, -2.1164E-5f, -1.3155999E-5f, -1.7159999E-6f, 6.292E-6f, 4.004E-6f, -2.288E-6f, -1.144E-6f, 1.0295999E-5f, 2.6311998E-5f, 3.5464E-5f, 3.146E-5f, 1.9448E-5f, 5.7199995E-6f, -3.4319999E-6f, -7.4359996E-6f, -5.7199995E-6f, -4.004E-6f, -7.4359996E-6f, -1.2011999E-5f, -1.0295999E-5f, 0.0f, 1.3155999E-5f, 2.002E-5f, 1.9448E-5f, 1.1439999E-5f, 3.4319999E-6f, 2.8599998E-6f, 6.8639997E-6f, 9.152E-6f, 5.7199995E-6f, -5.72E-7f, -4.576E-6f, -2.288E-6f, 5.7199995E-6f, 1.2011999E-5f, 1.2584E-5f, 1.2011999E-5f, 1.0295999E-5f, 6.8639997E-6f, 1.144E-6f, -4.004E-6f, -6.292E-6f, -7.4359996E-6f, -5.1479997E-6f, -1.144E-6f, 3.4319999E-6f, 7.4359996E-6f, 8.579999E-6f, 4.004E-6f, -5.1479997E-6f, -1.2584E-5f, -1.3155999E-5f, -9.724E-6f, -6.292E-6f, -5.7199995E-6f, -6.292E-6f, -6.8639997E-6f, -8.008E-6f, -8.579999E-6f, -5.7199995E-6f, 2.8599998E-6f, 1.3727999E-5f, 2.2879998E-5f, 3.0887997E-5f, 3.3747998E-5f, 3.146E-5f, 3.0316E-5f, 2.9171999E-5f, 2.6884E-5f, 2.5168E-5f, 2.9171999E-5f, 4.1183997E-5f, 5.3196E-5f, 5.6627996E-5f
        )));
        channelsData.add(new ArrayList<>(Arrays.asList(
                -3.146E-5f, -2.6311998E-5f, -2.2307999E-5f, -2.0591999E-5f, -2.1164E-5f, -2.4595998E-5f, -2.86E-5f, -2.7455999E-5f, -2.1164E-5f, -1.1439999E-5f, -4.576E-6f, -2.288E-6f, -5.7199995E-6f, -1.2011999E-5f, -1.8304E-5f, -2.5739999E-5f, -3.2604E-5f, -3.7751997E-5f, -4.004E-5f, -3.7179998E-5f, -2.9743998E-5f, -2.3452E-5f, -2.1164E-5f, -2.4023999E-5f, -3.3747998E-5f, -4.6904E-5f, -5.72E-5f, -6.0632E-5f, -6.1775994E-5f, -6.4636E-5f, -6.8639994E-5f, -6.8067995E-5f, -5.4911998E-5f, -3.3176E-5f, -1.6016E-5f, -1.43E-5f, -2.7455999E-5f, -4.6332E-5f, -6.0632E-5f, -6.4064E-5f, -6.1203995E-5f, -5.6627996E-5f, -5.2051997E-5f, -4.7475998E-5f, -4.29E-5f, -4.1183997E-5f, -4.004E-5f, -3.9468E-5f, -4.004E-5f, -4.2328E-5f, -4.4615997E-5f, -4.4615997E-5f, -4.0611998E-5f, -3.3176E-5f, -2.6311998E-5f, -2.4023999E-5f, -2.2879998E-5f, -2.1164E-5f, -1.7159999E-5f, -9.152E-6f, -1.144E-6f, 2.288E-6f, 0.0f, -8.579999E-6f, -2.0591999E-5f, -2.9743998E-5f, -2.6311998E-5f, -9.152E-6f, 9.724E-6f, 1.8304E-5f, 1.0295999E-5f, -7.4359996E-6f, -1.7732E-5f, -1.2011999E-5f, 3.4319999E-6f, 1.6588E-5f, 2.002E-5f, 1.5443999E-5f, 1.0295999E-5f, 1.0295999E-5f, 1.5443999E-5f, 2.002E-5f, 2.1164E-5f, 1.8304E-5f, 1.5443999E-5f, 1.7159999E-5f, 2.4023999E-5f, 3.0316E-5f, 3.0887997E-5f, 2.7455999E-5f, 2.1736E-5f, 1.7732E-5f, 1.4871999E-5f, 1.0868E-5f, 9.152E-6f, 1.0295999E-5f, 1.5443999E-5f, 2.002E-5f, 1.7732E-5f, 6.8639997E-6f, -5.1479997E-6f, -1.2011999E-5f, -1.0868E-5f, -1.144E-6f, 9.724E-6f, 1.2011999E-5f, 5.1479997E-6f, -2.8599998E-6f, -3.4319999E-6f, 4.576E-6f, 1.2011999E-5f, 1.0868E-5f, 3.4319999E-6f, -2.8599998E-6f, -2.288E-6f, 3.4319999E-6f, 9.152E-6f, 1.3155999E-5f, 1.3727999E-5f, 1.2011999E-5f, 9.152E-6f, 4.576E-6f, 5.72E-7f, -5.72E-7f, -1.144E-6f, -5.1479997E-6f, -9.724E-6f, -7.4359996E-6f, 1.7159999E-6f, 1.4871999E-5f, 2.4023999E-5f, 2.5739999E-5f, 1.8875999E-5f, 9.152E-6f, 2.8599998E-6f, 2.288E-6f, 6.8639997E-6f, 1.2584E-5f, 1.7732E-5f, 2.4595998E-5f, 3.4319997E-5f, 4.2328E-5f, 4.7475998E-5f, 4.6332E-5f, 3.8323997E-5f, 3.0887997E-5f, 3.2032E-5f, 4.004E-5f, 4.8047998E-5f, 5.2051997E-5f, 4.9764E-5f, 4.1183997E-5f, 3.4319997E-5f, 3.146E-5f, 3.4319997E-5f, 3.7751997E-5f, 3.9468E-5f, 4.1183997E-5f, 4.0611998E-5f, 3.6608E-5f, 3.2604E-5f, 3.0316E-5f, 3.2604E-5f, 4.4043998E-5f, 5.8915997E-5f, 6.6923996E-5f, 6.3492E-5f, 5.434E-5f, 4.7475998E-5f, 4.6332E-5f, 4.6332E-5f, 4.29E-5f, 3.4319997E-5f, 2.3452E-5f, 1.4871999E-5f, 1.1439999E-5f, 1.1439999E-5f, 1.6588E-5f, 2.5168E-5f, 3.146E-5f, 3.0887997E-5f, 2.4023999E-5f, 2.2879998E-5f, 3.146E-5f, 4.5187997E-5f, 5.3196E-5f, 4.7475998E-5f, 3.3176E-5f, 1.7732E-5f, 8.579999E-6f, 6.8639997E-6f, 8.008E-6f, 6.8639997E-6f, 1.144E-6f, -2.8599998E-6f, 1.144E-6f, 1.2011999E-5f, 2.2307999E-5f, 2.6311998E-5f, 2.2307999E-5f, 1.2011999E-5f, 1.7159999E-6f, -1.7159999E-6f, 1.144E-6f, 5.7199995E-6f, 9.152E-6f, 6.8639997E-6f, 1.7159999E-6f, -5.72E-7f, 3.4319999E-6f, 9.152E-6f, 1.0868E-5f, 1.0295999E-5f, 9.152E-6f, 5.7199995E-6f, 1.7159999E-6f, -1.7159999E-6f, -2.288E-6f, -1.144E-6f, 3.4319999E-6f, 1.0295999E-5f, 1.43E-5f, 1.3155999E-5f, 8.579999E-6f, 0.0f, -1.0295999E-5f, -1.8875999E-5f, -2.1736E-5f, -2.0591999E-5f, -1.7732E-5f, -1.4871999E-5f, -1.2584E-5f, -1.2584E-5f, -1.6016E-5f, -2.0591999E-5f, -2.2879998E-5f, -2.2307999E-5f, -2.1164E-5f, -1.8304E-5f, -1.2584E-5f, -9.724E-6f, -1.2584E-5f, -1.7159999E-5f, -2.1164E-5f, -2.5168E-5f, -2.5739999E-5f, -2.002E-5f, -9.724E-6f, 0.0f, 3.4319999E-6f
        )));
        eegPacket = new MbtEEGPacket(channelsData);
        if(useQualities)
            eegPacket.setQualities(new ArrayList<Float>(Arrays.asList(ArrayUtils.toObject(MBTSignalQualityChecker.computeQualitiesForPacketNew(250,250,channelsData)))));
        eegPacketsList.add(eegPacket);
        channelsData = new ArrayList<>();

        channelsData.add(new ArrayList<>(Arrays.asList(
                4.8619997E-5f, 3.3747998E-5f, 2.1736E-5f, 1.7159999E-5f, 1.8304E-5f, 1.7159999E-5f, 1.2011999E-5f, 1.0295999E-5f, 1.3155999E-5f, 1.8875999E-5f, 2.002E-5f, 1.3155999E-5f, 4.004E-6f, 0.0f, 1.7159999E-6f, 6.8639997E-6f, 1.1439999E-5f, 1.6588E-5f, 2.3452E-5f, 3.2032E-5f, 3.7751997E-5f, 3.8323997E-5f, 3.8323997E-5f, 3.6036E-5f, 3.6036E-5f, 3.8896E-5f, 4.1755997E-5f, 4.29E-5f, 4.1183997E-5f, 3.6036E-5f, 2.8027998E-5f, 1.8304E-5f, 1.2584E-5f, 1.0868E-5f, 1.2011999E-5f, 1.3727999E-5f, 1.3727999E-5f, 1.3727999E-5f, 1.2584E-5f, 1.43E-5f, 1.7159999E-5f, 1.6016E-5f, 9.724E-6f, 3.4319999E-6f, 0.0f, -2.288E-6f, -6.8639997E-6f, -1.1439999E-5f, -1.5443999E-5f, -1.9448E-5f, -2.5168E-5f, -3.2032E-5f, -3.4892E-5f, -3.3176E-5f, -3.2032E-5f, -3.4892E-5f, -3.9468E-5f, -3.8323997E-5f, -2.9743998E-5f, -1.4871999E-5f, -3.4319999E-6f, -5.1479997E-6f, -1.4871999E-5f, -2.6884E-5f, -3.6036E-5f, -4.0611998E-5f, -4.29E-5f, -4.4043998E-5f, -4.6332E-5f, -5.0336E-5f, -5.3768E-5f, -5.3768E-5f, -4.7475998E-5f, -4.004E-5f, -3.4892E-5f, -3.7179998E-5f, -4.4043998E-5f, -4.6332E-5f, -4.3472E-5f, -3.7751997E-5f, -3.4892E-5f, -3.8323997E-5f, -4.2328E-5f, -4.3472E-5f, -4.2328E-5f, -4.29E-5f, -4.7475998E-5f, -5.0908E-5f, -5.3196E-5f, -4.8047998E-5f, -3.6608E-5f, -2.5168E-5f, -1.8304E-5f, -2.002E-5f, -2.6311998E-5f, -2.9743998E-5f, -2.9743998E-5f, -2.5739999E-5f, -2.2879998E-5f, -2.5168E-5f, -3.0887997E-5f, -3.6036E-5f, -3.6608E-5f, -3.3747998E-5f, -3.0887997E-5f, -3.0316E-5f, -3.6036E-5f, -4.2328E-5f, -4.6332E-5f, -4.29E-5f, -3.0316E-5f, -1.6588E-5f, -5.7199995E-6f, 0.0f, -1.144E-6f, -6.8639997E-6f, -1.2584E-5f, -1.1439999E-5f, -4.576E-6f, -2.288E-6f, -7.4359996E-6f, -1.7159999E-5f, -2.2307999E-5f, -1.8875999E-5f, -1.1439999E-5f, -5.1479997E-6f, -2.8599998E-6f, -5.72E-7f, 4.576E-6f, 1.2011999E-5f, 1.4871999E-5f, 9.152E-6f, 1.144E-6f, -2.8599998E-6f, -4.576E-6f, -8.008E-6f, -1.5443999E-5f, -1.9448E-5f, -1.43E-5f, -2.8599998E-6f, 8.579999E-6f, 1.43E-5f, 1.5443999E-5f, 1.4871999E-5f, 1.5443999E-5f, 1.8875999E-5f, 2.2307999E-5f, 2.4023999E-5f, 2.3452E-5f, 2.1164E-5f, 1.9448E-5f, 1.9448E-5f, 2.5168E-5f, 3.3176E-5f, 3.6036E-5f, 2.9743998E-5f, 1.7732E-5f, 8.008E-6f, 6.292E-6f, 1.0295999E-5f, 1.3727999E-5f, 1.0868E-5f, 7.4359996E-6f, 8.008E-6f, 1.2011999E-5f, 1.4871999E-5f, 9.724E-6f, 1.144E-6f, -2.288E-6f, 1.144E-6f, 8.008E-6f, 1.6588E-5f, 2.6311998E-5f, 3.3747998E-5f, 3.7751997E-5f, 3.7179998E-5f, 2.9171999E-5f, 2.002E-5f, 1.3727999E-5f, 9.724E-6f, 5.7199995E-6f, 0.0f, -2.288E-6f, 1.144E-6f, 6.292E-6f, 1.0295999E-5f, 9.152E-6f, 2.8599998E-6f, -5.72E-7f, 2.288E-6f, 1.1439999E-5f, 1.7732E-5f, 1.7732E-5f, 1.2584E-5f, 6.8639997E-6f, 5.7199995E-6f, 7.4359996E-6f, 1.0295999E-5f, 1.7732E-5f, 2.6311998E-5f, 3.0887997E-5f, 2.6884E-5f, 1.7732E-5f, 9.152E-6f, 4.576E-6f, 4.576E-6f, 7.4359996E-6f, 1.4871999E-5f, 2.4595998E-5f, 3.0316E-5f, 2.9171999E-5f, 2.1736E-5f, 1.5443999E-5f, 1.4871999E-5f, 1.7732E-5f, 2.1164E-5f, 1.9448E-5f, 1.4871999E-5f, 1.1439999E-5f, 1.0868E-5f, 1.3155999E-5f, 1.7159999E-5f, 2.1164E-5f, 2.3452E-5f, 2.0591999E-5f, 1.7159999E-5f, 1.7732E-5f, 2.4023999E-5f, 3.2604E-5f, 3.6608E-5f, 3.3747998E-5f, 2.6311998E-5f, 1.9448E-5f, 1.8875999E-5f, 2.2307999E-5f, 2.5168E-5f, 2.1736E-5f, 1.3727999E-5f, 5.7199995E-6f, -5.72E-7f, -5.1479997E-6f, -8.008E-6f, -6.8639997E-6f, -1.7159999E-6f, 2.8599998E-6f, 5.1479997E-6f, 2.288E-6f, -2.8599998E-6f, -4.576E-6f, 0.0f
        )));
        channelsData.add(new ArrayList<>(Arrays.asList(
                -5.72E-7f, -1.0295999E-5f, -1.8875999E-5f, -2.3452E-5f, -2.3452E-5f, -2.5739999E-5f, -3.146E-5f, -3.4319997E-5f, -3.146E-5f, -2.6311998E-5f, -2.1736E-5f, -2.4023999E-5f, -3.0316E-5f, -3.5464E-5f, -3.7179998E-5f, -3.7179998E-5f, -3.8323997E-5f, -4.1755997E-5f, -4.2328E-5f, -3.7179998E-5f, -3.146E-5f, -2.9171999E-5f, -2.86E-5f, -3.0887997E-5f, -3.0887997E-5f, -2.4595998E-5f, -1.7159999E-5f, -1.1439999E-5f, -9.724E-6f, -1.2011999E-5f, -1.6016E-5f, -1.9448E-5f, -2.1164E-5f, -2.0591999E-5f, -1.8875999E-5f, -1.6588E-5f, -1.6016E-5f, -1.4871999E-5f, -1.4871999E-5f, -1.1439999E-5f, -3.4319999E-6f, 2.288E-6f, 1.7159999E-6f, -3.4319999E-6f, -7.4359996E-6f, -8.579999E-6f, -1.0295999E-5f, -1.3727999E-5f, -1.8304E-5f, -2.5739999E-5f, -3.3176E-5f, -3.8896E-5f, -4.004E-5f, -3.6608E-5f, -3.3747998E-5f, -3.4892E-5f, -3.7179998E-5f, -3.6036E-5f, -2.8027998E-5f, -1.2011999E-5f, 3.4319999E-6f, 7.4359996E-6f, 1.144E-6f, -9.152E-6f, -1.7159999E-5f, -1.9448E-5f, -1.9448E-5f, -1.8875999E-5f, -1.8875999E-5f, -2.1736E-5f, -2.3452E-5f, -2.1736E-5f, -1.7732E-5f, -1.2584E-5f, -8.008E-6f, -7.4359996E-6f, -1.2011999E-5f, -1.4871999E-5f, -1.2584E-5f, -6.292E-6f, -1.7159999E-6f, -5.1479997E-6f, -1.2011999E-5f, -1.6588E-5f, -1.6016E-5f, -1.3727999E-5f, -1.0868E-5f, -1.0868E-5f, -1.3727999E-5f, -1.0295999E-5f, 2.288E-6f, 1.6016E-5f, 2.4023999E-5f, 2.0591999E-5f, 1.2584E-5f, 8.008E-6f, 8.008E-6f, 1.0868E-5f, 1.2584E-5f, 9.152E-6f, 4.004E-6f, 2.8599998E-6f, 5.1479997E-6f, 8.579999E-6f, 1.0868E-5f, 1.0868E-5f, 6.8639997E-6f, 5.72E-7f, -2.288E-6f, 2.288E-6f, 1.7159999E-5f, 3.3176E-5f, 4.4043998E-5f, 4.7475998E-5f, 4.29E-5f, 3.5464E-5f, 2.9743998E-5f, 3.0887997E-5f, 3.7179998E-5f, 4.2328E-5f, 4.2328E-5f, 3.8896E-5f, 3.6036E-5f, 3.7179998E-5f, 4.1755997E-5f, 4.6332E-5f, 4.8619997E-5f, 4.9764E-5f, 5.4911998E-5f, 6.1775994E-5f, 6.578E-5f, 6.1775994E-5f, 5.2623996E-5f, 4.5759996E-5f, 4.29E-5f, 4.004E-5f, 3.4319997E-5f, 2.6884E-5f, 2.5739999E-5f, 3.0887997E-5f, 3.6036E-5f, 3.8323997E-5f, 3.6036E-5f, 3.2604E-5f, 3.0316E-5f, 3.0887997E-5f, 3.0887997E-5f, 2.6311998E-5f, 1.8875999E-5f, 1.2584E-5f, 1.2584E-5f, 1.6016E-5f, 2.2879998E-5f, 2.9171999E-5f, 2.86E-5f, 1.9448E-5f, 6.292E-6f, -6.292E-6f, -1.3155999E-5f, -1.3727999E-5f, -1.1439999E-5f, -9.724E-6f, -9.152E-6f, -6.292E-6f, -2.288E-6f, -1.144E-6f, -7.4359996E-6f, -1.7732E-5f, -2.4595998E-5f, -2.5739999E-5f, -2.2307999E-5f, -1.3727999E-5f, -2.8599998E-6f, 6.292E-6f, 1.43E-5f, 1.8304E-5f, 1.6588E-5f, 9.724E-6f, 3.4319999E-6f, -5.72E-7f, -3.4319999E-6f, -6.8639997E-6f, -9.724E-6f, -1.0295999E-5f, -7.4359996E-6f, -2.8599998E-6f, 1.7159999E-6f, 1.7159999E-6f, -1.7159999E-6f, -1.7159999E-6f, 5.72E-7f, 0.0f, -6.8639997E-6f, -1.8875999E-5f, -2.9171999E-5f, -3.2032E-5f, -2.86E-5f, -2.5739999E-5f, -2.0591999E-5f, -1.3727999E-5f, -9.152E-6f, -9.724E-6f, -1.6588E-5f, -2.4595998E-5f, -2.86E-5f, -2.8027998E-5f, -2.3452E-5f, -1.6016E-5f, -8.008E-6f, -3.4319999E-6f, -2.8599998E-6f, -6.292E-6f, -1.1439999E-5f, -1.4871999E-5f, -1.4871999E-5f, -1.1439999E-5f, -8.008E-6f, -8.008E-6f, -1.0868E-5f, -1.4871999E-5f, -1.6016E-5f, -1.2011999E-5f, -5.7199995E-6f, -5.72E-7f, 5.72E-7f, 5.72E-7f, 3.4319999E-6f, 9.152E-6f, 1.3155999E-5f, 1.2584E-5f, 7.4359996E-6f, 5.72E-7f, -5.1479997E-6f, -8.579999E-6f, -8.579999E-6f, -8.008E-6f, -8.579999E-6f, -1.2584E-5f, -1.8304E-5f, -2.3452E-5f, -2.8027998E-5f, -3.0887997E-5f, -3.0316E-5f, -2.8027998E-5f, -2.6311998E-5f, -2.5168E-5f, -2.4595998E-5f, -2.6884E-5f, -2.6311998E-5f, -2.002E-5f
        )));
        eegPacket = new MbtEEGPacket(channelsData);
        if(useQualities)
            eegPacket.setQualities(new ArrayList<Float>(Arrays.asList(ArrayUtils.toObject(MBTSignalQualityChecker.computeQualitiesForPacketNew(250,250,channelsData)))));
        eegPacketsList.add(eegPacket);
        channelsData = new ArrayList<>();

        channelsData.add(new ArrayList<>(Arrays.asList( 5.1479997E-6f, 4.576E-6f, -5.72E-7f, -6.8639997E-6f, -1.0868E-5f, -1.0868E-5f, -8.008E-6f, -6.8639997E-6f, -8.008E-6f, -8.579999E-6f, -6.8639997E-6f, -6.292E-6f, -1.2584E-5f, -2.1164E-5f, -2.8027998E-5f, -2.7455999E-5f, -2.4023999E-5f, -2.5739999E-5f, -3.0316E-5f, -2.9171999E-5f, -1.8875999E-5f, -4.576E-6f, 5.1479997E-6f, 6.292E-6f, -1.7159999E-6f, -1.2584E-5f, -2.1164E-5f, -2.4023999E-5f, -2.1736E-5f, -1.9448E-5f, -1.7159999E-5f, -1.7732E-5f, -1.9448E-5f, -1.7732E-5f, -1.6588E-5f, -2.0591999E-5f, -2.9743998E-5f, -3.3176E-5f, -2.0591999E-5f, -2.288E-6f, 7.4359996E-6f, 5.7199995E-6f, -2.288E-6f, -7.4359996E-6f, -8.008E-6f, -8.008E-6f, -1.1439999E-5f, -1.7732E-5f, -2.1164E-5f, -2.0591999E-5f, -1.6588E-5f, -1.1439999E-5f, -9.152E-6f, -7.4359996E-6f, -8.008E-6f, -1.1439999E-5f, -1.7732E-5f, -2.2879998E-5f, -2.0591999E-5f, -1.43E-5f, -5.1479997E-6f, 2.288E-6f, 4.004E-6f, 0.0f, -8.579999E-6f, -1.4871999E-5f, -1.3155999E-5f, -5.1479997E-6f, 1.0868E-5f, 2.8027998E-5f, 3.6608E-5f, 3.2604E-5f, 1.8875999E-5f, 6.292E-6f, 0.0f, 5.1479997E-6f, 1.7732E-5f, 2.7455999E-5f, 3.0316E-5f, 2.6311998E-5f, 1.8875999E-5f, 1.2584E-5f, 9.152E-6f, 1.0868E-5f, 1.2584E-5f, 1.0868E-5f, 5.1479997E-6f, -1.7159999E-6f, -3.4319999E-6f, -2.288E-6f, 5.72E-7f, 5.72E-7f, -5.7199995E-6f, -1.0868E-5f, -8.008E-6f, 4.576E-6f, 2.0591999E-5f, 3.0887997E-5f, 3.3747998E-5f, 2.5739999E-5f, 8.579999E-6f, -8.579999E-6f, -1.6016E-5f, -6.8639997E-6f, 1.1439999E-5f, 2.5168E-5f, 2.6311998E-5f, 1.6588E-5f, 7.4359996E-6f, 6.292E-6f, 1.2011999E-5f, 1.5443999E-5f, 1.2011999E-5f, 7.4359996E-6f, 4.004E-6f, 1.7159999E-6f, 0.0f, -4.576E-6f, -8.008E-6f, -8.008E-6f, -2.8599998E-6f, 5.7199995E-6f, 1.6016E-5f, 2.5168E-5f, 2.8027998E-5f, 2.3452E-5f, 1.3727999E-5f, 1.7159999E-6f, -6.292E-6f, -9.724E-6f, -1.0295999E-5f, -9.152E-6f, -6.292E-6f, 2.8599998E-6f, 1.5443999E-5f, 2.6311998E-5f, 2.86E-5f, 1.9448E-5f, 8.579999E-6f, 4.004E-6f, 6.292E-6f, 9.724E-6f, 9.152E-6f, 6.292E-6f, 1.144E-6f, -3.4319999E-6f, -7.4359996E-6f, -1.43E-5f, -2.1736E-5f, -2.6884E-5f, -2.7455999E-5f, -2.2879998E-5f, -1.4871999E-5f, -3.4319999E-6f, 6.292E-6f, 9.152E-6f, 5.7199995E-6f, 2.8599998E-6f, 4.004E-6f, 5.7199995E-6f, 4.576E-6f, 5.72E-7f, -5.7199995E-6f, -8.008E-6f, -6.8639997E-6f, -5.7199995E-6f, -6.292E-6f, -8.008E-6f, -8.008E-6f, -6.292E-6f, -5.1479997E-6f, -6.292E-6f, -8.579999E-6f, -9.152E-6f, -7.4359996E-6f, -4.576E-6f, -4.576E-6f, -9.724E-6f, -1.5443999E-5f, -1.8875999E-5f, -1.9448E-5f, -1.7159999E-5f, -1.7732E-5f, -1.8875999E-5f, -1.6588E-5f, -1.0295999E-5f, -4.004E-6f, -1.7159999E-6f, -2.288E-6f, -5.7199995E-6f, -9.152E-6f, -1.2011999E-5f, -1.43E-5f, -1.43E-5f, -1.1439999E-5f, -9.152E-6f, -8.579999E-6f, -9.152E-6f, -8.008E-6f, -4.576E-6f, -2.288E-6f, -4.004E-6f, -9.724E-6f, -1.6588E-5f, -1.6588E-5f, -6.292E-6f, 9.152E-6f, 1.9448E-5f, 2.1736E-5f, 1.7732E-5f, 1.2011999E-5f, 1.0868E-5f, 1.3155999E-5f, 1.7159999E-5f, 2.0591999E-5f, 2.2307999E-5f, 2.1736E-5f, 1.8304E-5f, 1.6588E-5f, 1.7732E-5f, 1.8875999E-5f, 1.6016E-5f, 8.008E-6f, -1.144E-6f, -5.7199995E-6f, -6.8639997E-6f, -8.008E-6f, -1.3727999E-5f, -2.1164E-5f, -2.3452E-5f, -2.2307999E-5f, -1.8304E-5f, -1.6016E-5f, -1.6016E-5f, -1.7159999E-5f, -2.0591999E-5f, -2.2307999E-5f, -1.9448E-5f, -1.3727999E-5f, -9.724E-6f, -1.2011999E-5f, -1.2011999E-5f, -5.1479997E-6f, 7.4359996E-6f, 2.002E-5f, 2.3452E-5f, 1.7159999E-5f, 6.292E-6f, -1.144E-6f, -1.7159999E-6f
        )));
        channelsData.add(new ArrayList<>(Arrays.asList(-1.2584E-5f, -1.0868E-5f, -1.6016E-5f, -2.3452E-5f, -2.7455999E-5f, -2.4595998E-5f, -1.7159999E-5f, -1.3155999E-5f, -1.3727999E-5f, -1.2584E-5f, -6.292E-6f, 5.72E-7f, -5.72E-7f, -8.579999E-6f, -1.7159999E-5f, -1.8875999E-5f, -1.4871999E-5f, -1.2584E-5f, -1.3155999E-5f, -8.579999E-6f, 3.4319999E-6f, 1.8304E-5f, 2.8027998E-5f, 2.6884E-5f, 1.6588E-5f, 3.4319999E-6f, -5.1479997E-6f, -8.579999E-6f, -8.008E-6f, -8.008E-6f, -8.008E-6f, -8.579999E-6f, -1.0295999E-5f, -9.724E-6f, -9.724E-6f, -1.43E-5f, -2.4023999E-5f, -2.86E-5f, -1.8304E-5f, -1.7159999E-6f, 9.152E-6f, 1.0868E-5f, 5.1479997E-6f, -5.72E-7f, -2.8599998E-6f, -3.4319999E-6f, -5.7199995E-6f, -9.152E-6f, -9.724E-6f, -8.008E-6f, -4.576E-6f, -1.144E-6f, -5.72E-7f, -1.7159999E-6f, -4.004E-6f, -6.292E-6f, -1.0295999E-5f, -1.3155999E-5f, -1.1439999E-5f, -5.1479997E-6f, 2.8599998E-6f, 1.0868E-5f, 1.2584E-5f, 5.7199995E-6f, -4.576E-6f, -1.0868E-5f, -8.008E-6f, 0.0f, 1.1439999E-5f, 2.3452E-5f, 3.0316E-5f, 2.8027998E-5f, 1.6588E-5f, 4.004E-6f, -4.004E-6f, -5.72E-7f, 1.3727999E-5f, 2.8027998E-5f, 3.4319997E-5f, 3.3176E-5f, 2.6884E-5f, 1.9448E-5f, 1.2584E-5f, 8.579999E-6f, 5.7199995E-6f, 4.004E-6f, 1.7159999E-6f, -1.144E-6f, -2.288E-6f, -1.7159999E-6f, 5.72E-7f, 1.144E-6f, -2.8599998E-6f, -6.8639997E-6f, -2.8599998E-6f, 1.2011999E-5f, 3.0887997E-5f, 4.4043998E-5f, 4.6904E-5f, 3.8323997E-5f, 2.1164E-5f, 4.004E-6f, -2.8599998E-6f, 5.1479997E-6f, 2.2307999E-5f, 3.4892E-5f, 3.6036E-5f, 2.5739999E-5f, 1.43E-5f, 1.1439999E-5f, 1.6588E-5f, 2.002E-5f, 1.7159999E-5f, 1.0868E-5f, 6.292E-6f, 5.1479997E-6f, 5.7199995E-6f, 4.004E-6f, -1.7159999E-6f, -7.4359996E-6f, -1.0295999E-5f, -7.4359996E-6f, 2.288E-6f, 1.2584E-5f, 1.8875999E-5f, 1.8875999E-5f, 1.3155999E-5f, 2.288E-6f, -8.579999E-6f, -1.6588E-5f, -1.8304E-5f, -1.43E-5f, -6.8639997E-6f, 2.288E-6f, 1.3155999E-5f, 2.1736E-5f, 2.4595998E-5f, 1.8304E-5f, 7.4359996E-6f, 1.144E-6f, 2.288E-6f, 6.8639997E-6f, 9.724E-6f, 8.579999E-6f, 4.576E-6f, 0.0f, -4.576E-6f, -1.2011999E-5f, -2.2307999E-5f, -3.0887997E-5f, -3.2604E-5f, -2.6311998E-5f, -1.6588E-5f, -6.8639997E-6f, -1.144E-6f, -3.4319999E-6f, -9.724E-6f, -1.3155999E-5f, -1.3155999E-5f, -1.3727999E-5f, -1.6016E-5f, -1.8304E-5f, -1.9448E-5f, -1.8875999E-5f, -1.5443999E-5f, -1.3727999E-5f, -1.3155999E-5f, -1.43E-5f, -1.6588E-5f, -1.6588E-5f, -1.43E-5f, -1.0868E-5f, -8.008E-6f, -8.008E-6f, -9.152E-6f, -8.008E-6f, -5.1479997E-6f, -3.4319999E-6f, -3.4319999E-6f, -4.576E-6f, -5.7199995E-6f, -4.576E-6f, -5.1479997E-6f, -7.4359996E-6f, -8.008E-6f, -4.576E-6f, 1.144E-6f, 5.7199995E-6f, 6.8639997E-6f, 5.7199995E-6f, 3.4319999E-6f, 5.72E-7f, -2.8599998E-6f, -5.1479997E-6f, -5.1479997E-6f, -3.4319999E-6f, -1.7159999E-6f, -5.72E-7f, 5.72E-7f, 2.288E-6f, 2.8599998E-6f, 1.7159999E-6f, -4.004E-6f, -1.2584E-5f, -1.6588E-5f, -9.152E-6f, 4.576E-6f, 1.43E-5f, 1.4871999E-5f, 8.579999E-6f, 1.144E-6f, 0.0f, 4.004E-6f, 6.292E-6f, 4.576E-6f, 1.144E-6f, -1.7159999E-6f, -1.7159999E-6f, 5.72E-7f, 3.4319999E-6f, 4.004E-6f, 0.0f, -8.008E-6f, -1.5443999E-5f, -1.8304E-5f, -1.6016E-5f, -1.43E-5f, -1.7159999E-5f, -2.3452E-5f, -2.7455999E-5f, -2.8027998E-5f, -2.5739999E-5f, -2.0591999E-5f, -1.7159999E-5f, -1.7159999E-5f, -2.0591999E-5f, -2.4023999E-5f, -2.1164E-5f, -1.5443999E-5f, -1.2584E-5f, -1.4871999E-5f, -1.6016E-5f, -8.579999E-6f, 3.4319999E-6f, 1.3727999E-5f, 1.4871999E-5f, 6.292E-6f, -4.576E-6f, -1.3155999E-5f, -1.43E-5f
        )));
        eegPacket = new MbtEEGPacket(channelsData);
        if(useQualities)
            eegPacket.setQualities(new ArrayList<Float>(Arrays.asList(ArrayUtils.toObject(MBTSignalQualityChecker.computeQualitiesForPacketNew(250,250,channelsData)))));
        eegPacketsList.add(eegPacket);
        channelsData = new ArrayList<>();

        channelsData.add(new ArrayList<>(Arrays.asList( 1.144E-6f, 2.288E-6f, -1.7159999E-6f, -4.576E-6f, -3.4319999E-6f, -5.72E-7f, -5.72E-7f, -5.7199995E-6f, -1.3727999E-5f, -1.7159999E-5f, -1.5443999E-5f, -1.3155999E-5f, -1.7159999E-5f, -2.5168E-5f, -3.0316E-5f, -2.86E-5f, -2.2307999E-5f, -1.6588E-5f, -1.2011999E-5f, -5.7199995E-6f, -1.7159999E-6f, 0.0f, -2.8599998E-6f, -6.292E-6f, -8.579999E-6f, -8.008E-6f, -6.8639997E-6f, -8.579999E-6f, -1.0868E-5f, -1.2011999E-5f, -1.2584E-5f, -1.3155999E-5f, -1.5443999E-5f, -1.7159999E-5f, -1.6016E-5f, -1.3155999E-5f, -1.2011999E-5f, -1.6016E-5f, -2.0591999E-5f, -2.1164E-5f, -1.8304E-5f, -1.7159999E-5f, -2.0591999E-5f, -2.2879998E-5f, -1.43E-5f, 1.7159999E-6f, 1.5443999E-5f, 1.8875999E-5f, 1.2011999E-5f, 1.144E-6f, -5.1479997E-6f, -1.7159999E-6f, 6.8639997E-6f, 1.3727999E-5f, 1.5443999E-5f, 1.0295999E-5f, 3.4319999E-6f, -1.7159999E-6f, -4.576E-6f, -4.576E-6f, -4.004E-6f, -5.72E-7f, 5.7199995E-6f, 1.1439999E-5f, 1.43E-5f, 1.0868E-5f, 3.4319999E-6f, -2.8599998E-6f, -2.288E-6f, 4.576E-6f, 1.3155999E-5f, 2.0591999E-5f, 2.1736E-5f, 1.7159999E-5f, 1.3727999E-5f, 1.3155999E-5f, 1.3727999E-5f, 1.0868E-5f, 4.576E-6f, 0.0f, -2.8599998E-6f, -3.4319999E-6f, -2.8599998E-6f, -1.7159999E-6f, 0.0f, -5.72E-7f, -4.576E-6f, -1.4871999E-5f, -2.7455999E-5f, -2.9171999E-5f, -1.8304E-5f, -2.8599998E-6f, 7.4359996E-6f, 6.8639997E-6f, -2.8599998E-6f, -1.6588E-5f, -2.5168E-5f, -2.7455999E-5f, -2.6311998E-5f, -2.2307999E-5f, -1.7159999E-5f, -9.724E-6f, -6.292E-6f, -1.0868E-5f, -1.8304E-5f, -2.2879998E-5f, -2.2307999E-5f, -1.8875999E-5f, -1.6016E-5f, -1.43E-5f, -1.43E-5f, -1.43E-5f, -1.3155999E-5f, -1.5443999E-5f, -1.8875999E-5f, -1.5443999E-5f, -2.8599998E-6f, 9.152E-6f, 1.0868E-5f, 5.7199995E-6f, 5.72E-7f, 5.72E-7f, 1.144E-6f, -1.7159999E-6f, -4.576E-6f, -2.8599998E-6f, 6.292E-6f, 1.8875999E-5f, 2.8027998E-5f, 3.3747998E-5f, 3.6608E-5f, 3.7751997E-5f, 3.4892E-5f, 2.5168E-5f, 1.6016E-5f, 1.2011999E-5f, 1.7159999E-5f, 2.5739999E-5f, 3.0316E-5f, 3.146E-5f, 2.9171999E-5f, 2.9171999E-5f, 3.0887997E-5f, 3.2032E-5f, 3.146E-5f, 2.9171999E-5f, 2.5739999E-5f, 2.4023999E-5f, 2.4023999E-5f, 2.6311998E-5f, 2.86E-5f, 3.0316E-5f, 2.9743998E-5f, 2.5739999E-5f, 2.7455999E-5f, 3.4319997E-5f, 4.29E-5f, 4.8047998E-5f, 4.7475998E-5f, 4.7475998E-5f, 5.2623996E-5f, 5.9487997E-5f, 5.9487997E-5f, 5.1479998E-5f, 4.29E-5f, 4.0611998E-5f, 4.8047998E-5f, 5.9487997E-5f, 6.5208E-5f, 6.292E-5f, 5.3196E-5f, 4.2328E-5f, 3.5464E-5f, 3.0887997E-5f, 2.86E-5f, 2.86E-5f, 2.9171999E-5f, 2.86E-5f, 2.4595998E-5f, 2.002E-5f, 1.8304E-5f, 1.9448E-5f, 2.2307999E-5f, 2.0591999E-5f, 1.8304E-5f, 1.8875999E-5f, 2.2307999E-5f, 2.8027998E-5f, 2.86E-5f, 2.4023999E-5f, 1.8875999E-5f, 1.5443999E-5f, 1.0868E-5f, 0.0f, -9.152E-6f, -1.0295999E-5f, -3.4319999E-6f, 6.292E-6f, 1.2584E-5f, 1.3155999E-5f, 9.152E-6f, 5.72E-7f, -8.579999E-6f, -1.7159999E-5f, -2.4023999E-5f, -2.7455999E-5f, -2.86E-5f, -2.9171999E-5f, -3.2604E-5f, -3.6608E-5f, -3.8896E-5f, -3.8323997E-5f, -3.4892E-5f, -3.3176E-5f, -3.3176E-5f, -3.3176E-5f, -3.4892E-5f, -3.6036E-5f, -3.7751997E-5f, -3.9468E-5f, -4.004E-5f, -3.8323997E-5f, -3.146E-5f, -2.2307999E-5f, -1.43E-5f, -1.0868E-5f, -1.4871999E-5f, -2.1736E-5f, -2.5739999E-5f, -1.7159999E-5f, 5.72E-7f, 1.7159999E-5f, 2.1164E-5f, 9.152E-6f, -9.724E-6f, -2.4023999E-5f, -3.0316E-5f, -3.2032E-5f, -3.4892E-5f, -4.0611998E-5f, -4.5187997E-5f, -4.5759996E-5f, -4.2328E-5f, -3.8323997E-5f, -3.3176E-5f, -2.7455999E-5f, -2.2307999E-5f, -1.6016E-5f, -1.4871999E-5f, -1.7732E-5f
        )));
        channelsData.add(new ArrayList<>(Arrays.asList(-9.152E-6f, -4.576E-6f, -4.004E-6f, -6.8639997E-6f, -8.579999E-6f, -9.152E-6f, -9.724E-6f, -1.1439999E-5f, -1.5443999E-5f, -1.7732E-5f, -1.5443999E-5f, -1.2584E-5f, -1.5443999E-5f, -2.4023999E-5f, -3.146E-5f, -3.146E-5f, -2.5739999E-5f, -1.7732E-5f, -1.0868E-5f, -4.576E-6f, -1.144E-6f, -1.7159999E-6f, -4.004E-6f, -6.8639997E-6f, -8.008E-6f, -5.1479997E-6f, -1.144E-6f, 1.144E-6f, -1.144E-6f, -4.004E-6f, -6.8639997E-6f, -8.008E-6f, -8.008E-6f, -8.579999E-6f, -7.4359996E-6f, -6.292E-6f, -5.7199995E-6f, -6.292E-6f, -7.4359996E-6f, -5.7199995E-6f, -1.7159999E-6f, 1.144E-6f, -5.72E-7f, -3.4319999E-6f, 2.288E-6f, 1.5443999E-5f, 2.6884E-5f, 2.8027998E-5f, 1.8304E-5f, 4.004E-6f, -3.4319999E-6f, 1.144E-6f, 1.3727999E-5f, 2.3452E-5f, 2.5739999E-5f, 2.0591999E-5f, 1.3155999E-5f, 8.008E-6f, 4.576E-6f, 1.7159999E-6f, 0.0f, 3.4319999E-6f, 1.0295999E-5f, 1.6016E-5f, 1.7732E-5f, 1.5443999E-5f, 1.0295999E-5f, 9.152E-6f, 1.5443999E-5f, 2.5168E-5f, 3.3176E-5f, 4.004E-5f, 4.2328E-5f, 3.9468E-5f, 3.5464E-5f, 3.3176E-5f, 3.2032E-5f, 2.9743998E-5f, 2.4595998E-5f, 1.8304E-5f, 1.3155999E-5f, 9.724E-6f, 9.724E-6f, 1.3727999E-5f, 1.7159999E-5f, 1.6016E-5f, 9.724E-6f, -1.7159999E-6f, -1.43E-5f, -1.7159999E-5f, -8.008E-6f, 5.1479997E-6f, 1.5443999E-5f, 1.7732E-5f, 1.1439999E-5f, 5.72E-7f, -8.008E-6f, -1.0295999E-5f, -8.579999E-6f, -4.576E-6f, 0.0f, 4.576E-6f, 5.1479997E-6f, -1.7159999E-6f, -1.2584E-5f, -2.1164E-5f, -2.4595998E-5f, -2.1164E-5f, -1.4871999E-5f, -8.579999E-6f, -5.7199995E-6f, -7.4359996E-6f, -1.2011999E-5f, -1.7732E-5f, -2.3452E-5f, -2.1164E-5f, -9.152E-6f, 4.004E-6f, 7.4359996E-6f, 1.144E-6f, -7.4359996E-6f, -1.2584E-5f, -1.4871999E-5f, -1.7732E-5f, -1.8304E-5f, -1.6016E-5f, -9.152E-6f, 5.72E-7f, 1.0295999E-5f, 1.7732E-5f, 2.2879998E-5f, 2.5168E-5f, 2.3452E-5f, 1.7732E-5f, 1.0295999E-5f, 8.008E-6f, 1.3155999E-5f, 2.2879998E-5f, 2.9171999E-5f, 3.0316E-5f, 2.6884E-5f, 2.2307999E-5f, 2.002E-5f, 2.1164E-5f, 2.2879998E-5f, 2.2307999E-5f, 1.9448E-5f, 1.7732E-5f, 1.9448E-5f, 2.2879998E-5f, 2.6311998E-5f, 2.7455999E-5f, 2.7455999E-5f, 2.6884E-5f, 3.146E-5f, 4.0611998E-5f, 4.8619997E-5f, 5.434E-5f, 5.72E-5f, 6.1203995E-5f, 6.8067995E-5f, 7.3788E-5f, 7.2644E-5f, 6.4064E-5f, 5.3768E-5f, 4.9764E-5f, 5.4911998E-5f, 6.6923996E-5f, 7.6075994E-5f, 7.4931995E-5f, 6.3492E-5f, 4.7475998E-5f, 3.4319997E-5f, 2.6884E-5f, 2.2307999E-5f, 2.1164E-5f, 2.1736E-5f, 2.2307999E-5f, 2.1164E-5f, 1.6588E-5f, 1.0868E-5f, 8.008E-6f, 9.152E-6f, 1.3155999E-5f, 1.7159999E-5f, 2.002E-5f, 2.1164E-5f, 2.2879998E-5f, 2.3452E-5f, 2.0591999E-5f, 1.5443999E-5f, 9.152E-6f, 1.7159999E-6f, -8.008E-6f, -1.43E-5f, -1.2584E-5f, -5.1479997E-6f, 4.004E-6f, 1.0868E-5f, 1.2584E-5f, 8.579999E-6f, -5.72E-7f, -9.152E-6f, -1.3155999E-5f, -1.43E-5f, -1.4871999E-5f, -1.7732E-5f, -2.1736E-5f, -2.7455999E-5f, -3.3176E-5f, -3.7179998E-5f, -3.7751997E-5f, -3.4892E-5f, -3.146E-5f, -2.9743998E-5f, -3.146E-5f, -3.6036E-5f, -3.9468E-5f, -4.0611998E-5f, -4.1183997E-5f, -4.4043998E-5f, -4.9191996E-5f, -5.0908E-5f, -4.8619997E-5f, -4.5187997E-5f, -4.6332E-5f, -5.3196E-5f, -6.1203995E-5f, -6.1775994E-5f, -4.6904E-5f, -2.2879998E-5f, -2.8599998E-6f, 2.8599998E-6f, -5.7199995E-6f, -2.2307999E-5f, -3.7179998E-5f, -4.5759996E-5f, -4.9191996E-5f, -5.0908E-5f, -5.4911998E-5f, -6.0059996E-5f, -6.1203995E-5f, -5.8915997E-5f, -5.2623996E-5f, -4.6332E-5f, -4.0611998E-5f, -3.4892E-5f, -2.86E-5f, -2.5739999E-5f, -2.8027998E-5f
        )));
        eegPacket = new MbtEEGPacket(channelsData);
        if(useQualities)
            eegPacket.setQualities(new ArrayList<Float>(Arrays.asList(ArrayUtils.toObject(MBTSignalQualityChecker.computeQualitiesForPacketNew(250,250,channelsData)))));
        eegPacketsList.add(eegPacket);
        channelsData = new ArrayList<>();

        channelsData.add(new ArrayList<>(Arrays.asList( -1.9448E-5f, -2.1164E-5f, -2.6311998E-5f, -3.6036E-5f, -4.2328E-5f, -4.29E-5f, -4.0611998E-5f, -3.7751997E-5f, -3.7751997E-5f, -3.8896E-5f, -4.004E-5f, -3.8323997E-5f, -3.5464E-5f, -3.5464E-5f, -3.7751997E-5f, -4.004E-5f, -4.29E-5f, -4.6332E-5f, -5.1479998E-5f, -5.3196E-5f, -5.0908E-5f, -4.9764E-5f, -4.8047998E-5f, -4.2328E-5f, -3.146E-5f, -1.8304E-5f, -6.292E-6f, 5.72E-7f, -2.288E-6f, -1.3155999E-5f, -2.1164E-5f, -2.1736E-5f, -1.5443999E-5f, -1.0295999E-5f, -8.579999E-6f, -1.1439999E-5f, -1.6588E-5f, -2.0591999E-5f, -2.0591999E-5f, -1.6016E-5f, -1.0295999E-5f, -5.7199995E-6f, -5.72E-7f, 2.288E-6f, 1.7159999E-6f, 0.0f, -5.72E-7f, 1.144E-6f, 1.144E-6f, 0.0f, -5.72E-7f, -1.144E-6f, 1.144E-6f, 4.576E-6f, 7.4359996E-6f, 8.008E-6f, 6.292E-6f, 4.576E-6f, 4.004E-6f, 8.008E-6f, 1.6588E-5f, 2.5168E-5f, 2.9171999E-5f, 2.4023999E-5f, 1.2011999E-5f, 5.1479997E-6f, 6.292E-6f, 9.724E-6f, 9.724E-6f, 6.8639997E-6f, 4.576E-6f, 2.8599998E-6f, 0.0f, -6.8639997E-6f, -1.5443999E-5f, -1.8875999E-5f, -1.4871999E-5f, -8.579999E-6f, -5.7199995E-6f, -7.4359996E-6f, -8.579999E-6f, -8.579999E-6f, -5.7199995E-6f, 0.0f, 7.4359996E-6f, 1.5443999E-5f, 2.002E-5f, 1.8875999E-5f, 9.724E-6f, -2.8599998E-6f, -6.8639997E-6f, -1.7159999E-6f, 9.724E-6f, 1.8875999E-5f, 2.0591999E-5f, 2.002E-5f, 2.002E-5f, 2.2307999E-5f, 2.3452E-5f, 2.0591999E-5f, 1.6588E-5f, 1.1439999E-5f, 8.008E-6f, 5.7199995E-6f, 4.576E-6f, 6.292E-6f, 8.008E-6f, 6.8639997E-6f, 1.144E-6f, -4.004E-6f, 2.288E-6f, 1.6016E-5f, 2.6311998E-5f, 2.8027998E-5f, 2.1736E-5f, 1.3727999E-5f, 1.0868E-5f, 1.43E-5f, 1.9448E-5f, 2.2307999E-5f, 2.5168E-5f, 2.5168E-5f, 2.3452E-5f, 2.002E-5f, 1.7159999E-5f, 1.7159999E-5f, 1.8875999E-5f, 2.0591999E-5f, 2.1164E-5f, 1.9448E-5f, 1.8875999E-5f, 1.7732E-5f, 1.5443999E-5f, 1.2011999E-5f, 6.8639997E-6f, 4.004E-6f, 4.004E-6f, 8.579999E-6f, 2.0591999E-5f, 3.5464E-5f, 4.9191996E-5f, 5.434E-5f, 4.7475998E-5f, 2.8027998E-5f, 3.4319999E-6f, -1.0868E-5f, -8.579999E-6f, 2.8599998E-6f, 1.43E-5f, 1.6588E-5f, 1.0868E-5f, 1.144E-6f, -5.7199995E-6f, -9.724E-6f, -1.4871999E-5f, -1.7732E-5f, -1.7732E-5f, -1.5443999E-5f, -1.3727999E-5f, -1.3155999E-5f, -1.2584E-5f, -1.0868E-5f, -3.4319999E-6f, 8.579999E-6f, 1.6016E-5f, 1.8875999E-5f, 1.6016E-5f, 7.4359996E-6f, -2.288E-6f, -9.152E-6f, -1.0295999E-5f, -8.579999E-6f, -6.8639997E-6f, -4.004E-6f, 5.72E-7f, 6.292E-6f, 9.724E-6f, 1.1439999E-5f, 1.1439999E-5f, 9.152E-6f, 9.724E-6f, 1.0295999E-5f, 9.152E-6f, 5.7199995E-6f, 1.7159999E-6f, 1.144E-6f, 2.8599998E-6f, 1.144E-6f, -3.4319999E-6f, -8.008E-6f, -6.292E-6f, 1.144E-6f, 1.0868E-5f, 1.7159999E-5f, 1.4871999E-5f, 7.4359996E-6f, -2.288E-6f, -1.0295999E-5f, -1.1439999E-5f, -6.292E-6f, 5.1479997E-6f, 1.7732E-5f, 2.2307999E-5f, 1.6588E-5f, 4.004E-6f, -4.576E-6f, -4.004E-6f, 2.288E-6f, 6.8639997E-6f, 3.4319999E-6f, -3.4319999E-6f, -1.0295999E-5f, -1.4871999E-5f, -1.6588E-5f, -1.43E-5f, -5.1479997E-6f, 5.7199995E-6f, 1.2584E-5f, 1.43E-5f, 7.4359996E-6f, 0.0f, -5.72E-7f, 4.004E-6f, 9.152E-6f, 1.0295999E-5f, 8.579999E-6f, 6.8639997E-6f, 6.292E-6f, 6.292E-6f, 6.8639997E-6f, 8.008E-6f, 1.0295999E-5f, 1.2011999E-5f, 1.43E-5f, 1.5443999E-5f, 1.6588E-5f, 1.9448E-5f, 2.2879998E-5f, 2.6311998E-5f, 2.6884E-5f, 2.8027998E-5f, 2.8027998E-5f, 2.4595998E-5f, 1.6588E-5f, 6.292E-6f, 2.8599998E-6f, 1.1439999E-5f, 3.0887997E-5f, 4.9191996E-5f, 5.434E-5f
        )));
        channelsData.add(new ArrayList<>(Arrays.asList(-2.9743998E-5f, -3.0316E-5f, -3.2604E-5f, -3.6608E-5f, -3.8323997E-5f, -3.5464E-5f, -3.0887997E-5f, -2.6311998E-5f, -2.4023999E-5f, -2.4595998E-5f, -2.6311998E-5f, -2.6884E-5f, -2.5739999E-5f, -2.5739999E-5f, -2.6884E-5f, -2.8027998E-5f, -2.9743998E-5f, -3.3747998E-5f, -3.8896E-5f, -4.1755997E-5f, -4.29E-5f, -4.6332E-5f, -4.9191996E-5f, -4.5187997E-5f, -3.4319997E-5f, -2.002E-5f, -6.292E-6f, 2.8599998E-6f, 4.004E-6f, -4.576E-6f, -1.3727999E-5f, -1.7159999E-5f, -1.2011999E-5f, -5.1479997E-6f, -2.288E-6f, -4.576E-6f, -1.0868E-5f, -1.3727999E-5f, -9.724E-6f, -2.288E-6f, 4.004E-6f, 5.7199995E-6f, 7.4359996E-6f, 9.152E-6f, 8.579999E-6f, 7.4359996E-6f, 8.008E-6f, 1.1439999E-5f, 1.4871999E-5f, 1.43E-5f, 1.2584E-5f, 1.0295999E-5f, 1.1439999E-5f, 1.6588E-5f, 2.2307999E-5f, 2.5739999E-5f, 2.6311998E-5f, 2.6311998E-5f, 2.86E-5f, 3.4892E-5f, 4.4615997E-5f, 5.5483997E-5f, 6.4064E-5f, 6.578E-5f, 5.9487997E-5f, 5.434E-5f, 5.4911998E-5f, 5.6627996E-5f, 5.6055997E-5f, 5.2051997E-5f, 4.6904E-5f, 4.1755997E-5f, 3.6036E-5f, 2.9171999E-5f, 2.2307999E-5f, 1.8875999E-5f, 2.1164E-5f, 2.5739999E-5f, 2.5168E-5f, 1.9448E-5f, 1.1439999E-5f, 6.8639997E-6f, 8.008E-6f, 1.3727999E-5f, 2.1736E-5f, 2.8027998E-5f, 2.8027998E-5f, 2.0591999E-5f, 5.7199995E-6f, -1.1439999E-5f, -2.002E-5f, -1.6588E-5f, -5.1479997E-6f, 7.4359996E-6f, 1.2011999E-5f, 9.724E-6f, 6.8639997E-6f, 5.7199995E-6f, 6.292E-6f, 4.004E-6f, 0.0f, -4.576E-6f, -7.4359996E-6f, -8.008E-6f, -8.579999E-6f, -1.0295999E-5f, -1.3155999E-5f, -1.8304E-5f, -2.4595998E-5f, -2.9171999E-5f, -2.5168E-5f, -1.43E-5f, -4.576E-6f, -1.7159999E-6f, -6.8639997E-6f, -1.6588E-5f, -2.4595998E-5f, -2.5739999E-5f, -2.2307999E-5f, -1.8875999E-5f, -1.7159999E-5f, -1.8304E-5f, -2.1164E-5f, -2.1736E-5f, -2.002E-5f, -1.6588E-5f, -1.2584E-5f, -9.724E-6f, -9.152E-6f, -1.0868E-5f, -1.3727999E-5f, -1.6588E-5f, -1.9448E-5f, -2.1164E-5f, -2.3452E-5f, -2.4595998E-5f, -2.2307999E-5f, -1.5443999E-5f, -1.7159999E-6f, 1.3155999E-5f, 2.3452E-5f, 2.6884E-5f, 2.002E-5f, 3.4319999E-6f, -1.6588E-5f, -2.9171999E-5f, -2.6884E-5f, -1.6588E-5f, -6.8639997E-6f, -5.7199995E-6f, -1.43E-5f, -2.6311998E-5f, -3.4319997E-5f, -3.6036E-5f, -3.6608E-5f, -3.7751997E-5f, -3.8323997E-5f, -3.7179998E-5f, -3.4319997E-5f, -3.2604E-5f, -3.0887997E-5f, -2.7455999E-5f, -1.7732E-5f, -4.004E-6f, 5.7199995E-6f, 9.724E-6f, 8.008E-6f, 2.288E-6f, -1.7159999E-6f, -4.004E-6f, -3.4319999E-6f, -1.7159999E-6f, 1.7159999E-6f, 6.8639997E-6f, 1.1439999E-5f, 1.2584E-5f, 1.1439999E-5f, 1.0295999E-5f, 1.1439999E-5f, 1.3155999E-5f, 1.43E-5f, 1.43E-5f, 1.0295999E-5f, 5.1479997E-6f, 2.288E-6f, 3.4319999E-6f, 5.7199995E-6f, 5.7199995E-6f, 2.288E-6f, -5.72E-7f, 5.72E-7f, 7.4359996E-6f, 1.8304E-5f, 2.5739999E-5f, 2.4595998E-5f, 1.3155999E-5f, -1.144E-6f, -1.1439999E-5f, -1.1439999E-5f, 0.0f, 1.5443999E-5f, 2.7455999E-5f, 2.9171999E-5f, 2.0591999E-5f, 8.008E-6f, 5.72E-7f, 2.288E-6f, 9.152E-6f, 1.4871999E-5f, 1.2011999E-5f, 2.8599998E-6f, -5.7199995E-6f, -1.2011999E-5f, -1.43E-5f, -1.3155999E-5f, -8.008E-6f, 0.0f, 6.8639997E-6f, 1.2584E-5f, 1.2584E-5f, 9.724E-6f, 1.0868E-5f, 1.5443999E-5f, 1.8875999E-5f, 1.8304E-5f, 1.43E-5f, 8.008E-6f, 4.004E-6f, 4.004E-6f, 6.8639997E-6f, 1.0295999E-5f, 1.4871999E-5f, 2.002E-5f, 2.5739999E-5f, 2.86E-5f, 2.8027998E-5f, 2.7455999E-5f, 2.9743998E-5f, 3.5464E-5f, 4.1183997E-5f, 4.4615997E-5f, 4.3472E-5f, 3.8896E-5f, 3.3176E-5f, 2.86E-5f, 3.0316E-5f, 4.29E-5f, 6.4064E-5f, 8.351199E-5f, 8.7516E-5f
        )));
        eegPacket = new MbtEEGPacket(channelsData);
        if(useQualities)
            eegPacket.setQualities(new ArrayList<>(Arrays.asList(ArrayUtils.toObject(MBTSignalQualityChecker.computeQualitiesForPacketNew(250,250,channelsData)))));
        eegPacketsList.add(eegPacket);
        channelsData = new ArrayList<>();

        channelsData.add(new ArrayList<>(Arrays.asList( 4.5187997E-5f, 3.0316E-5f, 1.7159999E-5f, 1.2584E-5f, 1.2584E-5f, 1.5443999E-5f, 1.7732E-5f, 1.6588E-5f, 1.3155999E-5f, 7.4359996E-6f, 2.288E-6f, -1.144E-6f, -4.004E-6f, -7.4359996E-6f, -1.2584E-5f, -1.43E-5f, -1.0868E-5f, -5.1479997E-6f, -1.7159999E-6f, -5.7199995E-6f, -1.3727999E-5f, -2.2307999E-5f, -2.9171999E-5f, -3.146E-5f, -2.8027998E-5f, -1.7732E-5f, -6.8639997E-6f, 5.72E-7f, 3.4319999E-6f, 1.7159999E-6f, -1.144E-6f, -3.4319999E-6f, -7.4359996E-6f, -1.3727999E-5f, -2.2879998E-5f, -3.0887997E-5f, -3.3747998E-5f, -3.4892E-5f, -3.6608E-5f, -4.004E-5f, -4.1183997E-5f, -3.8323997E-5f, -3.3176E-5f, -2.86E-5f, -3.0887997E-5f, -3.7751997E-5f, -4.29E-5f, -4.2328E-5f, -3.5464E-5f, -3.0316E-5f, -2.86E-5f, -2.9743998E-5f, -3.3176E-5f, -3.7179998E-5f, -3.7751997E-5f, -3.3176E-5f, -2.8027998E-5f, -2.5739999E-5f, -2.6311998E-5f, -2.9171999E-5f, -3.2032E-5f, -2.8027998E-5f, -2.0591999E-5f, -1.7159999E-5f, -2.5168E-5f, -3.2604E-5f, -2.9171999E-5f, -2.002E-5f, -1.0295999E-5f, -3.4319999E-6f, -3.4319999E-6f, -8.008E-6f, -1.2584E-5f, -1.4871999E-5f, -1.9448E-5f, -2.5168E-5f, -2.8027998E-5f, -2.6311998E-5f, -2.1736E-5f, -1.7159999E-5f, -1.4871999E-5f, -1.2011999E-5f, -9.724E-6f, -6.292E-6f, -4.004E-6f, -4.004E-6f, -7.4359996E-6f, -1.3155999E-5f, -1.6016E-5f, -1.5443999E-5f, -1.2584E-5f, -9.152E-6f, -8.008E-6f, -9.724E-6f, -1.5443999E-5f, -2.2307999E-5f, -2.1164E-5f, -9.724E-6f, 6.8639997E-6f, 1.8304E-5f, 2.002E-5f, 1.6016E-5f, 7.4359996E-6f, -4.004E-6f, -1.5443999E-5f, -1.9448E-5f, -1.2011999E-5f, 1.7159999E-6f, 1.5443999E-5f, 2.2307999E-5f, 2.2879998E-5f, 2.1736E-5f, 1.9448E-5f, 1.7732E-5f, 1.5443999E-5f, 1.0868E-5f, 9.724E-6f, 1.0868E-5f, 1.3727999E-5f, 1.4871999E-5f, 1.3155999E-5f, 1.0868E-5f, 7.4359996E-6f, 5.1479997E-6f, 2.288E-6f, -2.8599998E-6f, -7.4359996E-6f, -7.4359996E-6f, 5.72E-7f, 1.1439999E-5f, 2.1164E-5f, 2.8027998E-5f, 2.8027998E-5f, 2.1164E-5f, 1.0868E-5f, 3.4319999E-6f, 2.8599998E-6f, 6.8639997E-6f, 1.2584E-5f, 1.6588E-5f, 1.6588E-5f, 1.6016E-5f, 1.3727999E-5f, 9.724E-6f, 4.004E-6f, 0.0f, 2.288E-6f, 6.292E-6f, 6.292E-6f, 3.4319999E-6f, 2.288E-6f, 6.8639997E-6f, 1.3155999E-5f, 1.6588E-5f, 1.43E-5f, 7.4359996E-6f, 2.8599998E-6f, -1.144E-6f, -5.7199995E-6f, -1.2584E-5f, -1.6016E-5f, -7.4359996E-6f, 1.2584E-5f, 3.2032E-5f, 3.9468E-5f, 3.3176E-5f, 2.2307999E-5f, 1.3155999E-5f, 1.0295999E-5f, 1.3155999E-5f, 1.5443999E-5f, 1.4871999E-5f, 9.152E-6f, 1.144E-6f, -2.8599998E-6f, 0.0f, 8.579999E-6f, 1.3727999E-5f, 1.2011999E-5f, 5.1479997E-6f, -2.288E-6f, -5.7199995E-6f, -6.8639997E-6f, -4.576E-6f, -1.144E-6f, 0.0f, 0.0f, -1.144E-6f, -2.288E-6f, -3.4319999E-6f, -2.8599998E-6f, 5.1479997E-6f, 1.4871999E-5f, 2.0591999E-5f, 2.002E-5f, 1.3727999E-5f, 9.152E-6f, 7.4359996E-6f, 8.579999E-6f, 6.292E-6f, -5.72E-7f, -6.292E-6f, -6.8639997E-6f, -3.4319999E-6f, -5.72E-7f, -5.72E-7f, -2.8599998E-6f, -1.0868E-5f, -1.7732E-5f, -1.6588E-5f, -6.8639997E-6f, 7.4359996E-6f, 1.8875999E-5f, 2.2879998E-5f, 2.002E-5f, 1.3155999E-5f, 7.4359996E-6f, 3.4319999E-6f, 1.144E-6f, 0.0f, -4.004E-6f, -8.008E-6f, -1.0295999E-5f, -8.008E-6f, -5.1479997E-6f, -7.4359996E-6f, -1.1439999E-5f, -1.43E-5f, -1.3155999E-5f, -9.724E-6f, -8.579999E-6f, -6.8639997E-6f, -1.144E-6f, 3.4319999E-6f, 1.7159999E-6f, -8.008E-6f, -1.5443999E-5f, -1.0868E-5f, 1.7159999E-6f, 1.43E-5f, 1.8875999E-5f, 1.7732E-5f, 1.3155999E-5f, 9.724E-6f, 9.152E-6f, 7.4359996E-6f, 6.292E-6f, 5.7199995E-6f, 4.004E-6f, 1.144E-6f
        )));
        channelsData.add(new ArrayList<>(Arrays.asList(7.4359996E-5f, 5.3196E-5f, 3.6036E-5f, 2.9743998E-5f, 3.2032E-5f, 3.5464E-5f, 3.6608E-5f, 3.3747998E-5f, 2.9171999E-5f, 2.4023999E-5f, 1.8875999E-5f, 1.43E-5f, 9.724E-6f, 5.7199995E-6f, 1.7159999E-6f, -1.144E-6f, 0.0f, 1.144E-6f, -5.72E-7f, -5.7199995E-6f, -1.43E-5f, -2.2879998E-5f, -2.7455999E-5f, -2.6884E-5f, -2.002E-5f, -9.724E-6f, -5.72E-7f, 5.7199995E-6f, 9.152E-6f, 1.0295999E-5f, 8.579999E-6f, 5.1479997E-6f, -5.72E-7f, -8.579999E-6f, -1.6588E-5f, -2.3452E-5f, -2.5739999E-5f, -2.6311998E-5f, -2.6884E-5f, -2.8027998E-5f, -2.86E-5f, -2.8027998E-5f, -2.4595998E-5f, -2.1164E-5f, -2.1736E-5f, -2.6311998E-5f, -3.146E-5f, -3.0887997E-5f, -2.5168E-5f, -2.0591999E-5f, -2.1164E-5f, -2.5739999E-5f, -3.3176E-5f, -3.8323997E-5f, -3.8323997E-5f, -3.3747998E-5f, -2.9743998E-5f, -2.9171999E-5f, -3.0316E-5f, -3.146E-5f, -3.2032E-5f, -2.7455999E-5f, -1.8875999E-5f, -1.3155999E-5f, -1.7732E-5f, -2.4595998E-5f, -2.2879998E-5f, -1.5443999E-5f, -6.292E-6f, 2.8599998E-6f, 5.1479997E-6f, -1.144E-6f, -1.0295999E-5f, -1.8875999E-5f, -2.6311998E-5f, -3.3747998E-5f, -3.6608E-5f, -3.3747998E-5f, -2.6884E-5f, -2.1164E-5f, -1.9448E-5f, -2.0591999E-5f, -2.1736E-5f, -2.1164E-5f, -2.002E-5f, -2.2307999E-5f, -2.7455999E-5f, -3.3176E-5f, -3.3176E-5f, -2.6884E-5f, -1.8304E-5f, -1.2584E-5f, -1.0868E-5f, -1.2011999E-5f, -1.7159999E-5f, -2.3452E-5f, -2.4023999E-5f, -1.43E-5f, 1.7159999E-6f, 1.6016E-5f, 2.0591999E-5f, 1.7159999E-5f, 9.152E-6f, -5.72E-7f, -8.579999E-6f, -1.0295999E-5f, -1.7159999E-6f, 1.1439999E-5f, 2.2307999E-5f, 2.5739999E-5f, 2.1736E-5f, 1.5443999E-5f, 1.0295999E-5f, 9.724E-6f, 1.0868E-5f, 1.0868E-5f, 1.0295999E-5f, 1.1439999E-5f, 1.4871999E-5f, 1.9448E-5f, 2.0591999E-5f, 1.8304E-5f, 1.3155999E-5f, 8.579999E-6f, 5.1479997E-6f, 5.72E-7f, -3.4319999E-6f, -2.288E-6f, 6.292E-6f, 1.7159999E-5f, 2.3452E-5f, 2.5168E-5f, 2.1164E-5f, 1.2584E-5f, 4.004E-6f, -1.7159999E-6f, -4.004E-6f, -2.288E-6f, 5.72E-7f, 4.576E-6f, 5.1479997E-6f, 4.576E-6f, 3.4319999E-6f, 1.7159999E-6f, -1.7159999E-6f, -6.292E-6f, -8.579999E-6f, -9.152E-6f, -1.2584E-5f, -1.6588E-5f, -1.8875999E-5f, -1.6016E-5f, -1.0868E-5f, -7.4359996E-6f, -8.008E-6f, -1.3727999E-5f, -2.0591999E-5f, -2.6884E-5f, -3.146E-5f, -3.4319997E-5f, -3.3747998E-5f, -2.4023999E-5f, -5.1479997E-6f, 1.3727999E-5f, 2.0591999E-5f, 1.2584E-5f, -1.7159999E-6f, -1.3155999E-5f, -1.7732E-5f, -1.4871999E-5f, -1.1439999E-5f, -1.1439999E-5f, -1.6016E-5f, -2.0591999E-5f, -1.8875999E-5f, -1.0868E-5f, 0.0f, 7.4359996E-6f, 7.4359996E-6f, 2.288E-6f, -4.576E-6f, -9.724E-6f, -1.3155999E-5f, -1.2584E-5f, -8.008E-6f, -4.576E-6f, -4.576E-6f, -8.579999E-6f, -1.2011999E-5f, -1.43E-5f, -1.2011999E-5f, -4.004E-6f, 4.576E-6f, 9.152E-6f, 9.724E-6f, 6.8639997E-6f, 4.576E-6f, 4.004E-6f, 5.1479997E-6f, 4.576E-6f, 5.72E-7f, -2.288E-6f, 0.0f, 5.1479997E-6f, 8.008E-6f, 6.292E-6f, 0.0f, -7.4359996E-6f, -1.1439999E-5f, -6.292E-6f, 5.1479997E-6f, 1.6016E-5f, 2.2879998E-5f, 2.5739999E-5f, 2.5168E-5f, 2.2879998E-5f, 1.9448E-5f, 1.6588E-5f, 1.5443999E-5f, 1.7159999E-5f, 1.8304E-5f, 1.8875999E-5f, 2.002E-5f, 2.2879998E-5f, 2.6884E-5f, 2.6311998E-5f, 2.2307999E-5f, 1.7732E-5f, 1.6016E-5f, 1.6588E-5f, 1.6588E-5f, 1.8304E-5f, 2.3452E-5f, 2.8027998E-5f, 2.5739999E-5f, 1.6588E-5f, 8.579999E-6f, 1.2011999E-5f, 2.6311998E-5f, 4.29E-5f, 5.3768E-5f, 5.5483997E-5f, 5.0908E-5f, 4.7475998E-5f, 4.7475998E-5f, 4.6332E-5f, 4.2328E-5f, 3.7179998E-5f, 3.2032E-5f, 2.6884E-5f
        )));
        eegPacket = new MbtEEGPacket(channelsData);
        if(useQualities)
            eegPacket.setQualities(new ArrayList<>(Arrays.asList(ArrayUtils.toObject(MBTSignalQualityChecker.computeQualitiesForPacketNew(250,250,channelsData)))));
        eegPacketsList.add(eegPacket);
        return eegPacketsList;

    }

    private ArrayList<MbtEEGPacket> getEEGDataSet2(boolean useQualities) {
        ArrayList<MbtEEGPacket> eegPacketsList = new ArrayList<>();
        ArrayList<ArrayList<Float>> channelsData = new ArrayList<>();
        channelsData.add(new ArrayList<>(Arrays.asList(-5.72E-7f, 2.288E-6f, 5.7199995E-6f, 5.1479997E-6f, 0.0f, -5.1479997E-6f, -7.4359996E-6f, -7.4359996E-6f, -6.292E-6f, -4.004E-6f, 5.72E-7f, 9.152E-6f, 1.7159999E-5f, 1.8875999E-5f, 1.43E-5f, 6.292E-6f, 1.7159999E-6f, 5.72E-7f, -1.144E-6f, -3.4319999E-6f, -6.8639997E-6f, -6.8639997E-6f, -2.8599998E-6f, 2.288E-6f, 5.1479997E-6f, 2.288E-6f, -3.4319999E-6f, -6.292E-6f, -6.292E-6f, -2.8599998E-6f, 5.72E-7f, 4.576E-6f, 6.8639997E-6f, 6.8639997E-6f, 3.4319999E-6f, -4.576E-6f, -8.008E-6f, 5.72E-7f, 1.4871999E-5f, 2.4023999E-5f, 1.8304E-5f, 5.72E-7f, -1.6016E-5f, -2.0591999E-5f, -1.3155999E-5f, -6.292E-6f, -4.576E-6f, -6.292E-6f, -8.579999E-6f, -9.152E-6f, -1.2011999E-5f, -1.6016E-5f, -1.5443999E-5f, -9.724E-6f, -4.004E-6f, -5.1479997E-6f, -1.2011999E-5f, -2.0591999E-5f, -2.9171999E-5f, -3.5464E-5f, -3.8896E-5f, -3.6608E-5f, -3.146E-5f, -2.5739999E-5f, -2.0591999E-5f, -1.9448E-5f, -1.8304E-5f, -1.6016E-5f, -1.3727999E-5f, -1.2011999E-5f, -1.0295999E-5f, -7.4359996E-6f, -4.004E-6f, -1.144E-6f, 1.7159999E-6f, 3.4319999E-6f, 6.8639997E-6f, 1.2011999E-5f, 1.6588E-5f, 1.6588E-5f, 1.0868E-5f, 4.576E-6f, 2.288E-6f, 2.288E-6f, 3.4319999E-6f, 1.144E-6f, -4.576E-6f, -1.0868E-5f, -1.6016E-5f, -1.8304E-5f, -1.9448E-5f, -1.6588E-5f, -9.724E-6f, 0.0f, 9.724E-6f, 1.6016E-5f, 2.1164E-5f, 2.5168E-5f, 2.5168E-5f, 2.1164E-5f, 1.5443999E-5f, 1.43E-5f, 1.7732E-5f, 2.1164E-5f, 2.5739999E-5f, 2.9743998E-5f, 3.0887997E-5f, 3.146E-5f, 3.0887997E-5f, 2.8027998E-5f, 2.2307999E-5f, 1.7159999E-5f, 1.5443999E-5f, 1.5443999E-5f, 1.7732E-5f, 2.1164E-5f, 2.6884E-5f, 3.2032E-5f, 3.4319997E-5f, 3.3747998E-5f, 3.2032E-5f, 3.2032E-5f, 3.4319997E-5f, 3.6036E-5f, 3.7179998E-5f, 3.4319997E-5f, 2.86E-5f, 2.5168E-5f, 2.6311998E-5f, 3.0887997E-5f, 3.2604E-5f, 2.9743998E-5f, 2.5168E-5f, 2.1164E-5f, 1.7732E-5f, 1.3727999E-5f, 8.579999E-6f, 5.7199995E-6f, 5.7199995E-6f, 8.008E-6f, 6.8639997E-6f, 1.7159999E-6f, -2.288E-6f, -2.8599998E-6f, -1.7159999E-6f, -2.8599998E-6f, -6.292E-6f, -5.7199995E-6f, -4.004E-6f, -4.004E-6f, -8.579999E-6f, -1.43E-5f, -1.4871999E-5f, -1.4871999E-5f, -1.7732E-5f, -2.5168E-5f, -2.8027998E-5f, -1.7159999E-5f, 2.8599998E-6f, 2.0591999E-5f, 2.4023999E-5f, 1.1439999E-5f, -6.292E-6f, -1.8304E-5f, -2.1736E-5f, -1.8304E-5f, -1.3727999E-5f, -1.1439999E-5f, -1.3727999E-5f, -1.9448E-5f, -2.5739999E-5f, -3.0887997E-5f, -3.2604E-5f, -3.3176E-5f, -3.4892E-5f, -3.9468E-5f, -4.5187997E-5f, -4.5187997E-5f, -3.8896E-5f, -2.6884E-5f, -1.3727999E-5f, -8.008E-6f, -9.724E-6f, -1.43E-5f, -1.3727999E-5f, -8.579999E-6f, -4.576E-6f, -1.7159999E-6f, -3.4319999E-6f, -8.579999E-6f, -1.4871999E-5f, -2.002E-5f, -1.9448E-5f, -1.8875999E-5f, -1.9448E-5f, -2.2307999E-5f, -2.6311998E-5f, -2.8027998E-5f, -2.7455999E-5f, -2.7455999E-5f, -2.9743998E-5f, -3.2604E-5f, -3.146E-5f, -2.5739999E-5f, -2.002E-5f, -2.002E-5f, -2.6311998E-5f, -2.9171999E-5f, -2.4595998E-5f, -1.6588E-5f, -9.152E-6f, -3.4319999E-6f, -1.7159999E-6f, -5.7199995E-6f, -1.2584E-5f, -1.8304E-5f, -2.2879998E-5f, -2.0591999E-5f, -1.3155999E-5f, -4.576E-6f, -1.144E-6f, -1.7159999E-6f, -2.8599998E-6f, -3.4319999E-6f, -4.576E-6f, -8.579999E-6f, -1.43E-5f, -1.9448E-5f, -2.6884E-5f, -3.4892E-5f, -4.0611998E-5f, -4.0611998E-5f, -2.9171999E-5f, -1.1439999E-5f, 1.7159999E-6f, 3.4319999E-6f, -6.292E-6f, -1.6588E-5f, -2.002E-5f, -1.5443999E-5f, -6.8639997E-6f, -1.144E-6f, 0.0f, -5.1479997E-6f, -1.1439999E-5f, -1.6016E-5f, -1.8304E-5f, -1.8304E-5f, -1.8304E-5f, -2.002E-5f
        )));
        channelsData.add(new ArrayList<>(Arrays.asList(2.4023999E-5f, 2.3452E-5f, 2.3452E-5f, 2.1164E-5f, 1.7732E-5f, 1.2584E-5f, 6.292E-6f, 0.0f, -5.1479997E-6f, -6.292E-6f, -1.144E-6f, 1.0295999E-5f, 2.1736E-5f, 2.6311998E-5f, 2.2307999E-5f, 1.43E-5f, 8.008E-6f, 5.1479997E-6f, 4.576E-6f, 4.576E-6f, 2.288E-6f, -5.72E-7f, -2.8599998E-6f, -3.4319999E-6f, -4.576E-6f, -7.4359996E-6f, -1.2011999E-5f, -1.4871999E-5f, -1.5443999E-5f, -1.3155999E-5f, -9.152E-6f, -5.1479997E-6f, -2.8599998E-6f, -3.4319999E-6f, -8.008E-6f, -1.43E-5f, -1.6588E-5f, -8.008E-6f, 6.292E-6f, 1.6016E-5f, 1.2011999E-5f, -3.4319999E-6f, -2.002E-5f, -2.4023999E-5f, -1.6016E-5f, -5.7199995E-6f, -5.72E-7f, -5.72E-7f, -2.8599998E-6f, -4.004E-6f, -5.7199995E-6f, -7.4359996E-6f, -5.7199995E-6f, 1.144E-6f, 6.292E-6f, 4.004E-6f, -6.8639997E-6f, -2.0591999E-5f, -3.2604E-5f, -3.7751997E-5f, -3.7179998E-5f, -3.3176E-5f, -3.0887997E-5f, -3.0316E-5f, -2.9171999E-5f, -2.6311998E-5f, -2.2879998E-5f, -1.8875999E-5f, -1.8875999E-5f, -2.0591999E-5f, -1.9448E-5f, -1.7159999E-5f, -1.3727999E-5f, -1.1439999E-5f, -8.579999E-6f, -7.4359996E-6f, -5.7199995E-6f, -3.4319999E-6f, -2.8599998E-6f, -5.7199995E-6f, -1.2584E-5f, -1.8304E-5f, -2.002E-5f, -1.8875999E-5f, -1.5443999E-5f, -1.4871999E-5f, -1.8875999E-5f, -2.6311998E-5f, -3.4319997E-5f, -4.004E-5f, -4.2328E-5f, -4.1183997E-5f, -3.5464E-5f, -2.4595998E-5f, -1.43E-5f, -6.8639997E-6f, -2.8599998E-6f, -1.144E-6f, -2.288E-6f, -5.7199995E-6f, -8.579999E-6f, -1.0295999E-5f, -9.724E-6f, -8.579999E-6f, -2.288E-6f, 8.008E-6f, 1.4871999E-5f, 1.8304E-5f, 1.8304E-5f, 1.43E-5f, 8.579999E-6f, 1.7159999E-6f, -4.004E-6f, -9.152E-6f, -1.0868E-5f, -8.008E-6f, -1.7159999E-6f, 4.576E-6f, 7.4359996E-6f, 6.8639997E-6f, 4.004E-6f, 1.144E-6f, 1.144E-6f, 2.8599998E-6f, 7.4359996E-6f, 1.0868E-5f, 8.579999E-6f, 5.1479997E-6f, 5.1479997E-6f, 9.152E-6f, 1.2584E-5f, 1.2011999E-5f, 6.8639997E-6f, 2.8599998E-6f, 1.7159999E-6f, 1.7159999E-6f, 1.144E-6f, 1.144E-6f, 3.4319999E-6f, 8.008E-6f, 1.0868E-5f, 9.724E-6f, 8.579999E-6f, 1.0295999E-5f, 1.2584E-5f, 1.3727999E-5f, 1.3155999E-5f, 1.43E-5f, 1.7732E-5f, 1.9448E-5f, 1.7159999E-5f, 1.2011999E-5f, 9.152E-6f, 7.4359996E-6f, 1.7159999E-6f, -5.7199995E-6f, -7.4359996E-6f, 4.576E-6f, 2.5168E-5f, 4.4615997E-5f, 5.2623996E-5f, 4.4615997E-5f, 2.9171999E-5f, 1.4871999E-5f, 8.008E-6f, 8.008E-6f, 1.0868E-5f, 1.2584E-5f, 1.2011999E-5f, 9.152E-6f, 7.4359996E-6f, 6.292E-6f, 5.7199995E-6f, 5.1479997E-6f, 3.4319999E-6f, 5.72E-7f, -5.1479997E-6f, -8.579999E-6f, -6.8639997E-6f, 1.7159999E-6f, 1.3727999E-5f, 1.9448E-5f, 1.5443999E-5f, 5.7199995E-6f, 1.144E-6f, 4.004E-6f, 8.008E-6f, 1.1439999E-5f, 1.1439999E-5f, 8.008E-6f, 3.4319999E-6f, 1.7159999E-6f, 3.4319999E-6f, 4.576E-6f, 4.004E-6f, 2.288E-6f, 0.0f, -5.72E-7f, 5.72E-7f, 5.72E-7f, -2.288E-6f, -7.4359996E-6f, -1.1439999E-5f, -1.2584E-5f, -1.2584E-5f, -1.6016E-5f, -2.3452E-5f, -2.8027998E-5f, -2.5168E-5f, -1.7732E-5f, -9.724E-6f, -4.004E-6f, -4.004E-6f, -1.0868E-5f, -1.8304E-5f, -2.1736E-5f, -2.1736E-5f, -1.6588E-5f, -8.008E-6f, -1.144E-6f, 1.144E-6f, -5.72E-7f, -2.288E-6f, -1.7159999E-6f, -2.288E-6f, -2.8599998E-6f, -6.292E-6f, -1.3155999E-5f, -2.3452E-5f, -3.3176E-5f, -4.004E-5f, -4.1183997E-5f, -3.3747998E-5f, -2.002E-5f, -8.008E-6f, -4.576E-6f, -1.0868E-5f, -2.0591999E-5f, -2.5168E-5f, -2.1164E-5f, -1.3155999E-5f, -1.0295999E-5f, -1.5443999E-5f, -2.6311998E-5f, -3.5464E-5f, -3.7751997E-5f, -3.7179998E-5f, -3.6036E-5f, -3.6036E-5f, -3.7751997E-5f
        )));
        MbtEEGPacket eegPacket = new MbtEEGPacket(channelsData);
        if(useQualities)
            eegPacket.setQualities(new ArrayList<>(Arrays.asList(ArrayUtils.toObject(MBTSignalQualityChecker.computeQualitiesForPacketNew(250,250,channelsData)))));
        eegPacketsList.add(eegPacket);
        channelsData = new ArrayList<>();

        channelsData.add(new ArrayList<>(Arrays.asList(-2.0591999E-5f, -1.9448E-5f, -1.43E-5f, -9.152E-6f, -7.4359996E-6f, -1.0295999E-5f, -1.4871999E-5f, -1.6016E-5f, -1.2011999E-5f, -4.004E-6f, 2.288E-6f, 2.8599998E-6f, 2.288E-6f, 4.004E-6f, 1.0295999E-5f, 1.6588E-5f, 1.7732E-5f, 1.7159999E-5f, 1.8875999E-5f, 2.3452E-5f, 2.86E-5f, 3.2032E-5f, 3.3747998E-5f, 3.146E-5f, 2.8027998E-5f, 2.6884E-5f, 2.7455999E-5f, 3.0316E-5f, 3.7179998E-5f, 4.6904E-5f, 5.1479998E-5f, 5.0336E-5f, 4.6904E-5f, 4.3472E-5f, 4.1755997E-5f, 4.1183997E-5f, 4.004E-5f, 3.8896E-5f, 3.8323997E-5f, 3.7751997E-5f, 3.7751997E-5f, 3.3747998E-5f, 2.7455999E-5f, 2.3452E-5f, 2.4023999E-5f, 2.5739999E-5f, 2.7455999E-5f, 2.9171999E-5f, 2.9743998E-5f, 3.2032E-5f, 3.4892E-5f, 3.7179998E-5f, 4.4043998E-5f, 5.2623996E-5f, 5.5483997E-5f, 4.9764E-5f, 3.8323997E-5f, 2.9743998E-5f, 2.8027998E-5f, 2.9171999E-5f, 2.9743998E-5f, 2.5739999E-5f, 2.4595998E-5f, 2.86E-5f, 3.3176E-5f, 3.2032E-5f, 2.1736E-5f, 6.292E-6f, -5.1479997E-6f, -7.4359996E-6f, -1.7159999E-6f, 8.579999E-6f, 1.8875999E-5f, 2.6311998E-5f, 2.6884E-5f, 2.1164E-5f, 1.0295999E-5f, -1.144E-6f, -7.4359996E-6f, -6.292E-6f, -1.7159999E-6f, -1.144E-6f, -4.004E-6f, -8.008E-6f, -9.724E-6f, -8.579999E-6f, -6.8639997E-6f, -5.1479997E-6f, -5.1479997E-6f, -5.7199995E-6f, -8.008E-6f, -1.1439999E-5f, -1.2584E-5f, -1.0868E-5f, -1.0868E-5f, -1.2011999E-5f, -1.4871999E-5f, -1.4871999E-5f, -1.1439999E-5f, -1.2011999E-5f, -1.7732E-5f, -2.6884E-5f, -3.146E-5f, -2.86E-5f, -1.7159999E-5f, -2.8599998E-6f, 1.144E-6f, -6.292E-6f, -2.002E-5f, -3.3747998E-5f, -3.8896E-5f, -3.5464E-5f, -2.7455999E-5f, -1.8304E-5f, -9.724E-6f, -4.576E-6f, -5.7199995E-6f, -9.724E-6f, -1.4871999E-5f, -2.2879998E-5f, -3.4319997E-5f, -4.4615997E-5f, -4.5187997E-5f, -3.4892E-5f, -2.1736E-5f, -1.43E-5f, -1.7732E-5f, -2.6311998E-5f, -3.2032E-5f, -3.6036E-5f, -3.8896E-5f, -4.004E-5f, -3.3176E-5f, -1.7732E-5f, -2.288E-6f, 4.576E-6f, -1.7159999E-6f, -1.6588E-5f, -2.9743998E-5f, -3.5464E-5f, -2.9743998E-5f, -1.8304E-5f, -9.152E-6f, -6.292E-6f, -9.724E-6f, -1.3155999E-5f, -1.7159999E-5f, -2.1164E-5f, -2.3452E-5f, -2.4023999E-5f, -2.2879998E-5f, -2.4595998E-5f, -2.9743998E-5f, -3.2032E-5f, -2.5168E-5f, -1.2584E-5f, -4.576E-6f, -4.576E-6f, -9.152E-6f, -1.7159999E-5f, -2.5168E-5f, -3.2604E-5f, -3.2032E-5f, -2.0591999E-5f, -6.292E-6f, 2.8599998E-6f, 1.144E-6f, -8.579999E-6f, -1.7732E-5f, -2.4023999E-5f, -2.7455999E-5f, -3.0887997E-5f, -3.0887997E-5f, -2.3452E-5f, -1.4871999E-5f, -1.0295999E-5f, -9.724E-6f, -1.0868E-5f, -1.1439999E-5f, -1.2011999E-5f, -9.724E-6f, -6.292E-6f, -2.288E-6f, 3.4319999E-6f, 9.152E-6f, 1.5443999E-5f, 1.7732E-5f, 1.6016E-5f, 1.1439999E-5f, 5.1479997E-6f, 0.0f, -3.4319999E-6f, -6.8639997E-6f, -9.724E-6f, -9.152E-6f, -5.7199995E-6f, -4.004E-6f, -5.7199995E-6f, -8.008E-6f, -8.008E-6f, -7.4359996E-6f, -6.8639997E-6f, -8.008E-6f, -8.008E-6f, -5.7199995E-6f, -2.8599998E-6f, -2.288E-6f, -4.576E-6f, -2.8599998E-6f, 4.576E-6f, 1.6016E-5f, 2.6884E-5f, 3.3176E-5f, 3.4319997E-5f, 2.9743998E-5f, 2.4595998E-5f, 2.1736E-5f, 2.2307999E-5f, 2.6884E-5f, 3.0316E-5f, 2.9743998E-5f, 2.4595998E-5f, 1.8304E-5f, 1.6016E-5f, 1.6016E-5f, 1.7159999E-5f, 1.7159999E-5f, 1.4871999E-5f, 1.43E-5f, 1.6016E-5f, 1.9448E-5f, 2.1164E-5f, 1.7732E-5f, 1.3155999E-5f, 9.724E-6f, 5.7199995E-6f, 5.72E-7f, -1.144E-6f, 5.7199995E-6f, 1.4871999E-5f, 2.5739999E-5f, 3.5464E-5f, 4.004E-5f, 3.9468E-5f, 3.6036E-5f, 3.0316E-5f, 2.2879998E-5f, 1.4871999E-5f, 1.1439999E-5f, 1.2011999E-5f
        )));
        channelsData.add(new ArrayList<>(Arrays.asList(-3.8323997E-5f, -3.7179998E-5f, -3.5464E-5f, -3.4319997E-5f, -3.5464E-5f, -3.6608E-5f, -3.7751997E-5f, -3.6608E-5f, -3.2032E-5f, -2.5739999E-5f, -2.0591999E-5f, -2.0591999E-5f, -2.2879998E-5f, -2.2879998E-5f, -1.8875999E-5f, -1.3727999E-5f, -1.1439999E-5f, -1.2584E-5f, -1.2584E-5f, -9.724E-6f, -6.292E-6f, -4.004E-6f, -6.292E-6f, -1.1439999E-5f, -1.4871999E-5f, -1.3155999E-5f, -9.152E-6f, -6.292E-6f, -1.144E-6f, 5.7199995E-6f, 9.724E-6f, 1.1439999E-5f, 1.1439999E-5f, 1.1439999E-5f, 1.0868E-5f, 1.2011999E-5f, 1.2584E-5f, 1.2011999E-5f, 1.0868E-5f, 1.0295999E-5f, 1.0295999E-5f, 7.4359996E-6f, 3.4319999E-6f, 2.8599998E-6f, 6.292E-6f, 8.579999E-6f, 5.7199995E-6f, -1.7159999E-6f, -1.0295999E-5f, -1.2584E-5f, -6.8639997E-6f, 2.288E-6f, 1.4871999E-5f, 2.6884E-5f, 3.146E-5f, 2.8027998E-5f, 1.8304E-5f, 1.0295999E-5f, 7.4359996E-6f, 9.724E-6f, 1.2011999E-5f, 1.2011999E-5f, 1.2011999E-5f, 1.3727999E-5f, 1.7159999E-5f, 1.7159999E-5f, 1.0868E-5f, -5.72E-7f, -1.1439999E-5f, -1.4871999E-5f, -9.152E-6f, 2.8599998E-6f, 1.6016E-5f, 2.6311998E-5f, 3.0887997E-5f, 2.9743998E-5f, 2.3452E-5f, 1.43E-5f, 5.7199995E-6f, 2.288E-6f, 2.8599998E-6f, 3.4319999E-6f, 5.72E-7f, -2.8599998E-6f, -3.4319999E-6f, -1.7159999E-6f, 2.288E-6f, 5.7199995E-6f, 7.4359996E-6f, 8.008E-6f, 6.8639997E-6f, 4.576E-6f, 5.1479997E-6f, 6.8639997E-6f, 7.4359996E-6f, 6.8639997E-6f, 6.8639997E-6f, 8.008E-6f, 1.2011999E-5f, 1.5443999E-5f, 1.5443999E-5f, 1.3155999E-5f, 1.1439999E-5f, 1.43E-5f, 2.4595998E-5f, 4.004E-5f, 4.8619997E-5f, 4.4615997E-5f, 3.0316E-5f, 1.3727999E-5f, 5.7199995E-6f, 8.579999E-6f, 1.5443999E-5f, 2.4023999E-5f, 3.146E-5f, 3.6608E-5f, 3.7179998E-5f, 3.3747998E-5f, 2.86E-5f, 2.0591999E-5f, 1.1439999E-5f, 4.576E-6f, 4.576E-6f, 1.3155999E-5f, 2.2879998E-5f, 2.8027998E-5f, 2.4023999E-5f, 1.4871999E-5f, 7.4359996E-6f, 5.72E-7f, -4.576E-6f, -5.1479997E-6f, 2.8599998E-6f, 1.7732E-5f, 3.2032E-5f, 3.7179998E-5f, 2.9743998E-5f, 1.43E-5f, 5.72E-7f, -5.7199995E-6f, 0.0f, 1.2011999E-5f, 2.0591999E-5f, 2.1736E-5f, 1.8875999E-5f, 1.6016E-5f, 1.5443999E-5f, 1.4871999E-5f, 1.4871999E-5f, 1.5443999E-5f, 1.6016E-5f, 1.6016E-5f, 1.2011999E-5f, 1.0295999E-5f, 1.7159999E-5f, 2.8027998E-5f, 3.4892E-5f, 3.2032E-5f, 2.3452E-5f, 1.2011999E-5f, 1.144E-6f, -6.8639997E-6f, -6.8639997E-6f, 4.576E-6f, 2.0591999E-5f, 3.2032E-5f, 3.4892E-5f, 2.8027998E-5f, 1.6588E-5f, 6.292E-6f, -1.7159999E-6f, -8.579999E-6f, -1.0868E-5f, -7.4359996E-6f, -4.004E-6f, -4.576E-6f, -7.4359996E-6f, -9.152E-6f, -9.724E-6f, -1.0295999E-5f, -9.152E-6f, -6.292E-6f, -5.1479997E-6f, -4.576E-6f, -2.8599998E-6f, 0.0f, 3.4319999E-6f, 3.4319999E-6f, -1.144E-6f, -9.152E-6f, -1.4871999E-5f, -1.6588E-5f, -1.7732E-5f, -1.8875999E-5f, -1.9448E-5f, -1.9448E-5f, -1.9448E-5f, -2.2879998E-5f, -2.6311998E-5f, -2.9743998E-5f, -3.2032E-5f, -3.3176E-5f, -3.4892E-5f, -3.6036E-5f, -3.7179998E-5f, -3.8896E-5f, -4.1183997E-5f, -4.5187997E-5f, -4.4615997E-5f, -3.8896E-5f, -3.0316E-5f, -2.002E-5f, -1.2011999E-5f, -9.724E-6f, -1.3727999E-5f, -1.9448E-5f, -2.1164E-5f, -1.8304E-5f, -1.2584E-5f, -8.579999E-6f, -7.4359996E-6f, -1.0295999E-5f, -1.4871999E-5f, -1.7732E-5f, -1.8304E-5f, -1.7159999E-5f, -1.6016E-5f, -1.4871999E-5f, -1.5443999E-5f, -1.5443999E-5f, -1.4871999E-5f, -1.43E-5f, -1.6016E-5f, -1.9448E-5f, -2.1164E-5f, -2.3452E-5f, -2.5739999E-5f, -2.4023999E-5f, -1.5443999E-5f, -2.8599998E-6f, 1.0295999E-5f, 2.4023999E-5f, 3.0316E-5f, 2.9743998E-5f, 2.4595998E-5f, 1.8875999E-5f, 1.2011999E-5f, 5.7199995E-6f, 1.144E-6f, -5.72E-7f
        )));
        eegPacket = new MbtEEGPacket(channelsData);
        if(useQualities)
            eegPacket.setQualities(new ArrayList<>(Arrays.asList(ArrayUtils.toObject(MBTSignalQualityChecker.computeQualitiesForPacketNew(250,250,channelsData)))));
        eegPacketsList.add(eegPacket);
        channelsData = new ArrayList<>();

        channelsData.add(new ArrayList<>(Arrays.asList(1.2584E-5f, 9.724E-6f, 2.288E-6f, -5.1479997E-6f, -9.724E-6f, -5.7199995E-6f, 3.4319999E-6f, 9.724E-6f, 1.3155999E-5f, 1.3155999E-5f, 1.0868E-5f, 5.1479997E-6f, -1.7159999E-6f, -2.288E-6f, 3.4319999E-6f, 1.0868E-5f, 1.43E-5f, 9.724E-6f, 4.004E-6f, 2.288E-6f, 6.292E-6f, 9.724E-6f, 8.579999E-6f, 7.4359996E-6f, 6.292E-6f, 4.576E-6f, 5.72E-7f, -1.7159999E-6f, 2.8599998E-6f, 1.0295999E-5f, 1.7732E-5f, 2.4023999E-5f, 2.5168E-5f, 2.3452E-5f, 2.2879998E-5f, 2.4595998E-5f, 2.5168E-5f, 2.0591999E-5f, 1.6016E-5f, 1.2584E-5f, 1.0868E-5f, 8.008E-6f, 3.4319999E-6f, 2.288E-6f, 5.7199995E-6f, 1.2584E-5f, 1.8875999E-5f, 1.9448E-5f, 1.7732E-5f, 1.6016E-5f, 1.7732E-5f, 1.6588E-5f, 9.152E-6f, 2.8599998E-6f, 5.1479997E-6f, 1.6016E-5f, 2.6311998E-5f, 2.7455999E-5f, 2.1736E-5f, 1.3155999E-5f, 4.576E-6f, -5.72E-7f, -6.292E-6f, -8.579999E-6f, -7.4359996E-6f, -4.576E-6f, -3.4319999E-6f, -6.8639997E-6f, -9.152E-6f, -5.7199995E-6f, 1.144E-6f, 7.4359996E-6f, 1.2011999E-5f, 1.43E-5f, 1.3155999E-5f, 4.576E-6f, -1.1439999E-5f, -3.2032E-5f, -4.5187997E-5f, -4.4615997E-5f, -3.4892E-5f, -2.3452E-5f, -2.002E-5f, -2.2879998E-5f, -2.8027998E-5f, -3.4892E-5f, -4.1755997E-5f, -4.7475998E-5f, -4.9191996E-5f, -4.9764E-5f, -4.9191996E-5f, -4.7475998E-5f, -4.1755997E-5f, -3.4319997E-5f, -2.9171999E-5f, -2.86E-5f, -2.9743998E-5f, -2.86E-5f, -2.1164E-5f, -9.724E-6f, -4.004E-6f, -6.8639997E-6f, -1.5443999E-5f, -1.7732E-5f, -1.0868E-5f, -5.72E-7f, 8.579999E-6f, 7.4359996E-6f, -2.288E-6f, -1.3155999E-5f, -2.0591999E-5f, -2.1736E-5f, -1.9448E-5f, -1.5443999E-5f, -1.2584E-5f, -1.1439999E-5f, -9.152E-6f, -6.8639997E-6f, -4.576E-6f, -4.576E-6f, -7.4359996E-6f, -1.0868E-5f, -1.2584E-5f, -9.152E-6f, 1.144E-6f, 1.3155999E-5f, 2.1736E-5f, 2.2307999E-5f, 1.8304E-5f, 1.3155999E-5f, 1.1439999E-5f, 1.3727999E-5f, 1.7159999E-5f, 2.0591999E-5f, 2.1164E-5f, 1.6588E-5f, 1.0295999E-5f, 4.004E-6f, 2.288E-6f, 5.7199995E-6f, 9.152E-6f, 8.579999E-6f, 1.144E-6f, -6.8639997E-6f, -7.4359996E-6f, -1.144E-6f, 6.8639997E-6f, 1.0868E-5f, 1.2584E-5f, 1.3727999E-5f, 1.43E-5f, 1.2584E-5f, 5.7199995E-6f, -1.144E-6f, -3.4319999E-6f, 1.7159999E-6f, 1.2011999E-5f, 2.1736E-5f, 2.7455999E-5f, 3.2032E-5f, 3.7179998E-5f, 3.9468E-5f, 3.4319997E-5f, 2.5739999E-5f, 2.002E-5f, 1.8875999E-5f, 2.1164E-5f, 2.0591999E-5f, 1.8304E-5f, 1.6588E-5f, 1.4871999E-5f, 1.2011999E-5f, 7.4359996E-6f, 5.1479997E-6f, 6.292E-6f, 8.579999E-6f, 1.0868E-5f, 1.2584E-5f, 1.2011999E-5f, 1.2584E-5f, 1.4871999E-5f, 1.8875999E-5f, 2.3452E-5f, 2.86E-5f, 3.4892E-5f, 3.8896E-5f, 3.8896E-5f, 3.3747998E-5f, 2.7455999E-5f, 2.4595998E-5f, 2.4023999E-5f, 2.3452E-5f, 2.002E-5f, 1.4871999E-5f, 1.1439999E-5f, 1.0868E-5f, 1.2011999E-5f, 1.1439999E-5f, 6.8639997E-6f, 1.144E-6f, -2.288E-6f, -2.8599998E-6f, -4.004E-6f, -5.7199995E-6f, -5.1479997E-6f, -4.004E-6f, -5.7199995E-6f, -1.2011999E-5f, -1.8304E-5f, -2.1164E-5f, -1.9448E-5f, -1.0868E-5f, 0.0f, 5.7199995E-6f, 8.579999E-6f, 6.8639997E-6f, 5.72E-7f, -7.4359996E-6f, -8.008E-6f, 5.72E-7f, 1.1439999E-5f, 2.002E-5f, 2.002E-5f, 1.2584E-5f, 6.292E-6f, 2.8599998E-6f, -1.7159999E-6f, -9.724E-6f, -1.9448E-5f, -2.5168E-5f, -2.5168E-5f, -2.4023999E-5f, -2.5739999E-5f, -2.9171999E-5f, -3.146E-5f, -3.3176E-5f, -3.3747998E-5f, -3.6036E-5f, -3.8896E-5f, -3.9468E-5f, -3.8323997E-5f, -3.7179998E-5f, -3.9468E-5f, -4.5187997E-5f, -5.0908E-5f, -5.434E-5f, -5.4911998E-5f, -5.3768E-5f, -4.8619997E-5f, -4.0611998E-5f
        )));
        channelsData.add(new ArrayList<>(Arrays.asList(-1.144E-6f, -2.8599998E-6f, -7.4359996E-6f, -1.3155999E-5f, -1.6016E-5f, -1.0868E-5f, -5.72E-7f, 7.4359996E-6f, 9.724E-6f, 8.579999E-6f, 6.8639997E-6f, 3.4319999E-6f, -1.144E-6f, -2.288E-6f, 5.72E-7f, 4.576E-6f, 4.576E-6f, -1.7159999E-6f, -1.0295999E-5f, -1.3155999E-5f, -8.008E-6f, -1.7159999E-6f, 0.0f, -2.288E-6f, -5.7199995E-6f, -1.0295999E-5f, -1.4871999E-5f, -1.4871999E-5f, -9.152E-6f, -1.144E-6f, 5.7199995E-6f, 1.3727999E-5f, 1.7159999E-5f, 1.6588E-5f, 1.5443999E-5f, 1.43E-5f, 1.3727999E-5f, 1.2011999E-5f, 9.152E-6f, 5.1479997E-6f, 1.144E-6f, -2.288E-6f, -6.292E-6f, -6.8639997E-6f, -4.576E-6f, -5.72E-7f, 4.004E-6f, 5.1479997E-6f, 2.8599998E-6f, 1.144E-6f, 1.144E-6f, 5.72E-7f, -4.576E-6f, -9.724E-6f, -7.4359996E-6f, 2.8599998E-6f, 1.43E-5f, 1.7159999E-5f, 1.1439999E-5f, 1.144E-6f, -8.579999E-6f, -1.3155999E-5f, -1.4871999E-5f, -1.43E-5f, -1.3155999E-5f, -1.1439999E-5f, -9.724E-6f, -8.579999E-6f, -6.292E-6f, 0.0f, 7.4359996E-6f, 1.3155999E-5f, 1.7732E-5f, 1.9448E-5f, 1.7159999E-5f, 8.008E-6f, -8.579999E-6f, -2.86E-5f, -4.1755997E-5f, -4.1755997E-5f, -3.146E-5f, -1.9448E-5f, -1.3727999E-5f, -1.5443999E-5f, -2.1164E-5f, -2.7455999E-5f, -3.2032E-5f, -3.4319997E-5f, -3.5464E-5f, -3.7179998E-5f, -3.9468E-5f, -3.7751997E-5f, -3.0887997E-5f, -2.1736E-5f, -1.4871999E-5f, -1.2584E-5f, -1.0868E-5f, -6.8639997E-6f, 1.7159999E-6f, 1.1439999E-5f, 1.7732E-5f, 1.6588E-5f, 1.2011999E-5f, 1.1439999E-5f, 1.7732E-5f, 2.8027998E-5f, 3.6036E-5f, 3.6036E-5f, 2.6311998E-5f, 1.43E-5f, 6.292E-6f, 6.8639997E-6f, 1.3155999E-5f, 1.9448E-5f, 2.2307999E-5f, 2.1736E-5f, 2.2879998E-5f, 2.4023999E-5f, 2.2879998E-5f, 2.002E-5f, 1.7159999E-5f, 1.6588E-5f, 1.8304E-5f, 2.2879998E-5f, 3.2032E-5f, 4.4043998E-5f, 5.3196E-5f, 5.3768E-5f, 4.6904E-5f, 3.6036E-5f, 2.86E-5f, 2.6884E-5f, 2.9171999E-5f, 3.2032E-5f, 3.0887997E-5f, 2.4023999E-5f, 1.6016E-5f, 1.0868E-5f, 1.0868E-5f, 1.4871999E-5f, 1.8304E-5f, 1.5443999E-5f, 5.7199995E-6f, -5.1479997E-6f, -8.579999E-6f, -2.8599998E-6f, 6.8639997E-6f, 1.43E-5f, 1.6588E-5f, 1.5443999E-5f, 1.3155999E-5f, 1.0868E-5f, 6.292E-6f, 0.0f, -4.004E-6f, -2.288E-6f, 5.1479997E-6f, 1.4871999E-5f, 2.3452E-5f, 3.0887997E-5f, 3.8896E-5f, 4.4615997E-5f, 4.1755997E-5f, 3.3747998E-5f, 2.5739999E-5f, 2.2307999E-5f, 2.1736E-5f, 2.2307999E-5f, 2.0591999E-5f, 1.6588E-5f, 1.1439999E-5f, 5.1479997E-6f, 5.72E-7f, -1.7159999E-6f, 0.0f, 2.288E-6f, 5.1479997E-6f, 6.292E-6f, 3.4319999E-6f, 5.72E-7f, 1.144E-6f, 5.7199995E-6f, 1.43E-5f, 2.3452E-5f, 3.0887997E-5f, 3.5464E-5f, 3.6608E-5f, 3.3747998E-5f, 2.86E-5f, 2.4023999E-5f, 2.2879998E-5f, 2.2307999E-5f, 1.8875999E-5f, 1.2584E-5f, 5.7199995E-6f, 1.7159999E-6f, 1.7159999E-6f, 2.288E-6f, 0.0f, -5.1479997E-6f, -9.724E-6f, -1.1439999E-5f, -1.2011999E-5f, -1.43E-5f, -1.7732E-5f, -2.2307999E-5f, -2.86E-5f, -3.6036E-5f, -4.1183997E-5f, -4.29E-5f, -4.004E-5f, -3.146E-5f, -2.002E-5f, -1.4871999E-5f, -1.43E-5f, -1.6588E-5f, -2.0591999E-5f, -2.4023999E-5f, -2.0591999E-5f, -1.1439999E-5f, -3.4319999E-6f, 5.72E-7f, -2.288E-6f, -1.2011999E-5f, -2.2307999E-5f, -2.9171999E-5f, -3.4319997E-5f, -4.004E-5f, -4.6332E-5f, -5.0908E-5f, -5.2623996E-5f, -5.3196E-5f, -5.5483997E-5f, -5.7772E-5f, -5.9487997E-5f, -6.0632E-5f, -6.1203995E-5f, -6.2348E-5f, -6.4636E-5f, -6.5208E-5f, -6.1775994E-5f, -5.8343998E-5f, -5.72E-5f, -6.2348E-5f, -6.9211994E-5f, -7.2644E-5f, -7.0928E-5f, -6.3492E-5f, -5.3196E-5f, -4.2328E-5f
        )));
        eegPacket = new MbtEEGPacket(channelsData);
        if(useQualities)
            eegPacket.setQualities(new ArrayList<>(Arrays.asList(ArrayUtils.toObject(MBTSignalQualityChecker.computeQualitiesForPacketNew(250,250,channelsData)))));
        eegPacketsList.add(eegPacket);
        channelsData = new ArrayList<>();

        channelsData.add(new ArrayList<>(Arrays.asList(-3.4892E-5f, -3.3747998E-5f, -3.5464E-5f, -3.8323997E-5f, -4.004E-5f, -4.29E-5f, -4.7475998E-5f, -5.434E-5f, -5.8915997E-5f, -5.7772E-5f, -4.9191996E-5f, -3.5464E-5f, -2.6311998E-5f, -2.5168E-5f, -2.86E-5f, -3.146E-5f, -3.0316E-5f, -2.5739999E-5f, -2.0591999E-5f, -1.6588E-5f, -1.4871999E-5f, -1.0295999E-5f, -5.1479997E-6f, -1.7159999E-6f, 2.288E-6f, 7.4359996E-6f, 1.1439999E-5f, 1.0868E-5f, 5.7199995E-6f, 2.8599998E-6f, 3.4319999E-6f, 4.576E-6f, 4.004E-6f, 1.144E-6f, 2.288E-6f, 9.152E-6f, 1.7159999E-5f, 2.2307999E-5f, 2.2307999E-5f, 2.002E-5f, 1.6016E-5f, 1.0868E-5f, 5.7199995E-6f, 2.288E-6f, 5.1479997E-6f, 1.43E-5f, 2.5739999E-5f, 3.0887997E-5f, 2.8027998E-5f, 2.1164E-5f, 1.4871999E-5f, 1.2584E-5f, 1.2584E-5f, 1.2584E-5f, 1.3155999E-5f, 1.4871999E-5f, 1.6588E-5f, 1.6016E-5f, 1.3155999E-5f, 1.2011999E-5f, 1.2011999E-5f, 1.2584E-5f, 1.3727999E-5f, 1.2584E-5f, 1.3727999E-5f, 1.7732E-5f, 2.2879998E-5f, 2.4595998E-5f, 2.002E-5f, 1.43E-5f, 1.2011999E-5f, 1.2584E-5f, 1.6016E-5f, 1.9448E-5f, 2.2307999E-5f, 2.0591999E-5f, 1.4871999E-5f, 8.008E-6f, 1.144E-6f, -3.4319999E-6f, -2.8599998E-6f, 2.288E-6f, 8.579999E-6f, 8.579999E-6f, 1.144E-6f, -9.724E-6f, -1.5443999E-5f, -1.5443999E-5f, -1.3155999E-5f, -1.2011999E-5f, -1.4871999E-5f, -2.1736E-5f, -2.9743998E-5f, -3.6608E-5f, -3.6608E-5f, -3.2604E-5f, -2.9171999E-5f, -3.2032E-5f, -3.8896E-5f, -3.8323997E-5f, -2.86E-5f, -1.8304E-5f, -1.6588E-5f, -2.5739999E-5f, -3.2604E-5f, -3.0316E-5f, -2.3452E-5f, -1.8875999E-5f, -1.7159999E-5f, -1.1439999E-5f, 0.0f, 1.2011999E-5f, 1.5443999E-5f, 8.008E-6f, -5.72E-7f, -3.4319999E-6f, -1.144E-6f, 2.288E-6f, 5.72E-7f, -5.1479997E-6f, -8.008E-6f, -4.576E-6f, 7.4359996E-6f, 2.002E-5f, 2.9743998E-5f, 3.2032E-5f, 2.4595998E-5f, 1.2584E-5f, 1.144E-6f, -2.288E-6f, 5.7199995E-6f, 1.8304E-5f, 2.5168E-5f, 2.1164E-5f, 1.2011999E-5f, 4.004E-6f, 1.7159999E-6f, 4.004E-6f, 5.1479997E-6f, 4.004E-6f, 2.288E-6f, 5.72E-7f, -1.144E-6f, -5.7199995E-6f, -1.0295999E-5f, -1.3727999E-5f, -1.2011999E-5f, -1.7159999E-6f, 9.724E-6f, 2.0591999E-5f, 3.0887997E-5f, 3.9468E-5f, 4.5759996E-5f, 4.8619997E-5f, 5.2051997E-5f, 5.2623996E-5f, 4.8619997E-5f, 4.2328E-5f, 3.7751997E-5f, 3.6608E-5f, 3.8896E-5f, 4.0611998E-5f, 4.0611998E-5f, 3.6608E-5f, 3.3176E-5f, 3.146E-5f, 2.9171999E-5f, 2.5168E-5f, 2.002E-5f, 1.7732E-5f, 1.8304E-5f, 1.7732E-5f, 1.6016E-5f, 1.2584E-5f, 1.2584E-5f, 1.6588E-5f, 2.1736E-5f, 2.3452E-5f, 1.7732E-5f, 1.3727999E-5f, 2.002E-5f, 3.0316E-5f, 3.6036E-5f, 3.2604E-5f, 2.2307999E-5f, 1.0295999E-5f, 2.8599998E-6f, 1.7159999E-6f, 1.144E-6f, 1.144E-6f, -5.72E-7f, -4.576E-6f, -1.0295999E-5f, -1.6016E-5f, -1.8304E-5f, -1.5443999E-5f, -1.0868E-5f, -6.292E-6f, -1.7159999E-6f, 3.4319999E-6f, 8.579999E-6f, 1.0868E-5f, 1.0295999E-5f, 6.8639997E-6f, 1.7159999E-6f, -3.4319999E-6f, -6.292E-6f, -3.4319999E-6f, -1.144E-6f, -1.7159999E-6f, -5.7199995E-6f, -9.152E-6f, -1.0295999E-5f, -1.0295999E-5f, -1.0295999E-5f, -1.1439999E-5f, -1.3727999E-5f, -1.5443999E-5f, -1.8304E-5f, -1.9448E-5f, -1.8875999E-5f, -1.8875999E-5f, -2.002E-5f, -2.5168E-5f, -3.2032E-5f, -3.3747998E-5f, -2.86E-5f, -1.8875999E-5f, -1.0295999E-5f, -2.8599998E-6f, 1.144E-6f, -4.004E-6f, -1.4871999E-5f, -2.5739999E-5f, -2.9743998E-5f, -2.4023999E-5f, -1.3155999E-5f, -2.288E-6f, 1.7159999E-6f, -2.288E-6f, -1.0295999E-5f, -1.7732E-5f, -2.1164E-5f, -2.1736E-5f, -2.002E-5f, -1.7159999E-5f, -1.6588E-5f, -1.4871999E-5f, -1.2011999E-5f, -9.152E-6f
        )));
        channelsData.add(new ArrayList<>(Arrays.asList(-3.6036E-5f, -3.5464E-5f, -3.6036E-5f, -3.7751997E-5f, -3.8323997E-5f, -4.0611998E-5f, -4.5187997E-5f, -5.0336E-5f, -5.6055997E-5f, -5.7772E-5f, -5.1479998E-5f, -3.8323997E-5f, -2.6311998E-5f, -2.0591999E-5f, -2.1164E-5f, -2.4595998E-5f, -2.5739999E-5f, -2.1736E-5f, -1.6016E-5f, -1.2011999E-5f, -7.4359996E-6f, 1.144E-6f, 1.1439999E-5f, 1.7159999E-5f, 1.8875999E-5f, 2.1164E-5f, 2.2879998E-5f, 2.1736E-5f, 1.6588E-5f, 1.0868E-5f, 9.152E-6f, 8.579999E-6f, 9.724E-6f, 9.724E-6f, 1.1439999E-5f, 1.6016E-5f, 2.1164E-5f, 2.4023999E-5f, 2.2307999E-5f, 1.8304E-5f, 1.2011999E-5f, 4.576E-6f, -1.7159999E-6f, -4.576E-6f, -1.144E-6f, 8.579999E-6f, 1.9448E-5f, 2.5168E-5f, 2.2879998E-5f, 1.6588E-5f, 1.1439999E-5f, 8.579999E-6f, 8.579999E-6f, 9.724E-6f, 1.2584E-5f, 1.5443999E-5f, 1.7732E-5f, 1.8304E-5f, 1.7159999E-5f, 1.5443999E-5f, 1.3155999E-5f, 1.1439999E-5f, 1.0868E-5f, 1.0868E-5f, 1.3727999E-5f, 1.8875999E-5f, 2.2879998E-5f, 2.1736E-5f, 1.6588E-5f, 1.2011999E-5f, 1.2011999E-5f, 1.6016E-5f, 2.2879998E-5f, 2.7455999E-5f, 2.6884E-5f, 2.1164E-5f, 1.4871999E-5f, 1.1439999E-5f, 9.724E-6f, 8.008E-6f, 7.4359996E-6f, 1.0295999E-5f, 1.6588E-5f, 1.8875999E-5f, 1.3155999E-5f, 3.4319999E-6f, -1.144E-6f, 2.288E-6f, 9.724E-6f, 1.5443999E-5f, 1.5443999E-5f, 9.724E-6f, 2.288E-6f, -4.004E-6f, -6.292E-6f, -4.576E-6f, -1.7159999E-6f, -1.144E-6f, -1.7159999E-6f, 3.4319999E-6f, 1.3155999E-5f, 2.1164E-5f, 1.9448E-5f, 8.008E-6f, 0.0f, 5.72E-7f, 5.7199995E-6f, 9.152E-6f, 1.1439999E-5f, 1.6016E-5f, 2.6311998E-5f, 3.5464E-5f, 3.6608E-5f, 2.8027998E-5f, 1.8304E-5f, 1.3727999E-5f, 1.43E-5f, 1.6588E-5f, 1.2584E-5f, 1.7159999E-6f, -9.152E-6f, -1.2584E-5f, -2.8599998E-6f, 1.2584E-5f, 2.6311998E-5f, 3.0887997E-5f, 2.2879998E-5f, 8.579999E-6f, -4.004E-6f, -8.579999E-6f, 0.0f, 1.3727999E-5f, 2.2307999E-5f, 1.8875999E-5f, 8.579999E-6f, 0.0f, -5.72E-7f, 5.1479997E-6f, 9.152E-6f, 8.008E-6f, 4.004E-6f, -1.144E-6f, -4.576E-6f, -8.579999E-6f, -1.3727999E-5f, -1.8875999E-5f, -1.7732E-5f, -6.8639997E-6f, 6.292E-6f, 1.5443999E-5f, 2.1736E-5f, 2.6311998E-5f, 3.0887997E-5f, 3.6608E-5f, 4.2328E-5f, 4.5187997E-5f, 4.1183997E-5f, 3.4892E-5f, 3.0316E-5f, 2.9743998E-5f, 3.0887997E-5f, 3.2032E-5f, 3.0316E-5f, 2.5168E-5f, 2.0591999E-5f, 1.8304E-5f, 1.8304E-5f, 1.7159999E-5f, 1.43E-5f, 1.1439999E-5f, 7.4359996E-6f, 2.288E-6f, -5.72E-7f, -1.144E-6f, 2.8599998E-6f, 1.0295999E-5f, 1.7159999E-5f, 2.0591999E-5f, 1.6588E-5f, 1.0868E-5f, 1.3727999E-5f, 2.002E-5f, 2.3452E-5f, 2.1164E-5f, 1.0868E-5f, -1.144E-6f, -8.008E-6f, -8.008E-6f, -5.7199995E-6f, -5.7199995E-6f, -8.579999E-6f, -1.4871999E-5f, -2.2307999E-5f, -2.9171999E-5f, -3.146E-5f, -2.86E-5f, -2.2307999E-5f, -1.6016E-5f, -1.0868E-5f, -8.008E-6f, -5.7199995E-6f, -4.004E-6f, -2.288E-6f, -5.72E-7f, -2.288E-6f, -6.292E-6f, -1.0868E-5f, -1.2011999E-5f, -9.724E-6f, -8.579999E-6f, -9.152E-6f, -9.724E-6f, -9.152E-6f, -9.724E-6f, -1.3155999E-5f, -1.7732E-5f, -2.1736E-5f, -2.2879998E-5f, -2.5168E-5f, -2.6311998E-5f, -2.6884E-5f, -2.7455999E-5f, -2.6884E-5f, -2.8027998E-5f, -3.2604E-5f, -3.4319997E-5f, -3.0316E-5f, -2.0591999E-5f, -1.0295999E-5f, -1.7159999E-6f, 2.8599998E-6f, -2.8599998E-6f, -1.5443999E-5f, -2.6311998E-5f, -3.0887997E-5f, -2.7455999E-5f, -1.8875999E-5f, -9.152E-6f, -5.1479997E-6f, -1.0295999E-5f, -2.0591999E-5f, -2.9743998E-5f, -3.2604E-5f, -3.0887997E-5f, -2.8027998E-5f, -2.7455999E-5f, -3.0316E-5f, -3.2032E-5f, -2.9171999E-5f, -2.4023999E-5f
        )));
        eegPacket = new MbtEEGPacket(channelsData);
        if(useQualities)
            eegPacket.setQualities(new ArrayList<>(Arrays.asList(ArrayUtils.toObject(MBTSignalQualityChecker.computeQualitiesForPacketNew(250,250,channelsData)))));
        eegPacketsList.add(eegPacket);
        channelsData = new ArrayList<>();

        channelsData.add(new ArrayList<>(Arrays.asList(-5.7199995E-6f, -3.4319999E-6f, -2.288E-6f, -2.8599998E-6f, -4.004E-6f, -5.1479997E-6f, -4.576E-6f, -2.288E-6f, -3.4319999E-6f, -8.008E-6f, -1.1439999E-5f, -1.2584E-5f, -8.579999E-6f, -2.288E-6f, 5.1479997E-6f, 1.2584E-5f, 1.6588E-5f, 1.6016E-5f, 1.0868E-5f, 5.7199995E-6f, 4.576E-6f, 5.1479997E-6f, 7.4359996E-6f, 9.724E-6f, 8.579999E-6f, 1.0295999E-5f, 1.8304E-5f, 3.2032E-5f, 4.1755997E-5f, 3.8896E-5f, 2.8027998E-5f, 1.4871999E-5f, 6.8639997E-6f, 3.4319999E-6f, 5.72E-7f, -1.144E-6f, -5.72E-7f, 2.8599998E-6f, 9.724E-6f, 1.5443999E-5f, 1.9448E-5f, 1.8304E-5f, 1.2584E-5f, 3.4319999E-6f, -4.576E-6f, -6.292E-6f, -3.4319999E-6f, -1.7159999E-6f, -4.576E-6f, -1.0868E-5f, -1.7159999E-5f, -2.1164E-5f, -2.4023999E-5f, -2.86E-5f, -3.2032E-5f, -3.0316E-5f, -2.1736E-5f, -1.0868E-5f, -4.004E-6f, -4.004E-6f, -5.1479997E-6f, -4.004E-6f, 1.144E-6f, 5.1479997E-6f, 3.4319999E-6f, -5.72E-7f, -2.8599998E-6f, -1.144E-6f, 1.144E-6f, 1.7159999E-6f, 1.144E-6f, -5.72E-7f, -1.144E-6f, -5.72E-7f, -5.72E-7f, -2.288E-6f, -5.7199995E-6f, -6.8639997E-6f, -6.8639997E-6f, -6.8639997E-6f, -5.1479997E-6f, -5.72E-7f, 5.1479997E-6f, 7.4359996E-6f, 5.1479997E-6f, 1.7159999E-6f, -1.7159999E-6f, -4.576E-6f, -6.8639997E-6f, -1.2011999E-5f, -1.7159999E-5f, -2.0591999E-5f, -2.0591999E-5f, -2.1164E-5f, -2.3452E-5f, -2.2879998E-5f, -1.8304E-5f, -1.2584E-5f, -8.579999E-6f, -9.724E-6f, -1.0295999E-5f, -5.1479997E-6f, 2.288E-6f, 8.008E-6f, 8.008E-6f, 5.1479997E-6f, 1.144E-6f, -2.288E-6f, -2.288E-6f, -2.288E-6f, -2.288E-6f, -2.8599998E-6f, -5.1479997E-6f, -9.724E-6f, -1.6016E-5f, -1.9448E-5f, -2.002E-5f, -2.002E-5f, -1.7732E-5f, -1.2584E-5f, -5.72E-7f, 1.43E-5f, 2.5739999E-5f, 2.6311998E-5f, 1.5443999E-5f, 5.1479997E-6f, -5.72E-7f, -2.8599998E-6f, -5.1479997E-6f, -8.008E-6f, -9.724E-6f, -1.1439999E-5f, -1.5443999E-5f, -2.2307999E-5f, -2.9743998E-5f, -2.86E-5f, -1.6588E-5f, -3.4319999E-6f, 0.0f, -6.292E-6f, -1.2584E-5f, -9.152E-6f, 5.1479997E-6f, 2.002E-5f, 2.4595998E-5f, 1.7159999E-5f, 4.576E-6f, -6.292E-6f, -1.0868E-5f, -1.3155999E-5f, -1.3155999E-5f, -1.3155999E-5f, -1.3727999E-5f, -1.5443999E-5f, -1.8875999E-5f, -2.1736E-5f, -2.2307999E-5f, -2.2879998E-5f, -2.1736E-5f, -2.2307999E-5f, -2.2879998E-5f, -2.0591999E-5f, -1.5443999E-5f, -9.152E-6f, -6.8639997E-6f, -1.0295999E-5f, -1.7159999E-5f, -2.3452E-5f, -2.5739999E-5f, -2.4023999E-5f, -2.002E-5f, -1.7159999E-5f, -1.8304E-5f, -2.2307999E-5f, -2.5168E-5f, -2.002E-5f, -7.4359996E-6f, 5.7199995E-6f, 1.2584E-5f, 1.1439999E-5f, 6.292E-6f, 1.144E-6f, -1.144E-6f, -1.7159999E-6f, -2.288E-6f, 0.0f, 7.4359996E-6f, 1.43E-5f, 1.7159999E-5f, 1.3727999E-5f, 6.8639997E-6f, 0.0f, 0.0f, 8.008E-6f, 1.7159999E-5f, 2.2879998E-5f, 2.4023999E-5f, 2.002E-5f, 1.43E-5f, 6.292E-6f, 5.72E-7f, 2.288E-6f, 7.4359996E-6f, 1.2584E-5f, 1.4871999E-5f, 1.8304E-5f, 2.2307999E-5f, 2.5168E-5f, 2.5168E-5f, 2.0591999E-5f, 1.6588E-5f, 1.4871999E-5f, 1.6016E-5f, 2.002E-5f, 2.1164E-5f, 1.8875999E-5f, 1.7159999E-5f, 1.8304E-5f, 2.002E-5f, 2.0591999E-5f, 1.8875999E-5f, 1.5443999E-5f, 1.0295999E-5f, 5.1479997E-6f, 1.7159999E-6f, 5.72E-7f, 1.7159999E-6f, 5.1479997E-6f, 1.0295999E-5f, 1.4871999E-5f, 1.8875999E-5f, 2.1164E-5f, 1.8875999E-5f, 1.2584E-5f, 4.004E-6f, -5.72E-7f, 1.144E-6f, 3.4319999E-6f, 4.576E-6f, 8.579999E-6f, 1.7732E-5f, 2.9743998E-5f, 3.7751997E-5f, 3.5464E-5f, 2.2879998E-5f, 1.0868E-5f, 6.8639997E-6f, 8.579999E-6f, 1.1439999E-5f, 1.0295999E-5f
        )));
        channelsData.add(new ArrayList<>(Arrays.asList(-1.7732E-5f, -1.3155999E-5f, -1.1439999E-5f, -1.2011999E-5f, -1.4871999E-5f, -1.7732E-5f, -1.8304E-5f, -1.6588E-5f, -1.6588E-5f, -2.0591999E-5f, -2.5168E-5f, -2.6884E-5f, -2.2307999E-5f, -1.3155999E-5f, -3.4319999E-6f, 4.576E-6f, 7.4359996E-6f, 5.7199995E-6f, 2.8599998E-6f, 1.144E-6f, 2.8599998E-6f, 6.292E-6f, 1.1439999E-5f, 1.6016E-5f, 1.7732E-5f, 2.002E-5f, 2.86E-5f, 4.1183997E-5f, 5.1479998E-5f, 5.0908E-5f, 4.0611998E-5f, 2.6311998E-5f, 1.4871999E-5f, 1.0295999E-5f, 6.292E-6f, 4.004E-6f, 4.004E-6f, 6.8639997E-6f, 1.2011999E-5f, 1.7159999E-5f, 2.0591999E-5f, 1.8875999E-5f, 1.2011999E-5f, 3.4319999E-6f, -3.4319999E-6f, -3.4319999E-6f, 5.72E-7f, 3.4319999E-6f, 3.4319999E-6f, 1.144E-6f, 0.0f, -5.72E-7f, -3.4319999E-6f, -8.008E-6f, -1.0295999E-5f, -7.4359996E-6f, 1.7159999E-6f, 1.3155999E-5f, 2.2307999E-5f, 2.6884E-5f, 2.9171999E-5f, 3.0316E-5f, 3.0887997E-5f, 3.146E-5f, 2.86E-5f, 2.2307999E-5f, 1.9448E-5f, 2.1736E-5f, 2.6311998E-5f, 2.9743998E-5f, 2.9171999E-5f, 2.4595998E-5f, 2.0591999E-5f, 2.0591999E-5f, 2.1736E-5f, 2.2307999E-5f, 1.9448E-5f, 1.6588E-5f, 1.6588E-5f, 1.8304E-5f, 2.2879998E-5f, 3.146E-5f, 4.0611998E-5f, 4.5759996E-5f, 4.5187997E-5f, 4.004E-5f, 3.4892E-5f, 3.3176E-5f, 3.6036E-5f, 3.8323997E-5f, 3.6608E-5f, 3.2032E-5f, 2.7455999E-5f, 2.2879998E-5f, 1.8875999E-5f, 1.7732E-5f, 1.9448E-5f, 2.1164E-5f, 2.002E-5f, 1.43E-5f, 8.579999E-6f, 1.0868E-5f, 1.9448E-5f, 2.8027998E-5f, 3.0887997E-5f, 2.7455999E-5f, 1.9448E-5f, 1.2584E-5f, 9.152E-6f, 8.008E-6f, 5.7199995E-6f, 2.8599998E-6f, -5.72E-7f, -6.292E-6f, -1.2011999E-5f, -1.6016E-5f, -1.9448E-5f, -2.2307999E-5f, -2.2307999E-5f, -1.6016E-5f, -2.8599998E-6f, 1.2584E-5f, 2.3452E-5f, 2.4595998E-5f, 1.5443999E-5f, 4.576E-6f, -1.144E-6f, -5.1479997E-6f, -8.008E-6f, -1.2011999E-5f, -1.5443999E-5f, -1.7732E-5f, -2.1164E-5f, -2.5739999E-5f, -3.0887997E-5f, -3.0316E-5f, -2.1164E-5f, -1.1439999E-5f, -9.724E-6f, -1.7732E-5f, -2.5739999E-5f, -2.5168E-5f, -1.43E-5f, 0.0f, 4.004E-6f, -4.576E-6f, -2.002E-5f, -3.4319997E-5f, -4.2328E-5f, -4.5759996E-5f, -4.8619997E-5f, -5.1479998E-5f, -5.434E-5f, -5.6055997E-5f, -5.72E-5f, -5.9487997E-5f, -6.2348E-5f, -6.5208E-5f, -6.6352E-5f, -6.578E-5f, -6.4636E-5f, -6.1775994E-5f, -5.5483997E-5f, -4.9191996E-5f, -4.6904E-5f, -5.0908E-5f, -6.0059996E-5f, -6.9784E-5f, -7.4359996E-5f, -7.2072E-5f, -6.6923996E-5f, -6.3492E-5f, -6.292E-5f, -6.4064E-5f, -6.4064E-5f, -5.8915997E-5f, -4.7475998E-5f, -3.6608E-5f, -3.2032E-5f, -3.3747998E-5f, -4.004E-5f, -4.6332E-5f, -4.8619997E-5f, -4.5759996E-5f, -4.1755997E-5f, -3.4892E-5f, -2.5168E-5f, -1.6588E-5f, -1.2584E-5f, -1.3727999E-5f, -1.7732E-5f, -2.2307999E-5f, -2.1164E-5f, -1.0868E-5f, 2.288E-6f, 1.0295999E-5f, 1.2011999E-5f, 8.008E-6f, 2.8599998E-6f, -2.288E-6f, -5.7199995E-6f, -5.1479997E-6f, -5.72E-7f, 4.576E-6f, 9.724E-6f, 1.6588E-5f, 2.2879998E-5f, 2.86E-5f, 3.146E-5f, 2.9743998E-5f, 2.6884E-5f, 2.5168E-5f, 2.6884E-5f, 3.3176E-5f, 3.6608E-5f, 3.3747998E-5f, 3.0316E-5f, 2.9743998E-5f, 3.2604E-5f, 3.5464E-5f, 3.6036E-5f, 3.3747998E-5f, 2.9743998E-5f, 2.6884E-5f, 2.5739999E-5f, 2.5168E-5f, 2.5168E-5f, 2.8027998E-5f, 3.4892E-5f, 4.0611998E-5f, 4.3472E-5f, 4.2328E-5f, 3.7751997E-5f, 3.0316E-5f, 2.1164E-5f, 1.3727999E-5f, 1.1439999E-5f, 9.724E-6f, 9.724E-6f, 1.4871999E-5f, 2.5168E-5f, 3.6036E-5f, 4.1183997E-5f, 3.6608E-5f, 2.4023999E-5f, 1.1439999E-5f, 6.292E-6f, 5.7199995E-6f, 5.7199995E-6f, 1.144E-6f
        )));
        eegPacket = new MbtEEGPacket(channelsData);
        if(useQualities)
            eegPacket.setQualities(new ArrayList<>(Arrays.asList(ArrayUtils.toObject(MBTSignalQualityChecker.computeQualitiesForPacketNew(250,250,channelsData)))));
        eegPacketsList.add(eegPacket);
        channelsData = new ArrayList<>();

        channelsData.add(new ArrayList<>(Arrays.asList(4.004E-6f, -2.8599998E-6f, -7.4359996E-6f, -7.4359996E-6f, -4.004E-6f, 5.72E-7f, 7.4359996E-6f, 1.3727999E-5f, 1.5443999E-5f, 1.0868E-5f, 2.288E-6f, -2.8599998E-6f, -2.8599998E-6f, -1.7159999E-6f, -5.1479997E-6f, -1.2584E-5f, -1.7159999E-5f, -1.2011999E-5f, 4.576E-6f, 2.0591999E-5f, 2.5168E-5f, 2.0591999E-5f, 1.2011999E-5f, 4.576E-6f, -1.7159999E-6f, -3.4319999E-6f, -5.72E-7f, 0.0f, -1.7159999E-6f, -1.7159999E-6f, 5.7199995E-6f, 1.7732E-5f, 2.5168E-5f, 2.5739999E-5f, 1.7159999E-5f, 6.292E-6f, 1.7159999E-6f, 2.288E-6f, 2.8599998E-6f, -1.7159999E-6f, -9.724E-6f, -1.4871999E-5f, -1.3727999E-5f, -6.8639997E-6f, 0.0f, 2.8599998E-6f, 5.1479997E-6f, 3.4319999E-6f, 5.72E-7f, -2.288E-6f, -7.4359996E-6f, -9.724E-6f, -5.7199995E-6f, 1.7159999E-6f, 4.004E-6f, -3.4319999E-6f, -1.0868E-5f, -1.3727999E-5f, -1.2584E-5f, -1.2584E-5f, -1.6016E-5f, -1.9448E-5f, -2.2879998E-5f, -2.2879998E-5f, -2.0591999E-5f, -1.7732E-5f, -1.4871999E-5f, -1.2584E-5f, -1.2011999E-5f, -1.1439999E-5f, -9.724E-6f, -3.4319999E-6f, 4.576E-6f, 9.152E-6f, 9.152E-6f, 6.292E-6f, 6.8639997E-6f, 1.2584E-5f, 1.7159999E-5f, 1.4871999E-5f, 5.1479997E-6f, -5.7199995E-6f, -1.3155999E-5f, -1.4871999E-5f, -1.3727999E-5f, -1.3727999E-5f, -1.1439999E-5f, -8.008E-6f, -6.8639997E-6f, -8.579999E-6f, -1.3155999E-5f, -1.43E-5f, -1.43E-5f, -1.3727999E-5f, -1.2011999E-5f, -1.1439999E-5f, -8.579999E-6f, -5.7199995E-6f, -6.8639997E-6f, -9.152E-6f, -9.152E-6f, -4.004E-6f, 3.4319999E-6f, 1.0868E-5f, 1.43E-5f, 1.0868E-5f, 5.1479997E-6f, 1.7159999E-6f, 1.144E-6f, 2.8599998E-6f, 2.8599998E-6f, 2.8599998E-6f, 1.144E-6f, -2.288E-6f, -9.152E-6f, -1.7732E-5f, -2.0591999E-5f, -1.7732E-5f, -1.0295999E-5f, -1.7159999E-6f, 1.7159999E-6f, 1.144E-6f, 1.144E-6f, 3.4319999E-6f, 5.1479997E-6f, 8.579999E-6f, 1.8304E-5f, 2.86E-5f, 3.2604E-5f, 2.8027998E-5f, 1.5443999E-5f, 4.576E-6f, 5.72E-7f, 1.144E-6f, 1.144E-6f, -2.8599998E-6f, -6.292E-6f, -6.8639997E-6f, -6.292E-6f, -8.008E-6f, -1.4871999E-5f, -2.1164E-5f, -1.8304E-5f, -5.1479997E-6f, 8.579999E-6f, 1.2011999E-5f, 2.8599998E-6f, -1.0295999E-5f, -1.43E-5f, -2.288E-6f, 1.5443999E-5f, 2.8027998E-5f, 2.6884E-5f, 1.3155999E-5f, -5.1479997E-6f, -1.9448E-5f, -2.4595998E-5f, -2.1736E-5f, -1.7732E-5f, -1.7732E-5f, -2.2879998E-5f, -2.5739999E-5f, -2.2879998E-5f, -1.6016E-5f, -8.579999E-6f, -4.576E-6f, 0.0f, 4.576E-6f, 6.8639997E-6f, 5.1479997E-6f, -1.144E-6f, -4.004E-6f, -1.7159999E-6f, 4.004E-6f, 1.1439999E-5f, 1.4871999E-5f, 1.8304E-5f, 2.1164E-5f, 2.3452E-5f, 2.2879998E-5f, 1.8875999E-5f, 1.6016E-5f, 1.3155999E-5f, 1.0295999E-5f, 6.8639997E-6f, 1.7159999E-6f, -2.288E-6f, -2.288E-6f, -5.72E-7f, -2.288E-6f, -9.724E-6f, -1.3727999E-5f, -9.152E-6f, 0.0f, 9.724E-6f, 1.6016E-5f, 1.7159999E-5f, 1.3727999E-5f, 7.4359996E-6f, 0.0f, -8.579999E-6f, -1.3155999E-5f, -1.3155999E-5f, -1.2011999E-5f, -9.724E-6f, -6.8639997E-6f, -1.7159999E-6f, 4.004E-6f, 6.292E-6f, 4.576E-6f, -2.288E-6f, -8.008E-6f, -1.0868E-5f, -1.1439999E-5f, -1.0295999E-5f, -1.0295999E-5f, -8.008E-6f, -5.7199995E-6f, -1.144E-6f, 4.004E-6f, 5.1479997E-6f, 1.7159999E-6f, -2.8599998E-6f, -6.292E-6f, -9.152E-6f, -1.3155999E-5f, -1.43E-5f, -1.2584E-5f, -1.1439999E-5f, -1.4871999E-5f, -2.4023999E-5f, -3.0887997E-5f, -2.7455999E-5f, -1.2584E-5f, 5.7199995E-6f, 1.5443999E-5f, 1.8304E-5f, 2.1164E-5f, 2.2879998E-5f, 2.2307999E-5f, 1.7732E-5f, 1.2011999E-5f, 7.4359996E-6f, 3.4319999E-6f, 0.0f, -5.1479997E-6f, -8.579999E-6f, -8.579999E-6f, -8.008E-6f, -9.152E-6f
        )));
        channelsData.add(new ArrayList<>(Arrays.asList(-7.4359996E-6f, -1.6588E-5f, -2.2307999E-5f, -2.2307999E-5f, -1.6588E-5f, -1.0295999E-5f, -4.576E-6f, -5.72E-7f, 1.144E-6f, -5.72E-7f, -6.292E-6f, -1.2584E-5f, -1.6588E-5f, -1.9448E-5f, -2.4023999E-5f, -2.9743998E-5f, -3.2604E-5f, -2.5168E-5f, -6.8639997E-6f, 1.1439999E-5f, 1.8304E-5f, 1.3155999E-5f, 3.4319999E-6f, -5.7199995E-6f, -1.0868E-5f, -1.0868E-5f, -7.4359996E-6f, -6.292E-6f, -7.4359996E-6f, -2.8599998E-6f, 9.724E-6f, 2.5739999E-5f, 3.5464E-5f, 3.4319997E-5f, 2.4023999E-5f, 1.0868E-5f, 5.1479997E-6f, 6.8639997E-6f, 1.1439999E-5f, 1.3155999E-5f, 8.579999E-6f, 2.8599998E-6f, 2.8599998E-6f, 9.152E-6f, 1.8304E-5f, 2.4023999E-5f, 2.6884E-5f, 2.4023999E-5f, 1.8875999E-5f, 1.3155999E-5f, 6.292E-6f, 2.8599998E-6f, 7.4359996E-6f, 1.8304E-5f, 2.4023999E-5f, 1.9448E-5f, 9.724E-6f, 2.8599998E-6f, 1.144E-6f, 1.7159999E-6f, 1.7159999E-6f, 5.72E-7f, -5.72E-7f, 5.72E-7f, 4.576E-6f, 8.579999E-6f, 1.2011999E-5f, 1.43E-5f, 1.4871999E-5f, 1.6588E-5f, 1.8304E-5f, 2.2307999E-5f, 2.7455999E-5f, 3.0887997E-5f, 3.0887997E-5f, 2.9171999E-5f, 2.9743998E-5f, 3.2604E-5f, 3.4319997E-5f, 3.0316E-5f, 2.1164E-5f, 9.724E-6f, 2.288E-6f, 0.0f, -5.72E-7f, -2.288E-6f, -3.4319999E-6f, -3.4319999E-6f, -3.4319999E-6f, -5.1479997E-6f, -7.4359996E-6f, -8.008E-6f, -8.579999E-6f, -1.0295999E-5f, -1.0868E-5f, -1.0295999E-5f, -8.008E-6f, -4.576E-6f, -4.576E-6f, -6.8639997E-6f, -8.008E-6f, -6.292E-6f, -1.7159999E-6f, 5.1479997E-6f, 9.152E-6f, 6.8639997E-6f, 5.72E-7f, -5.1479997E-6f, -7.4359996E-6f, -6.292E-6f, -4.004E-6f, -4.004E-6f, -5.7199995E-6f, -9.152E-6f, -1.6016E-5f, -2.2879998E-5f, -2.5739999E-5f, -2.2879998E-5f, -1.5443999E-5f, -6.292E-6f, -2.288E-6f, -4.004E-6f, -5.7199995E-6f, -3.4319999E-6f, 5.72E-7f, 6.8639997E-6f, 1.7159999E-5f, 2.5168E-5f, 2.5739999E-5f, 1.9448E-5f, 6.8639997E-6f, -4.004E-6f, -7.4359996E-6f, -5.7199995E-6f, -4.004E-6f, -6.292E-6f, -9.724E-6f, -1.0295999E-5f, -8.008E-6f, -6.8639997E-6f, -1.0295999E-5f, -1.4871999E-5f, -1.3155999E-5f, -1.7159999E-6f, 1.0868E-5f, 1.43E-5f, 4.004E-6f, -1.2011999E-5f, -1.8875999E-5f, -7.4359996E-6f, 1.2584E-5f, 2.5739999E-5f, 2.4023999E-5f, 9.152E-6f, -9.152E-6f, -2.2879998E-5f, -2.8027998E-5f, -2.6884E-5f, -2.4023999E-5f, -2.4595998E-5f, -2.9171999E-5f, -3.2604E-5f, -3.0316E-5f, -2.3452E-5f, -1.5443999E-5f, -1.0295999E-5f, -8.579999E-6f, -8.008E-6f, -7.4359996E-6f, -8.008E-6f, -1.0295999E-5f, -1.1439999E-5f, -9.152E-6f, -3.4319999E-6f, 3.4319999E-6f, 9.152E-6f, 1.3727999E-5f, 1.6016E-5f, 1.5443999E-5f, 1.3727999E-5f, 1.0295999E-5f, 6.292E-6f, 1.7159999E-6f, -2.8599998E-6f, -6.292E-6f, -1.0868E-5f, -1.43E-5f, -1.5443999E-5f, -1.6016E-5f, -1.8304E-5f, -2.4595998E-5f, -2.6884E-5f, -1.9448E-5f, -7.4359996E-6f, 5.7199995E-6f, 1.6016E-5f, 1.8875999E-5f, 1.5443999E-5f, 8.579999E-6f, 1.144E-6f, -6.8639997E-6f, -1.3155999E-5f, -1.4871999E-5f, -1.4871999E-5f, -1.0868E-5f, -4.576E-6f, 4.004E-6f, 9.724E-6f, 1.0868E-5f, 8.008E-6f, 2.8599998E-6f, -1.7159999E-6f, -2.8599998E-6f, -1.144E-6f, 1.144E-6f, 1.7159999E-6f, 1.144E-6f, -5.72E-7f, 0.0f, 3.4319999E-6f, 6.8639997E-6f, 6.292E-6f, 3.4319999E-6f, -5.72E-7f, -6.292E-6f, -1.2584E-5f, -1.5443999E-5f, -1.43E-5f, -1.1439999E-5f, -1.0868E-5f, -1.5443999E-5f, -2.1164E-5f, -1.7732E-5f, -3.4319999E-6f, 1.43E-5f, 2.5739999E-5f, 2.86E-5f, 3.0316E-5f, 3.0887997E-5f, 2.9743998E-5f, 2.6884E-5f, 2.2879998E-5f, 1.8304E-5f, 1.43E-5f, 1.1439999E-5f, 8.008E-6f, 5.7199995E-6f, 5.7199995E-6f, 6.292E-6f, 5.1479997E-6f
        )));
        eegPacket = new MbtEEGPacket(channelsData);
        if(useQualities)
            eegPacket.setQualities(new ArrayList<>(Arrays.asList(ArrayUtils.toObject(MBTSignalQualityChecker.computeQualitiesForPacketNew(250,250,channelsData)))));
        eegPacketsList.add(eegPacket);
        channelsData = new ArrayList<>();

        channelsData.add(new ArrayList<>(Arrays.asList(-1.43E-5f, -1.6588E-5f, -1.2584E-5f, -6.8639997E-6f, -6.292E-6f, -1.43E-5f, -2.2879998E-5f, -2.1164E-5f, -8.579999E-6f, 9.152E-6f, 1.8875999E-5f, 1.6016E-5f, 4.004E-6f, -6.8639997E-6f, -7.4359996E-6f, -2.8599998E-6f, 5.72E-7f, 1.7159999E-6f, -5.72E-7f, -3.4319999E-6f, -6.292E-6f, -5.7199995E-6f, -2.288E-6f, -1.144E-6f, -2.288E-6f, -4.576E-6f, -5.1479997E-6f, -4.004E-6f, -2.8599998E-6f, -2.288E-6f, -2.288E-6f, -5.72E-7f, 5.1479997E-6f, 9.724E-6f, 1.0295999E-5f, 6.292E-6f, 2.288E-6f, 1.144E-6f, 5.72E-7f, -2.288E-6f, -7.4359996E-6f, -1.2011999E-5f, -1.1439999E-5f, -8.008E-6f, -4.004E-6f, -3.4319999E-6f, -4.004E-6f, -2.288E-6f, 1.7159999E-6f, 5.1479997E-6f, 4.004E-6f, 1.7159999E-6f, 2.288E-6f, 5.7199995E-6f, 1.0868E-5f, 1.0868E-5f, 6.292E-6f, 1.144E-6f, -4.004E-6f, -6.292E-6f, -5.7199995E-6f, -4.004E-6f, -1.144E-6f, 1.144E-6f, 3.4319999E-6f, 1.7159999E-6f, -5.72E-7f, 3.4319999E-6f, 9.724E-6f, 1.5443999E-5f, 1.8304E-5f, 1.7732E-5f, 1.4871999E-5f, 9.152E-6f, 1.7159999E-6f, -8.008E-6f, -1.43E-5f, -1.3155999E-5f, -9.152E-6f, -6.8639997E-6f, -8.579999E-6f, -1.1439999E-5f, -1.0295999E-5f, -6.292E-6f, -5.72E-7f, 4.576E-6f, 5.7199995E-6f, 6.8639997E-6f, 6.8639997E-6f, 6.8639997E-6f, 5.7199995E-6f, 5.1479997E-6f, 5.7199995E-6f, 4.004E-6f, 0.0f, -3.4319999E-6f, -4.576E-6f, -2.288E-6f, 5.72E-7f, 3.4319999E-6f, 2.8599998E-6f, -5.72E-7f, -2.288E-6f, -1.144E-6f, 1.144E-6f, 5.72E-7f, -1.144E-6f, -5.72E-7f, 2.288E-6f, 6.8639997E-6f, 9.152E-6f, 7.4359996E-6f, 6.292E-6f, 8.579999E-6f, 1.43E-5f, 1.7732E-5f, 1.7732E-5f, 1.7732E-5f, 1.6016E-5f, 1.2584E-5f, 8.579999E-6f, 4.576E-6f, 4.576E-6f, 5.7199995E-6f, 5.7199995E-6f, 4.004E-6f, 5.72E-7f, -5.72E-7f, 1.7159999E-6f, 4.004E-6f, 2.8599998E-6f, 1.144E-6f, 2.288E-6f, 5.7199995E-6f, 8.579999E-6f, 6.8639997E-6f, -1.144E-6f, -8.579999E-6f, -1.1439999E-5f, -8.579999E-6f, -4.004E-6f, -2.8599998E-6f, -4.576E-6f, -8.008E-6f, -8.008E-6f, -1.7159999E-6f, 5.1479997E-6f, 9.724E-6f, 9.724E-6f, 6.8639997E-6f, 2.288E-6f, -1.144E-6f, 0.0f, 4.576E-6f, 8.579999E-6f, 8.579999E-6f, 5.1479997E-6f, 3.4319999E-6f, 2.8599998E-6f, 1.144E-6f, -2.8599998E-6f, -8.008E-6f, -6.8639997E-6f, 5.72E-7f, 8.008E-6f, 8.008E-6f, -1.7159999E-6f, -1.43E-5f, -2.0591999E-5f, -1.6016E-5f, -4.576E-6f, 5.1479997E-6f, 1.1439999E-5f, 1.3155999E-5f, 9.724E-6f, 2.8599998E-6f, -5.7199995E-6f, -9.152E-6f, -5.1479997E-6f, 1.7159999E-6f, 6.292E-6f, 2.8599998E-6f, -1.7159999E-6f, -4.576E-6f, -2.8599998E-6f, 1.144E-6f, 4.004E-6f, 6.292E-6f, 7.4359996E-6f, 7.4359996E-6f, 5.7199995E-6f, 2.8599998E-6f, 5.72E-7f, 1.144E-6f, 2.8599998E-6f, 3.4319999E-6f, 1.7159999E-6f, 2.8599998E-6f, 5.1479997E-6f, 6.8639997E-6f, 5.7199995E-6f, -1.144E-6f, -1.0295999E-5f, -1.6588E-5f, -1.7159999E-5f, -1.3155999E-5f, -1.1439999E-5f, -1.0868E-5f, -6.8639997E-6f, -1.144E-6f, 3.4319999E-6f, 2.288E-6f, -1.7159999E-6f, -6.292E-6f, -7.4359996E-6f, -4.576E-6f, -4.004E-6f, -5.1479997E-6f, -5.1479997E-6f, -2.288E-6f, 1.7159999E-6f, 2.8599998E-6f, 3.4319999E-6f, 2.288E-6f, -5.72E-7f, -2.8599998E-6f, -5.1479997E-6f, -6.292E-6f, -6.292E-6f, -5.7199995E-6f, -2.8599998E-6f, -5.72E-7f, 2.288E-6f, 4.576E-6f, 5.7199995E-6f, 5.1479997E-6f, 5.72E-7f, -2.8599998E-6f, -4.004E-6f, -1.7159999E-6f, 3.4319999E-6f, 5.7199995E-6f, 4.576E-6f, 2.288E-6f, 0.0f, -5.72E-7f, 2.288E-6f, 7.4359996E-6f, 1.1439999E-5f, 9.724E-6f
        )));
        channelsData.add(new ArrayList<>(Arrays.asList(1.7159999E-6f, -1.144E-6f, -5.72E-7f, 1.144E-6f, 0.0f, -8.008E-6f, -1.7159999E-5f, -1.7159999E-5f, -6.292E-6f, 1.0868E-5f, 2.3452E-5f, 2.3452E-5f, 1.2584E-5f, 5.72E-7f, -1.7159999E-6f, 2.288E-6f, 5.7199995E-6f, 4.576E-6f, -5.72E-7f, -5.7199995E-6f, -7.4359996E-6f, -5.7199995E-6f, -1.7159999E-6f, -1.144E-6f, -4.004E-6f, -8.008E-6f, -1.0868E-5f, -1.0868E-5f, -1.1439999E-5f, -1.2011999E-5f, -1.3727999E-5f, -1.3155999E-5f, -9.152E-6f, -4.004E-6f, -1.144E-6f, -2.288E-6f, -6.8639997E-6f, -1.0868E-5f, -1.4871999E-5f, -1.8304E-5f, -2.1164E-5f, -2.2307999E-5f, -2.0591999E-5f, -1.7732E-5f, -1.43E-5f, -1.2011999E-5f, -1.1439999E-5f, -8.579999E-6f, -3.4319999E-6f, 1.144E-6f, 2.8599998E-6f, 1.144E-6f, 1.7159999E-6f, 6.292E-6f, 1.2011999E-5f, 1.5443999E-5f, 1.2584E-5f, 5.7199995E-6f, -4.004E-6f, -1.2011999E-5f, -1.5443999E-5f, -1.5443999E-5f, -1.2584E-5f, -8.008E-6f, -4.576E-6f, -5.7199995E-6f, -8.579999E-6f, -6.8639997E-6f, -1.7159999E-6f, 3.4319999E-6f, 7.4359996E-6f, 8.579999E-6f, 5.7199995E-6f, 1.144E-6f, -4.004E-6f, -8.579999E-6f, -9.724E-6f, -4.576E-6f, 5.72E-7f, 1.7159999E-6f, -1.144E-6f, -4.576E-6f, -5.1479997E-6f, -1.7159999E-6f, 5.1479997E-6f, 1.2011999E-5f, 1.3727999E-5f, 1.2584E-5f, 1.0868E-5f, 1.0868E-5f, 1.2011999E-5f, 1.3727999E-5f, 1.5443999E-5f, 1.5443999E-5f, 1.3727999E-5f, 1.2584E-5f, 1.3727999E-5f, 1.5443999E-5f, 1.7159999E-5f, 1.8304E-5f, 1.6588E-5f, 9.724E-6f, 3.4319999E-6f, 5.72E-7f, 1.144E-6f, 2.288E-6f, 3.4319999E-6f, 5.1479997E-6f, 8.008E-6f, 1.2584E-5f, 1.6016E-5f, 1.7159999E-5f, 1.6588E-5f, 1.8304E-5f, 2.3452E-5f, 2.8027998E-5f, 2.8027998E-5f, 2.5739999E-5f, 2.1164E-5f, 1.6588E-5f, 1.3727999E-5f, 1.2011999E-5f, 1.2584E-5f, 1.2011999E-5f, 8.579999E-6f, 5.7199995E-6f, 2.288E-6f, 1.7159999E-6f, 3.4319999E-6f, 4.576E-6f, 2.8599998E-6f, 0.0f, -1.7159999E-6f, -1.7159999E-6f, -1.144E-6f, -2.288E-6f, -6.292E-6f, -1.0868E-5f, -1.2584E-5f, -1.0868E-5f, -8.008E-6f, -8.579999E-6f, -1.1439999E-5f, -1.4871999E-5f, -1.5443999E-5f, -8.579999E-6f, -1.144E-6f, 2.288E-6f, 0.0f, -5.7199995E-6f, -1.0295999E-5f, -1.2584E-5f, -9.152E-6f, -1.7159999E-6f, 4.576E-6f, 5.7199995E-6f, 1.7159999E-6f, -2.288E-6f, -5.1479997E-6f, -6.292E-6f, -7.4359996E-6f, -8.008E-6f, -4.576E-6f, 1.7159999E-6f, 6.8639997E-6f, 5.7199995E-6f, -2.8599998E-6f, -1.43E-5f, -1.9448E-5f, -1.43E-5f, -4.004E-6f, 4.576E-6f, 8.008E-6f, 5.7199995E-6f, -5.72E-7f, -9.152E-6f, -1.8304E-5f, -2.3452E-5f, -2.0591999E-5f, -1.43E-5f, -8.579999E-6f, -8.008E-6f, -1.2011999E-5f, -1.6016E-5f, -1.7732E-5f, -1.5443999E-5f, -1.2011999E-5f, -9.152E-6f, -8.008E-6f, -8.008E-6f, -9.152E-6f, -1.2011999E-5f, -1.43E-5f, -1.3727999E-5f, -1.0295999E-5f, -6.292E-6f, -2.8599998E-6f, 5.72E-7f, 2.8599998E-6f, 3.4319999E-6f, 1.144E-6f, -4.004E-6f, -1.0868E-5f, -1.6016E-5f, -1.5443999E-5f, -9.724E-6f, -6.292E-6f, -4.576E-6f, 0.0f, 6.292E-6f, 1.2584E-5f, 1.5443999E-5f, 1.43E-5f, 1.1439999E-5f, 9.152E-6f, 1.0295999E-5f, 1.0868E-5f, 9.724E-6f, 9.724E-6f, 1.1439999E-5f, 1.3727999E-5f, 1.6016E-5f, 1.7732E-5f, 1.7159999E-5f, 1.3727999E-5f, 1.0295999E-5f, 6.292E-6f, 2.8599998E-6f, 0.0f, -1.144E-6f, 1.144E-6f, 5.1479997E-6f, 8.579999E-6f, 1.0295999E-5f, 1.0295999E-5f, 1.0868E-5f, 1.0295999E-5f, 8.579999E-6f, 6.292E-6f, 5.1479997E-6f, 6.8639997E-6f, 8.579999E-6f, 8.579999E-6f, 7.4359996E-6f, 6.292E-6f, 7.4359996E-6f, 1.0295999E-5f, 1.4871999E-5f, 1.7732E-5f, 1.5443999E-5f
        )));
        eegPacket = new MbtEEGPacket(channelsData);
        if(useQualities)
            eegPacket.setQualities(new ArrayList<>(Arrays.asList(ArrayUtils.toObject(MBTSignalQualityChecker.computeQualitiesForPacketNew(250,250,channelsData)))));
        eegPacketsList.add(eegPacket);
        channelsData = new ArrayList<>();

        channelsData.add(new ArrayList<>(Arrays.asList(4.576E-6f, -1.7159999E-6f, -4.004E-6f, -2.8599998E-6f, -1.144E-6f, -1.7159999E-6f, -6.8639997E-6f, -1.2584E-5f, -1.2011999E-5f, -8.008E-6f, -4.576E-6f, -4.004E-6f, -3.4319999E-6f, -1.7159999E-6f, -5.72E-7f, -2.288E-6f, -9.152E-6f, -1.8304E-5f, -2.1736E-5f, -1.8304E-5f, -1.1439999E-5f, -7.4359996E-6f, -4.004E-6f, -1.144E-6f, 1.7159999E-6f, 2.8599998E-6f, 0.0f, -5.7199995E-6f, -1.1439999E-5f, -1.4871999E-5f, -1.43E-5f, -1.1439999E-5f, -5.1479997E-6f, 1.144E-6f, 4.576E-6f, 2.288E-6f, -5.1479997E-6f, -9.724E-6f, -7.4359996E-6f, -5.72E-7f, 6.8639997E-6f, 1.0295999E-5f, 1.0868E-5f, 8.579999E-6f, 6.292E-6f, 7.4359996E-6f, 8.579999E-6f, 1.1439999E-5f, 1.7159999E-5f, 2.2307999E-5f, 2.4023999E-5f, 2.1164E-5f, 1.7732E-5f, 1.8304E-5f, 1.9448E-5f, 1.8304E-5f, 1.1439999E-5f, 3.4319999E-6f, -1.7159999E-6f, -2.288E-6f, 5.72E-7f, 2.8599998E-6f, 2.288E-6f, 2.288E-6f, 4.004E-6f, 6.8639997E-6f, 4.004E-6f, -2.288E-6f, -8.008E-6f, -1.2011999E-5f, -1.2011999E-5f, -1.3155999E-5f, -1.3155999E-5f, -1.0295999E-5f, -6.8639997E-6f, -6.292E-6f, -1.1439999E-5f, -1.9448E-5f, -2.2879998E-5f, -1.8304E-5f, -9.724E-6f, -5.7199995E-6f, -5.1479997E-6f, -4.004E-6f, -1.144E-6f, 1.7159999E-6f, 1.144E-6f, -1.144E-6f, -4.004E-6f, -7.4359996E-6f, -1.0868E-5f, -1.4871999E-5f, -1.9448E-5f, -2.1164E-5f, -1.9448E-5f, -1.5443999E-5f, -1.3155999E-5f, -1.0868E-5f, -4.004E-6f, 5.72E-7f, 2.288E-6f, 1.7159999E-6f, 5.72E-7f, 2.288E-6f, 3.4319999E-6f, 2.288E-6f, -1.7159999E-6f, -7.4359996E-6f, -7.4359996E-6f, -1.144E-6f, 5.7199995E-6f, 8.008E-6f, 5.7199995E-6f, 4.004E-6f, 3.4319999E-6f, 3.4319999E-6f, 5.72E-7f, -7.4359996E-6f, -1.3155999E-5f, -1.3155999E-5f, -6.8639997E-6f, -1.144E-6f, -5.72E-7f, -3.4319999E-6f, -5.7199995E-6f, -2.8599998E-6f, 3.4319999E-6f, 9.152E-6f, 1.3155999E-5f, 1.1439999E-5f, 5.7199995E-6f, -5.72E-7f, -4.004E-6f, 0.0f, 5.1479997E-6f, 9.152E-6f, 1.0295999E-5f, 9.152E-6f, 9.152E-6f, 1.0295999E-5f, 1.2584E-5f, 1.2584E-5f, 1.0295999E-5f, 9.152E-6f, 7.4359996E-6f, 4.576E-6f, 2.288E-6f, 1.7159999E-6f, 2.288E-6f, 1.144E-6f, -2.288E-6f, -1.0295999E-5f, -1.8875999E-5f, -2.1164E-5f, -1.5443999E-5f, -6.8639997E-6f, -1.7159999E-6f, -2.8599998E-6f, -5.7199995E-6f, -9.152E-6f, -1.1439999E-5f, -1.3727999E-5f, -1.6588E-5f, -1.7732E-5f, -1.7732E-5f, -1.8304E-5f, -1.7732E-5f, -1.3727999E-5f, -6.292E-6f, -5.72E-7f, 0.0f, -5.1479997E-6f, -1.3155999E-5f, -1.6016E-5f, -1.43E-5f, -1.0295999E-5f, -9.152E-6f, -1.2584E-5f, -1.6588E-5f, -1.8304E-5f, -1.0295999E-5f, 5.7199995E-6f, 2.0591999E-5f, 2.6884E-5f, 2.1164E-5f, 9.152E-6f, 0.0f, -1.144E-6f, 6.8639997E-6f, 1.7159999E-5f, 2.2879998E-5f, 1.8875999E-5f, 8.008E-6f, -1.7159999E-6f, -5.7199995E-6f, -5.1479997E-6f, -4.576E-6f, -6.292E-6f, -4.576E-6f, 0.0f, 6.8639997E-6f, 1.0868E-5f, 8.579999E-6f, 5.1479997E-6f, 4.576E-6f, 1.0868E-5f, 2.1164E-5f, 2.6884E-5f, 2.9171999E-5f, 2.7455999E-5f, 2.4595998E-5f, 2.1736E-5f, 1.7732E-5f, 1.6016E-5f, 1.7159999E-5f, 2.002E-5f, 2.002E-5f, 1.6016E-5f, 1.2584E-5f, 1.2011999E-5f, 1.3155999E-5f, 1.3155999E-5f, 9.152E-6f, 4.576E-6f, 2.8599998E-6f, 4.576E-6f, 8.008E-6f, 6.8639997E-6f, 2.288E-6f, -2.8599998E-6f, -5.7199995E-6f, -4.576E-6f, 0.0f, 7.4359996E-6f, 1.3727999E-5f, 1.4871999E-5f, 1.0868E-5f, 3.4319999E-6f, 1.144E-6f, 6.292E-6f, 1.2011999E-5f, 1.5443999E-5f, 1.1439999E-5f, 5.7199995E-6f, 1.144E-6f, -1.7159999E-6f, -4.004E-6f, -8.008E-6f, -1.0295999E-5f, -1.0295999E-5f
        )));
        channelsData.add(new ArrayList<>(Arrays.asList(1.0868E-5f, 6.292E-6f, 4.576E-6f, 5.1479997E-6f, 6.292E-6f, 5.1479997E-6f, 5.72E-7f, -5.7199995E-6f, -7.4359996E-6f, -5.1479997E-6f, -2.288E-6f, -1.144E-6f, 0.0f, 1.144E-6f, 1.7159999E-6f, -5.72E-7f, -6.8639997E-6f, -1.4871999E-5f, -1.9448E-5f, -1.8304E-5f, -1.2584E-5f, -8.579999E-6f, -5.7199995E-6f, -2.8599998E-6f, 0.0f, 2.8599998E-6f, 1.144E-6f, -4.576E-6f, -1.2011999E-5f, -1.6588E-5f, -1.7732E-5f, -1.5443999E-5f, -1.1439999E-5f, -7.4359996E-6f, -4.576E-6f, -5.7199995E-6f, -9.724E-6f, -1.3155999E-5f, -1.0868E-5f, -4.576E-6f, 2.288E-6f, 6.8639997E-6f, 6.292E-6f, 2.8599998E-6f, 0.0f, 1.7159999E-6f, 5.1479997E-6f, 1.0295999E-5f, 1.7159999E-5f, 2.2307999E-5f, 2.3452E-5f, 2.002E-5f, 1.43E-5f, 1.2011999E-5f, 1.0868E-5f, 9.724E-6f, 5.1479997E-6f, -2.288E-6f, -8.008E-6f, -1.0868E-5f, -9.152E-6f, -5.7199995E-6f, -4.004E-6f, -4.004E-6f, -3.4319999E-6f, -1.7159999E-6f, -2.8599998E-6f, -7.4359996E-6f, -1.3155999E-5f, -1.7159999E-5f, -1.7159999E-5f, -1.6016E-5f, -1.3727999E-5f, -1.0295999E-5f, -8.008E-6f, -9.152E-6f, -1.43E-5f, -2.0591999E-5f, -2.4023999E-5f, -2.1164E-5f, -1.6016E-5f, -1.6016E-5f, -1.8875999E-5f, -1.9448E-5f, -1.7159999E-5f, -1.3727999E-5f, -1.0868E-5f, -1.0295999E-5f, -1.1439999E-5f, -1.43E-5f, -1.7159999E-5f, -2.0591999E-5f, -2.5168E-5f, -2.9171999E-5f, -2.9743998E-5f, -2.6884E-5f, -2.1736E-5f, -1.7159999E-5f, -1.1439999E-5f, -9.152E-6f, -1.0295999E-5f, -1.1439999E-5f, -1.0868E-5f, -6.8639997E-6f, -2.8599998E-6f, -1.7159999E-6f, -5.1479997E-6f, -1.0868E-5f, -1.2584E-5f, -8.579999E-6f, -2.8599998E-6f, 0.0f, -2.8599998E-6f, -7.4359996E-6f, -1.0868E-5f, -1.43E-5f, -1.7732E-5f, -2.4595998E-5f, -2.86E-5f, -2.5168E-5f, -1.4871999E-5f, -6.292E-6f, -5.1479997E-6f, -8.579999E-6f, -1.2011999E-5f, -9.152E-6f, -1.7159999E-6f, 4.004E-6f, 5.1479997E-6f, 5.72E-7f, -6.292E-6f, -1.0868E-5f, -1.0295999E-5f, -4.004E-6f, 2.8599998E-6f, 8.579999E-6f, 1.2011999E-5f, 1.3727999E-5f, 1.3727999E-5f, 1.3155999E-5f, 1.3155999E-5f, 1.3155999E-5f, 1.0868E-5f, 8.579999E-6f, 4.576E-6f, 0.0f, 0.0f, 4.004E-6f, 8.579999E-6f, 1.0295999E-5f, 9.152E-6f, 3.4319999E-6f, -5.1479997E-6f, -8.579999E-6f, -4.004E-6f, 5.1479997E-6f, 1.3155999E-5f, 1.6588E-5f, 1.43E-5f, 1.0295999E-5f, 6.292E-6f, 3.4319999E-6f, 1.7159999E-6f, 5.72E-7f, -1.144E-6f, -4.004E-6f, -4.576E-6f, -5.72E-7f, 8.579999E-6f, 1.6016E-5f, 1.8875999E-5f, 1.5443999E-5f, 1.0295999E-5f, 6.292E-6f, 6.292E-6f, 9.152E-6f, 1.1439999E-5f, 1.0868E-5f, 8.008E-6f, 5.1479997E-6f, 9.152E-6f, 2.3452E-5f, 3.8896E-5f, 4.6332E-5f, 4.1755997E-5f, 3.146E-5f, 2.4023999E-5f, 2.3452E-5f, 2.9743998E-5f, 3.7179998E-5f, 4.004E-5f, 3.6036E-5f, 2.6311998E-5f, 1.8304E-5f, 1.43E-5f, 1.3727999E-5f, 1.2584E-5f, 1.0295999E-5f, 1.0295999E-5f, 1.43E-5f, 1.8304E-5f, 1.8875999E-5f, 1.3727999E-5f, 7.4359996E-6f, 6.8639997E-6f, 1.3727999E-5f, 2.6884E-5f, 3.7751997E-5f, 4.2328E-5f, 4.1755997E-5f, 3.6608E-5f, 2.9171999E-5f, 2.0591999E-5f, 1.4871999E-5f, 1.4871999E-5f, 1.9448E-5f, 2.2879998E-5f, 2.3452E-5f, 2.1164E-5f, 1.9448E-5f, 1.8875999E-5f, 1.7159999E-5f, 1.3155999E-5f, 8.008E-6f, 4.004E-6f, 4.004E-6f, 6.8639997E-6f, 6.292E-6f, 1.7159999E-6f, -4.576E-6f, -8.008E-6f, -6.292E-6f, 1.7159999E-6f, 1.1439999E-5f, 1.8875999E-5f, 2.0591999E-5f, 1.6588E-5f, 8.008E-6f, 3.4319999E-6f, 5.1479997E-6f, 1.0868E-5f, 1.5443999E-5f, 1.3727999E-5f, 8.008E-6f, 1.7159999E-6f, -3.4319999E-6f, -5.7199995E-6f, -8.579999E-6f, -1.3155999E-5f, -1.7159999E-5f
        )));
        eegPacket = new MbtEEGPacket(channelsData);
        if(useQualities)
            eegPacket.setQualities(new ArrayList<>(Arrays.asList(ArrayUtils.toObject(MBTSignalQualityChecker.computeQualitiesForPacketNew(250,250,channelsData)))));
        eegPacketsList.add(eegPacket);
        return eegPacketsList;

    }

    private ArrayList<MbtEEGPacket> getEEGDataSet3(boolean useQualities){
        ArrayList<MbtEEGPacket> eegPacketsList = new ArrayList<>();
        ArrayList<ArrayList<Float>> channelsData = new ArrayList<>();
        channelsData.add(new ArrayList<>(Arrays.asList(-9.152E-6f, -8.579999E-6f, -1.2011999E-5f, -1.43E-5f, -1.5443999E-5f, -1.43E-5f, -1.3155999E-5f, -1.3727999E-5f, -1.3155999E-5f, -1.2011999E-5f, -1.0868E-5f, -9.724E-6f, -9.724E-6f, -8.579999E-6f, -5.7199995E-6f, -4.004E-6f, -2.288E-6f, -5.72E-7f, 2.288E-6f, 5.1479997E-6f, 5.1479997E-6f, 5.72E-7f, -7.4359996E-6f, -1.1439999E-5f, -8.008E-6f, -2.8599998E-6f, 5.72E-7f, -2.8599998E-6f, -9.724E-6f, -1.4871999E-5f, -1.7159999E-5f, -1.5443999E-5f, -9.152E-6f, 1.7159999E-6f, 1.1439999E-5f, 1.3155999E-5f, 6.292E-6f, -6.292E-6f, -1.43E-5f, -9.724E-6f, 4.576E-6f, 1.8304E-5f, 2.002E-5f, 1.3155999E-5f, 5.7199995E-6f, 1.7159999E-6f, 5.72E-7f, -2.288E-6f, -5.7199995E-6f, -8.008E-6f, -9.724E-6f, -9.724E-6f, -1.2584E-5f, -1.6016E-5f, -1.7159999E-5f, -1.3155999E-5f, -8.008E-6f, -6.292E-6f, -5.1479997E-6f, -4.004E-6f, -3.4319999E-6f, -1.7159999E-6f, 1.144E-6f, 5.1479997E-6f, 9.724E-6f, 1.3155999E-5f, 1.3727999E-5f, 9.724E-6f, 4.576E-6f, 2.8599998E-6f, 3.4319999E-6f, 2.8599998E-6f, 5.72E-7f, -5.72E-7f, 2.288E-6f, 7.4359996E-6f, 1.0868E-5f, 9.724E-6f, 6.292E-6f, 4.004E-6f, 3.4319999E-6f, 3.4319999E-6f, 0.0f, -7.4359996E-6f, -1.2584E-5f, -1.2011999E-5f, -4.004E-6f, 4.576E-6f, 1.2011999E-5f, 1.7159999E-5f, 1.3727999E-5f, 5.1479997E-6f, -4.576E-6f, -9.724E-6f, -8.008E-6f, -3.4319999E-6f, -5.72E-7f, -2.8599998E-6f, -8.008E-6f, -1.0868E-5f, -9.724E-6f, -5.7199995E-6f, -4.576E-6f, -6.8639997E-6f, -9.724E-6f, -1.0295999E-5f, -6.292E-6f, 5.72E-7f, 8.579999E-6f, 1.3727999E-5f, 1.43E-5f, 1.1439999E-5f, 7.4359996E-6f, 5.7199995E-6f, 8.008E-6f, 1.2584E-5f, 1.4871999E-5f, 1.0868E-5f, 5.1479997E-6f, 3.4319999E-6f, 6.292E-6f, 1.2011999E-5f, 1.3155999E-5f, 9.152E-6f, 4.576E-6f, 5.72E-7f, -5.72E-7f, -5.72E-7f, 1.144E-6f, 5.7199995E-6f, 1.1439999E-5f, 1.4871999E-5f, 1.0868E-5f, 0.0f, -8.579999E-6f, -1.1439999E-5f, -9.724E-6f, -8.008E-6f, -8.008E-6f, -9.724E-6f, -1.4871999E-5f, -1.9448E-5f, -2.0591999E-5f, -1.8304E-5f, -1.3155999E-5f, -8.579999E-6f, -8.008E-6f, -1.2584E-5f, -1.8875999E-5f, -2.1736E-5f, -2.2307999E-5f, -2.3452E-5f, -2.4595998E-5f, -2.4595998E-5f, -2.0591999E-5f, -1.5443999E-5f, -6.8639997E-6f, 0.0f, 4.004E-6f, 7.4359996E-6f, 8.579999E-6f, 6.8639997E-6f, 0.0f, -8.008E-6f, -1.2584E-5f, -1.1439999E-5f, -7.4359996E-6f, -5.7199995E-6f, -9.724E-6f, -1.5443999E-5f, -1.9448E-5f, -1.9448E-5f, -1.8875999E-5f, -1.7732E-5f, -1.2011999E-5f, -6.8639997E-6f, -5.1479997E-6f, -8.579999E-6f, -1.2584E-5f, -1.0295999E-5f, -3.4319999E-6f, 4.004E-6f, 7.4359996E-6f, 6.8639997E-6f, 5.7199995E-6f, 5.1479997E-6f, 5.1479997E-6f, 4.576E-6f, 2.8599998E-6f, 2.8599998E-6f, 4.576E-6f, 6.292E-6f, 6.8639997E-6f, 5.7199995E-6f, 5.7199995E-6f, 7.4359996E-6f, 8.008E-6f, 5.7199995E-6f, -2.288E-6f, -6.8639997E-6f, -3.4319999E-6f, 5.7199995E-6f, 1.1439999E-5f, 8.579999E-6f, 2.288E-6f, -5.72E-7f, 1.7159999E-6f, 7.4359996E-6f, 1.0295999E-5f, 1.0868E-5f, 7.4359996E-6f, 4.004E-6f, 0.0f, -2.8599998E-6f, -1.144E-6f, 2.8599998E-6f, 7.4359996E-6f, 1.0295999E-5f, 1.0295999E-5f, 9.724E-6f, 8.008E-6f, 5.7199995E-6f, 1.7159999E-6f, -3.4319999E-6f, -5.1479997E-6f, -5.7199995E-6f, -5.7199995E-6f, -5.7199995E-6f, -6.8639997E-6f, -6.8639997E-6f, -6.292E-6f, -5.1479997E-6f, -4.004E-6f, -4.004E-6f, -1.144E-6f, 5.7199995E-6f, 1.5443999E-5f, 2.2879998E-5f, 2.2307999E-5f, 1.7732E-5f, 1.0295999E-5f, 1.144E-6f, -2.8599998E-6f, -5.72E-7f, 7.4359996E-6f, 1.6016E-5f, 1.8875999E-5f, 1.4871999E-5f, 7.4359996E-6f, 4.004E-6f
        )));
        channelsData.add(new ArrayList<>(Arrays.asList(-1.8875999E-5f, -1.8304E-5f, -1.8304E-5f, -1.8875999E-5f, -1.9448E-5f, -1.9448E-5f, -1.8875999E-5f, -1.8304E-5f, -1.8304E-5f, -2.002E-5f, -2.2879998E-5f, -2.6311998E-5f, -2.9743998E-5f, -3.0887997E-5f, -3.0316E-5f, -2.9171999E-5f, -2.6311998E-5f, -2.1164E-5f, -1.4871999E-5f, -1.0295999E-5f, -1.0868E-5f, -1.8304E-5f, -2.9171999E-5f, -3.6608E-5f, -3.4892E-5f, -2.9171999E-5f, -2.4023999E-5f, -2.5168E-5f, -3.2032E-5f, -3.7751997E-5f, -4.0611998E-5f, -3.7179998E-5f, -2.8027998E-5f, -1.4871999E-5f, -5.1479997E-6f, -5.7199995E-6f, -1.4871999E-5f, -2.8027998E-5f, -3.6036E-5f, -3.0316E-5f, -1.4871999E-5f, 1.144E-6f, 6.8639997E-6f, 2.8599998E-6f, -1.7159999E-6f, -4.004E-6f, -4.004E-6f, -5.7199995E-6f, -9.724E-6f, -1.4871999E-5f, -1.8304E-5f, -1.9448E-5f, -2.1736E-5f, -2.5168E-5f, -2.6311998E-5f, -2.2879998E-5f, -1.7159999E-5f, -1.3727999E-5f, -1.3727999E-5f, -1.5443999E-5f, -1.8875999E-5f, -1.9448E-5f, -1.7159999E-5f, -1.5443999E-5f, -1.43E-5f, -1.4871999E-5f, -1.6588E-5f, -1.8875999E-5f, -2.1736E-5f, -2.3452E-5f, -2.4023999E-5f, -2.5168E-5f, -2.7455999E-5f, -2.8027998E-5f, -2.4595998E-5f, -1.8875999E-5f, -1.43E-5f, -1.43E-5f, -1.7159999E-5f, -1.9448E-5f, -2.002E-5f, -2.002E-5f, -2.3452E-5f, -3.0316E-5f, -3.4892E-5f, -3.2604E-5f, -2.2879998E-5f, -1.2011999E-5f, -4.004E-6f, 5.72E-7f, -2.8599998E-6f, -1.0295999E-5f, -1.7159999E-5f, -2.0591999E-5f, -2.002E-5f, -1.7732E-5f, -1.5443999E-5f, -1.4871999E-5f, -1.6588E-5f, -1.7732E-5f, -1.5443999E-5f, -9.724E-6f, -5.1479997E-6f, -4.576E-6f, -8.008E-6f, -1.0868E-5f, -8.579999E-6f, 0.0f, 1.0868E-5f, 2.0591999E-5f, 2.4023999E-5f, 2.2879998E-5f, 2.2307999E-5f, 2.2879998E-5f, 2.6884E-5f, 3.2032E-5f, 3.3747998E-5f, 3.146E-5f, 2.7455999E-5f, 2.7455999E-5f, 3.146E-5f, 3.8323997E-5f, 4.29E-5f, 4.2328E-5f, 3.9468E-5f, 3.5464E-5f, 3.146E-5f, 2.9171999E-5f, 2.86E-5f, 3.0316E-5f, 3.4319997E-5f, 3.7751997E-5f, 3.4892E-5f, 2.4023999E-5f, 1.3727999E-5f, 8.579999E-6f, 9.724E-6f, 1.43E-5f, 1.6588E-5f, 1.6588E-5f, 1.43E-5f, 1.3155999E-5f, 1.6016E-5f, 2.1164E-5f, 2.7455999E-5f, 3.146E-5f, 3.146E-5f, 2.7455999E-5f, 2.2307999E-5f, 2.1164E-5f, 2.2307999E-5f, 2.2879998E-5f, 2.2879998E-5f, 2.5168E-5f, 2.9171999E-5f, 3.3747998E-5f, 3.9468E-5f, 4.4043998E-5f, 4.4615997E-5f, 4.4043998E-5f, 4.1755997E-5f, 3.6608E-5f, 3.0316E-5f, 2.4595998E-5f, 2.1736E-5f, 2.1736E-5f, 2.3452E-5f, 2.3452E-5f, 1.7732E-5f, 1.0295999E-5f, 4.576E-6f, 4.004E-6f, 6.292E-6f, 8.579999E-6f, 1.2584E-5f, 1.4871999E-5f, 1.3155999E-5f, 1.0295999E-5f, 1.0295999E-5f, 1.43E-5f, 2.002E-5f, 2.4595998E-5f, 2.6311998E-5f, 2.4595998E-5f, 2.3452E-5f, 2.4595998E-5f, 2.5168E-5f, 2.4595998E-5f, 2.1164E-5f, 1.8304E-5f, 1.7732E-5f, 1.9448E-5f, 2.2879998E-5f, 2.5739999E-5f, 2.6884E-5f, 2.6311998E-5f, 2.4595998E-5f, 2.1736E-5f, 1.43E-5f, 7.4359996E-6f, 6.8639997E-6f, 1.1439999E-5f, 1.5443999E-5f, 1.43E-5f, 1.0295999E-5f, 8.579999E-6f, 1.1439999E-5f, 1.7159999E-5f, 2.0591999E-5f, 1.9448E-5f, 1.43E-5f, 7.4359996E-6f, 2.8599998E-6f, 2.288E-6f, 6.292E-6f, 1.2011999E-5f, 1.6016E-5f, 1.6016E-5f, 1.0868E-5f, 3.4319999E-6f, -4.004E-6f, -1.0868E-5f, -1.6016E-5f, -2.0591999E-5f, -2.3452E-5f, -2.5168E-5f, -2.5739999E-5f, -2.5168E-5f, -2.6311998E-5f, -2.7455999E-5f, -2.9171999E-5f, -3.146E-5f, -3.4319997E-5f, -3.7179998E-5f, -3.7179998E-5f, -3.146E-5f, -2.1736E-5f, -1.4871999E-5f, -1.6016E-5f, -2.4595998E-5f, -3.5464E-5f, -4.4043998E-5f, -4.4615997E-5f, -3.7751997E-5f, -2.8027998E-5f, -2.0591999E-5f, -2.0591999E-5f, -2.6884E-5f, -3.6608E-5f, -4.2328E-5f
        )));
        MbtEEGPacket eegPacket = new MbtEEGPacket(channelsData);
        if(useQualities)
            eegPacket.setQualities(new ArrayList<>(Arrays.asList(ArrayUtils.toObject(MBTSignalQualityChecker.computeQualitiesForPacketNew(250,250,channelsData)))));
        eegPacketsList.add(eegPacket);
        channelsData = new ArrayList<>();

        channelsData.add(new ArrayList<>(Arrays.asList(8.008E-6f, 1.4871999E-5f, 1.8304E-5f, 1.5443999E-5f, 1.0295999E-5f, 5.1479997E-6f, 0.0f, -5.1479997E-6f, -1.0295999E-5f, -1.2584E-5f, -1.0295999E-5f, -4.576E-6f, 1.7159999E-6f, 2.8599998E-6f, 2.288E-6f, 4.004E-6f, 7.4359996E-6f, 9.724E-6f, 6.292E-6f, 5.72E-7f, -4.576E-6f, -6.292E-6f, -2.288E-6f, 4.004E-6f, 1.2584E-5f, 1.9448E-5f, 2.0591999E-5f, 1.6588E-5f, 8.008E-6f, 2.8599998E-6f, 4.576E-6f, 9.724E-6f, 1.2584E-5f, 1.1439999E-5f, 9.152E-6f, 9.152E-6f, 9.152E-6f, 8.008E-6f, 4.576E-6f, 5.72E-7f, -1.7159999E-6f, -2.8599998E-6f, -1.7159999E-6f, 0.0f, 2.288E-6f, 3.4319999E-6f, 3.4319999E-6f, 2.8599998E-6f, -5.72E-7f, -3.4319999E-6f, -3.4319999E-6f, -2.288E-6f, 1.7159999E-6f, 6.8639997E-6f, 1.4871999E-5f, 2.1736E-5f, 2.5168E-5f, 2.3452E-5f, 1.43E-5f, 4.576E-6f, 0.0f, -1.144E-6f, -1.7159999E-6f, -5.1479997E-6f, -7.4359996E-6f, -2.8599998E-6f, 8.579999E-6f, 1.8875999E-5f, 2.002E-5f, 1.43E-5f, 6.8639997E-6f, 2.8599998E-6f, 1.7159999E-6f, -1.144E-6f, -5.1479997E-6f, -8.008E-6f, -1.0868E-5f, -1.1439999E-5f, -1.2584E-5f, -1.3155999E-5f, -1.3727999E-5f, -1.7159999E-5f, -2.2307999E-5f, -2.86E-5f, -3.146E-5f, -2.9743998E-5f, -2.5739999E-5f, -2.1164E-5f, -1.7732E-5f, -1.3155999E-5f, -8.008E-6f, -6.292E-6f, -6.8639997E-6f, -9.152E-6f, -8.008E-6f, -1.144E-6f, 8.579999E-6f, 1.3727999E-5f, 1.0868E-5f, 3.4319999E-6f, -2.8599998E-6f, -7.4359996E-6f, -9.152E-6f, -8.579999E-6f, -5.7199995E-6f, -2.8599998E-6f, -5.72E-7f, 5.72E-7f, -1.144E-6f, -3.4319999E-6f, -4.004E-6f, -5.1479997E-6f, -7.4359996E-6f, -1.3727999E-5f, -1.6588E-5f, -1.3727999E-5f, -8.579999E-6f, -3.4319999E-6f, -5.1479997E-6f, -9.724E-6f, -1.3727999E-5f, -1.4871999E-5f, -1.3727999E-5f, -1.43E-5f, -1.6588E-5f, -1.8875999E-5f, -1.9448E-5f, -1.7159999E-5f, -1.4871999E-5f, -1.3727999E-5f, -9.724E-6f, -5.7199995E-6f, -3.4319999E-6f, -6.292E-6f, -1.0868E-5f, -1.2011999E-5f, -1.0868E-5f, -7.4359996E-6f, -6.8639997E-6f, -9.152E-6f, -1.0868E-5f, -1.0295999E-5f, -7.4359996E-6f, -6.8639997E-6f, -6.8639997E-6f, -5.7199995E-6f, -5.7199995E-6f, -5.7199995E-6f, -6.292E-6f, -4.004E-6f, 1.7159999E-6f, 4.576E-6f, 1.144E-6f, -8.008E-6f, -1.6016E-5f, -1.3727999E-5f, -4.004E-6f, 7.4359996E-6f, 1.43E-5f, 1.4871999E-5f, 1.0868E-5f, 4.576E-6f, 0.0f, -5.72E-7f, 0.0f, 2.288E-6f, 3.4319999E-6f, 4.004E-6f, 1.144E-6f, -1.144E-6f, 0.0f, 3.4319999E-6f, 9.152E-6f, 1.2011999E-5f, 1.1439999E-5f, 1.0868E-5f, 1.2011999E-5f, 1.3727999E-5f, 1.2584E-5f, 9.152E-6f, 6.8639997E-6f, 6.292E-6f, 6.292E-6f, 5.7199995E-6f, 6.292E-6f, 1.1439999E-5f, 1.7732E-5f, 2.1164E-5f, 1.8304E-5f, 1.0868E-5f, 4.576E-6f, 1.7159999E-6f, 2.288E-6f, 0.0f, -7.4359996E-6f, -1.3155999E-5f, -1.3727999E-5f, -9.152E-6f, -3.4319999E-6f, -1.144E-6f, -3.4319999E-6f, -9.724E-6f, -1.6016E-5f, -2.002E-5f, -2.002E-5f, -1.3727999E-5f, -4.004E-6f, 2.288E-6f, 5.72E-7f, -7.4359996E-6f, -1.3727999E-5f, -1.6016E-5f, -1.2011999E-5f, -7.4359996E-6f, -5.1479997E-6f, -1.7159999E-6f, 0.0f, -1.144E-6f, -5.1479997E-6f, -1.0295999E-5f, -1.1439999E-5f, -9.724E-6f, -6.8639997E-6f, -5.1479997E-6f, -6.292E-6f, -8.579999E-6f, -9.724E-6f, -8.579999E-6f, -6.292E-6f, -6.292E-6f, -7.4359996E-6f, -8.008E-6f, -5.1479997E-6f, 5.72E-7f, 6.292E-6f, 1.0295999E-5f, 1.1439999E-5f, 1.0295999E-5f, 9.724E-6f, 9.724E-6f, 1.2011999E-5f, 1.3727999E-5f, 1.5443999E-5f, 1.43E-5f, 1.2011999E-5f, 1.3155999E-5f, 1.7159999E-5f, 1.9448E-5f, 1.7732E-5f, 1.0295999E-5f
        )));
        channelsData.add(new ArrayList<>(Arrays.asList(-4.0611998E-5f, -3.4319997E-5f, -2.6884E-5f, -2.4023999E-5f, -2.6311998E-5f, -3.146E-5f, -3.7179998E-5f, -4.1755997E-5f, -4.5187997E-5f, -4.4043998E-5f, -3.8896E-5f, -3.2604E-5f, -2.8027998E-5f, -2.9171999E-5f, -3.3176E-5f, -3.3176E-5f, -2.7455999E-5f, -2.002E-5f, -1.7732E-5f, -2.3452E-5f, -3.2032E-5f, -3.8323997E-5f, -3.7179998E-5f, -2.9171999E-5f, -1.7159999E-5f, -7.4359996E-6f, -5.7199995E-6f, -1.1439999E-5f, -2.1164E-5f, -2.8027998E-5f, -2.7455999E-5f, -2.1736E-5f, -1.6588E-5f, -1.5443999E-5f, -1.7159999E-5f, -1.8875999E-5f, -2.002E-5f, -2.0591999E-5f, -2.2879998E-5f, -2.4595998E-5f, -2.6311998E-5f, -2.8027998E-5f, -2.8027998E-5f, -2.8027998E-5f, -2.7455999E-5f, -2.7455999E-5f, -2.6311998E-5f, -2.4023999E-5f, -2.4023999E-5f, -2.5168E-5f, -2.4595998E-5f, -2.1164E-5f, -1.43E-5f, -5.7199995E-6f, 3.4319999E-6f, 1.0868E-5f, 1.43E-5f, 1.3155999E-5f, 6.292E-6f, -2.8599998E-6f, -9.152E-6f, -1.3727999E-5f, -1.6588E-5f, -2.0591999E-5f, -2.2307999E-5f, -1.5443999E-5f, -1.7159999E-6f, 1.1439999E-5f, 1.43E-5f, 9.152E-6f, 2.288E-6f, -5.72E-7f, 1.7159999E-6f, 3.4319999E-6f, 1.7159999E-6f, -3.4319999E-6f, -9.152E-6f, -1.2011999E-5f, -1.2584E-5f, -1.1439999E-5f, -1.0868E-5f, -1.3155999E-5f, -1.7159999E-5f, -1.9448E-5f, -1.8304E-5f, -1.3155999E-5f, -6.8639997E-6f, -5.72E-7f, 3.4319999E-6f, 6.8639997E-6f, 8.579999E-6f, 8.579999E-6f, 8.579999E-6f, 1.0295999E-5f, 1.5443999E-5f, 2.5168E-5f, 3.4319997E-5f, 3.7751997E-5f, 3.3747998E-5f, 2.4595998E-5f, 1.6588E-5f, 1.3155999E-5f, 1.43E-5f, 1.8875999E-5f, 2.4595998E-5f, 2.7455999E-5f, 2.9743998E-5f, 3.146E-5f, 3.2032E-5f, 3.2032E-5f, 3.2032E-5f, 3.0316E-5f, 2.6311998E-5f, 2.0591999E-5f, 1.7732E-5f, 2.002E-5f, 2.4023999E-5f, 2.7455999E-5f, 2.6884E-5f, 2.1736E-5f, 1.7159999E-5f, 1.3727999E-5f, 1.2011999E-5f, 9.724E-6f, 4.576E-6f, 1.144E-6f, -5.72E-7f, 2.288E-6f, 7.4359996E-6f, 1.0295999E-5f, 1.43E-5f, 1.8304E-5f, 2.1736E-5f, 2.2879998E-5f, 2.1736E-5f, 2.1736E-5f, 2.1164E-5f, 2.0591999E-5f, 1.8304E-5f, 1.4871999E-5f, 1.3727999E-5f, 1.7159999E-5f, 2.2307999E-5f, 2.5739999E-5f, 2.5739999E-5f, 2.5739999E-5f, 2.4595998E-5f, 2.4595998E-5f, 2.6884E-5f, 3.2604E-5f, 3.8896E-5f, 4.004E-5f, 3.4319997E-5f, 2.4023999E-5f, 1.7159999E-5f, 2.002E-5f, 3.0316E-5f, 4.1755997E-5f, 4.9764E-5f, 4.9191996E-5f, 4.29E-5f, 3.3747998E-5f, 2.6884E-5f, 2.4595998E-5f, 2.2879998E-5f, 1.9448E-5f, 1.5443999E-5f, 1.2011999E-5f, 8.579999E-6f, 6.292E-6f, 6.292E-6f, 8.579999E-6f, 1.2584E-5f, 1.6016E-5f, 1.5443999E-5f, 1.3155999E-5f, 1.3727999E-5f, 1.6016E-5f, 1.7732E-5f, 1.7732E-5f, 1.6588E-5f, 1.4871999E-5f, 1.3155999E-5f, 1.2584E-5f, 1.3155999E-5f, 1.6016E-5f, 1.9448E-5f, 2.002E-5f, 1.6016E-5f, 7.4359996E-6f, -1.7159999E-6f, -7.4359996E-6f, -9.152E-6f, -1.0868E-5f, -1.6016E-5f, -2.002E-5f, -2.002E-5f, -1.6016E-5f, -1.2011999E-5f, -1.1439999E-5f, -1.6016E-5f, -2.3452E-5f, -3.0316E-5f, -3.4892E-5f, -3.4892E-5f, -2.86E-5f, -1.8304E-5f, -1.1439999E-5f, -1.3155999E-5f, -2.1736E-5f, -2.9743998E-5f, -3.2604E-5f, -2.9743998E-5f, -2.5739999E-5f, -2.4023999E-5f, -2.3452E-5f, -2.5168E-5f, -2.9171999E-5f, -3.3747998E-5f, -3.7751997E-5f, -3.7179998E-5f, -3.3747998E-5f, -3.146E-5f, -3.0316E-5f, -3.2604E-5f, -3.6036E-5f, -3.8896E-5f, -3.7179998E-5f, -3.3747998E-5f, -3.2032E-5f, -3.2604E-5f, -3.3747998E-5f, -3.2032E-5f, -2.6884E-5f, -2.1736E-5f, -2.1164E-5f, -2.4595998E-5f, -2.7455999E-5f, -2.6884E-5f, -2.4595998E-5f, -2.2307999E-5f, -2.0591999E-5f, -1.9448E-5f, -2.002E-5f, -2.1164E-5f, -2.002E-5f, -1.6588E-5f, -1.2584E-5f, -1.0868E-5f, -1.4871999E-5f
        )));
        eegPacket = new MbtEEGPacket(channelsData);
        if(useQualities)
            eegPacket.setQualities(new ArrayList<>(Arrays.asList(ArrayUtils.toObject(MBTSignalQualityChecker.computeQualitiesForPacketNew(250,250,channelsData)))));
        eegPacketsList.add(eegPacket);
        channelsData = new ArrayList<>();

        channelsData.add(new ArrayList<>(Arrays.asList(3.4319999E-6f, 2.8599998E-6f, 9.152E-6f, 1.4871999E-5f, 1.43E-5f, 1.2011999E-5f, 8.579999E-6f, 5.1479997E-6f, 3.4319999E-6f, 4.004E-6f, 8.579999E-6f, 1.2584E-5f, 1.2011999E-5f, 8.579999E-6f, 3.4319999E-6f, 3.4319999E-6f, 8.008E-6f, 1.3727999E-5f, 1.6588E-5f, 1.43E-5f, 1.0868E-5f, 7.4359996E-6f, 5.1479997E-6f, 3.4319999E-6f, 5.72E-7f, -5.72E-7f, -5.72E-7f, 2.8599998E-6f, 8.008E-6f, 1.0868E-5f, 1.0868E-5f, 8.008E-6f, 6.8639997E-6f, 9.724E-6f, 1.3155999E-5f, 1.8304E-5f, 2.1164E-5f, 2.1164E-5f, 2.002E-5f, 1.7159999E-5f, 1.6588E-5f, 1.6588E-5f, 1.43E-5f, 1.0295999E-5f, 5.1479997E-6f, 4.576E-6f, 1.0295999E-5f, 1.9448E-5f, 2.6311998E-5f, 2.6311998E-5f, 2.3452E-5f, 2.002E-5f, 1.7159999E-5f, 1.43E-5f, 1.0295999E-5f, 7.4359996E-6f, 8.579999E-6f, 1.0868E-5f, 1.1439999E-5f, 8.579999E-6f, 4.004E-6f, 0.0f, -1.144E-6f, -5.72E-7f, -1.144E-6f, -1.144E-6f, -5.72E-7f, -1.144E-6f, -5.7199995E-6f, -1.2584E-5f, -1.6588E-5f, -1.4871999E-5f, -9.724E-6f, -5.1479997E-6f, -3.4319999E-6f, -4.576E-6f, -6.8639997E-6f, -8.008E-6f, -8.579999E-6f, -1.3727999E-5f, -1.7732E-5f, -1.8875999E-5f, -1.8875999E-5f, -2.1164E-5f, -2.5739999E-5f, -2.9171999E-5f, -2.86E-5f, -2.5168E-5f, -2.1736E-5f, -2.2879998E-5f, -2.6311998E-5f, -2.8027998E-5f, -2.7455999E-5f, -2.5168E-5f, -2.5168E-5f, -2.5168E-5f, -2.5168E-5f, -2.4023999E-5f, -1.8304E-5f, -9.152E-6f, -5.72E-7f, 4.576E-6f, 3.4319999E-6f, -2.288E-6f, -9.152E-6f, -1.3155999E-5f, -1.2011999E-5f, -1.0295999E-5f, -9.724E-6f, -1.2011999E-5f, -1.3727999E-5f, -1.3155999E-5f, -1.1439999E-5f, -9.724E-6f, -8.008E-6f, -5.1479997E-6f, -2.288E-6f, 0.0f, 0.0f, -2.8599998E-6f, -4.004E-6f, -5.72E-7f, 6.292E-6f, 1.2011999E-5f, 1.1439999E-5f, 7.4359996E-6f, 6.292E-6f, 7.4359996E-6f, 8.008E-6f, 3.4319999E-6f, -2.288E-6f, -5.72E-7f, 9.152E-6f, 2.2879998E-5f, 3.2032E-5f, 3.2604E-5f, 2.6311998E-5f, 1.8304E-5f, 1.3727999E-5f, 1.1439999E-5f, 9.724E-6f, 9.152E-6f, 5.7199995E-6f, 5.72E-7f, -3.4319999E-6f, -1.7159999E-6f, 4.576E-6f, 7.4359996E-6f, 4.576E-6f, -2.8599998E-6f, -9.152E-6f, -9.152E-6f, -4.004E-6f, 2.288E-6f, 2.8599998E-6f, -5.72E-7f, -4.004E-6f, -5.1479997E-6f, -5.1479997E-6f, -6.292E-6f, -8.579999E-6f, -1.0868E-5f, -1.2011999E-5f, -1.0295999E-5f, -9.152E-6f, -9.724E-6f, -8.579999E-6f, -5.7199995E-6f, -4.004E-6f, -5.7199995E-6f, -9.152E-6f, -1.0295999E-5f, -9.152E-6f, -7.4359996E-6f, -8.008E-6f, -6.292E-6f, -2.288E-6f, 5.72E-7f, 5.72E-7f, -1.7159999E-6f, -3.4319999E-6f, -1.7159999E-6f, 0.0f, 5.72E-7f, -3.4319999E-6f, -7.4359996E-6f, -5.1479997E-6f, 1.7159999E-6f, 8.008E-6f, 9.724E-6f, 7.4359996E-6f, 2.8599998E-6f, -1.7159999E-6f, -2.8599998E-6f, -2.8599998E-6f, -4.576E-6f, -6.292E-6f, -8.579999E-6f, -9.152E-6f, -9.724E-6f, -9.724E-6f, -8.008E-6f, -6.292E-6f, -5.7199995E-6f, -7.4359996E-6f, -1.0868E-5f, -1.3155999E-5f, -1.43E-5f, -1.3727999E-5f, -1.3727999E-5f, -1.3155999E-5f, -9.152E-6f, -4.576E-6f, -1.7159999E-6f, -3.4319999E-6f, -5.1479997E-6f, -3.4319999E-6f, 1.144E-6f, 6.8639997E-6f, 1.0295999E-5f, 8.579999E-6f, 6.292E-6f, 6.8639997E-6f, 8.008E-6f, 7.4359996E-6f, 4.004E-6f, -1.7159999E-6f, -7.4359996E-6f, -9.152E-6f, -4.004E-6f, 3.4319999E-6f, 1.0868E-5f, 1.43E-5f, 1.1439999E-5f, 2.8599998E-6f, -8.008E-6f, -1.5443999E-5f, -1.8304E-5f, -1.8304E-5f, -1.7159999E-5f, -1.7159999E-5f, -1.6588E-5f, -1.4871999E-5f, -1.0868E-5f, -5.7199995E-6f, -1.144E-6f, 3.4319999E-6f, 8.008E-6f, 1.0295999E-5f, 8.008E-6f
        )));
        channelsData.add(new ArrayList<>(Arrays.asList(-2.1164E-5f, -2.2307999E-5f, -1.7159999E-5f, -1.2011999E-5f, -1.2584E-5f, -1.6588E-5f, -2.1164E-5f, -2.4023999E-5f, -2.3452E-5f, -2.1164E-5f, -1.6016E-5f, -1.2584E-5f, -1.2584E-5f, -1.3727999E-5f, -1.3727999E-5f, -1.0295999E-5f, -3.4319999E-6f, 4.004E-6f, 8.008E-6f, 6.292E-6f, 1.7159999E-6f, -1.7159999E-6f, -4.004E-6f, -5.1479997E-6f, -7.4359996E-6f, -9.152E-6f, -9.152E-6f, -5.7199995E-6f, 2.288E-6f, 8.579999E-6f, 1.0295999E-5f, 8.008E-6f, 7.4359996E-6f, 1.0868E-5f, 1.43E-5f, 1.7732E-5f, 1.8875999E-5f, 1.8304E-5f, 1.7732E-5f, 1.7732E-5f, 1.7732E-5f, 1.6016E-5f, 1.2011999E-5f, 7.4359996E-6f, 6.292E-6f, 9.152E-6f, 1.6016E-5f, 2.5168E-5f, 3.2032E-5f, 3.3176E-5f, 3.0887997E-5f, 2.9171999E-5f, 2.7455999E-5f, 2.4595998E-5f, 1.9448E-5f, 1.4871999E-5f, 1.3727999E-5f, 1.5443999E-5f, 1.7159999E-5f, 1.6588E-5f, 1.3155999E-5f, 8.008E-6f, 4.004E-6f, 2.288E-6f, -1.144E-6f, -4.576E-6f, -6.8639997E-6f, -8.579999E-6f, -1.2011999E-5f, -1.7159999E-5f, -2.0591999E-5f, -1.9448E-5f, -1.4871999E-5f, -9.724E-6f, -5.7199995E-6f, -4.576E-6f, -5.1479997E-6f, -5.7199995E-6f, -6.8639997E-6f, -1.0295999E-5f, -1.4871999E-5f, -1.7159999E-5f, -1.7159999E-5f, -1.6588E-5f, -1.7732E-5f, -1.8304E-5f, -1.7159999E-5f, -1.43E-5f, -1.2584E-5f, -1.3727999E-5f, -1.6016E-5f, -1.6016E-5f, -1.2584E-5f, -7.4359996E-6f, -4.004E-6f, -3.4319999E-6f, -4.576E-6f, -4.576E-6f, 2.288E-6f, 1.43E-5f, 2.5739999E-5f, 3.146E-5f, 2.9171999E-5f, 2.1164E-5f, 1.2011999E-5f, 5.1479997E-6f, 4.576E-6f, 6.292E-6f, 8.579999E-6f, 8.008E-6f, 5.1479997E-6f, 3.4319999E-6f, 4.004E-6f, 8.008E-6f, 1.3727999E-5f, 1.8304E-5f, 2.002E-5f, 1.9448E-5f, 1.7159999E-5f, 1.43E-5f, 1.43E-5f, 2.0591999E-5f, 3.0316E-5f, 3.7179998E-5f, 3.8896E-5f, 3.6608E-5f, 3.4892E-5f, 3.5464E-5f, 3.6036E-5f, 3.2604E-5f, 2.86E-5f, 3.0316E-5f, 3.9468E-5f, 5.0908E-5f, 5.8915997E-5f, 5.72E-5f, 4.8619997E-5f, 3.7751997E-5f, 3.146E-5f, 2.9743998E-5f, 2.9743998E-5f, 2.86E-5f, 2.3452E-5f, 1.6016E-5f, 1.2011999E-5f, 1.4871999E-5f, 2.1736E-5f, 2.6311998E-5f, 2.5168E-5f, 1.8875999E-5f, 1.2011999E-5f, 1.0295999E-5f, 1.3727999E-5f, 1.7159999E-5f, 1.6588E-5f, 1.2011999E-5f, 7.4359996E-6f, 5.7199995E-6f, 5.7199995E-6f, 4.004E-6f, 0.0f, -3.4319999E-6f, -4.004E-6f, -5.72E-7f, 2.288E-6f, 1.144E-6f, -1.144E-6f, -1.7159999E-6f, -2.8599998E-6f, -6.292E-6f, -1.1439999E-5f, -1.43E-5f, -1.43E-5f, -1.43E-5f, -1.3727999E-5f, -1.0868E-5f, -5.1479997E-6f, 0.0f, 1.7159999E-6f, 5.72E-7f, -3.4319999E-6f, -6.8639997E-6f, -1.0295999E-5f, -1.43E-5f, -1.9448E-5f, -2.4023999E-5f, -2.3452E-5f, -1.8304E-5f, -1.3155999E-5f, -1.0295999E-5f, -1.2011999E-5f, -1.7732E-5f, -2.4023999E-5f, -2.5739999E-5f, -2.4595998E-5f, -2.5739999E-5f, -2.86E-5f, -3.2604E-5f, -3.5464E-5f, -3.4892E-5f, -3.2604E-5f, -2.9171999E-5f, -2.5739999E-5f, -2.3452E-5f, -2.4023999E-5f, -2.8027998E-5f, -3.2032E-5f, -3.6036E-5f, -3.6608E-5f, -3.4892E-5f, -3.0887997E-5f, -2.6311998E-5f, -2.2307999E-5f, -2.1164E-5f, -2.2879998E-5f, -2.5739999E-5f, -2.4595998E-5f, -2.0591999E-5f, -1.4871999E-5f, -1.0868E-5f, -1.1439999E-5f, -1.3727999E-5f, -1.3727999E-5f, -1.2584E-5f, -1.2584E-5f, -1.6588E-5f, -2.4595998E-5f, -3.3176E-5f, -3.6036E-5f, -3.0316E-5f, -2.0591999E-5f, -1.0868E-5f, -7.4359996E-6f, -1.2011999E-5f, -2.4023999E-5f, -3.8896E-5f, -4.9191996E-5f, -5.2051997E-5f, -5.0908E-5f, -4.8047998E-5f, -4.6332E-5f, -4.5759996E-5f, -4.4615997E-5f, -4.1183997E-5f, -3.4892E-5f, -2.6884E-5f, -1.7732E-5f, -1.0295999E-5f, -6.8639997E-6f, -8.579999E-6f
        )));
        eegPacket = new MbtEEGPacket(channelsData);
        if(useQualities)
            eegPacket.setQualities(new ArrayList<>(Arrays.asList(ArrayUtils.toObject(MBTSignalQualityChecker.computeQualitiesForPacketNew(250,250,channelsData)))));
        eegPacketsList.add(eegPacket);
        channelsData = new ArrayList<>();

        channelsData.add(new ArrayList<>(Arrays.asList(1.7159999E-6f, -1.7159999E-6f, -1.144E-6f, 5.72E-7f, -5.72E-7f, -4.004E-6f, -5.7199995E-6f, -5.72E-7f, 1.3727999E-5f, 2.8027998E-5f, 3.2604E-5f, 2.86E-5f, 2.002E-5f, 1.1439999E-5f, 6.292E-6f, 3.4319999E-6f, 4.004E-6f, 3.4319999E-6f, 1.144E-6f, -1.144E-6f, -2.8599998E-6f, 1.144E-6f, 8.008E-6f, 1.1439999E-5f, 6.292E-6f, -6.292E-6f, -1.43E-5f, -1.2584E-5f, -5.1479997E-6f, 5.72E-7f, 1.7159999E-6f, 0.0f, -2.8599998E-6f, -3.4319999E-6f, -2.288E-6f, 1.144E-6f, 9.724E-6f, 1.7732E-5f, 1.8304E-5f, 1.3155999E-5f, 8.008E-6f, 8.008E-6f, 1.2011999E-5f, 1.6016E-5f, 1.4871999E-5f, 5.7199995E-6f, -4.576E-6f, -1.0295999E-5f, -1.0295999E-5f, -6.8639997E-6f, -2.288E-6f, 3.4319999E-6f, 6.8639997E-6f, 7.4359996E-6f, 5.1479997E-6f, -1.144E-6f, -8.579999E-6f, -1.4871999E-5f, -1.7159999E-5f, -1.5443999E-5f, -9.152E-6f, 2.288E-6f, 1.3727999E-5f, 2.0591999E-5f, 1.8304E-5f, 5.7199995E-6f, -8.008E-6f, -1.5443999E-5f, -1.3155999E-5f, -5.1479997E-6f, 1.7159999E-6f, 6.8639997E-6f, 9.152E-6f, 1.0295999E-5f, 1.1439999E-5f, 1.1439999E-5f, 1.0868E-5f, 6.292E-6f, 1.144E-6f, 5.72E-7f, 4.004E-6f, 1.2011999E-5f, 2.2879998E-5f, 3.146E-5f, 3.3176E-5f, 2.8027998E-5f, 2.3452E-5f, 2.0591999E-5f, 1.8304E-5f, 1.4871999E-5f, 8.579999E-6f, 3.4319999E-6f, 1.7159999E-6f, 1.7159999E-6f, 1.144E-6f, -5.72E-7f, -2.288E-6f, -3.4319999E-6f, -4.004E-6f, -5.7199995E-6f, -9.724E-6f, -1.0295999E-5f, -6.292E-6f, -1.144E-6f, 5.72E-7f, -4.004E-6f, -1.1439999E-5f, -1.8875999E-5f, -2.0591999E-5f, -1.6016E-5f, -8.579999E-6f, -1.7159999E-6f, 3.4319999E-6f, 5.1479997E-6f, 5.7199995E-6f, 4.576E-6f, 2.288E-6f, -5.72E-7f, -4.576E-6f, -7.4359996E-6f, -1.0295999E-5f, -9.724E-6f, 5.72E-7f, 1.6016E-5f, 2.86E-5f, 2.9743998E-5f, 2.2307999E-5f, 1.2584E-5f, 5.7199995E-6f, 5.1479997E-6f, 5.7199995E-6f, 4.576E-6f, 1.7159999E-6f, -1.144E-6f, 0.0f, 2.8599998E-6f, 8.008E-6f, 1.3155999E-5f, 1.2584E-5f, 6.292E-6f, -2.8599998E-6f, -8.579999E-6f, -6.8639997E-6f, -1.144E-6f, 1.144E-6f, -4.576E-6f, -1.2584E-5f, -1.8304E-5f, -1.9448E-5f, -1.6016E-5f, -9.724E-6f, -4.004E-6f, -1.144E-6f, -1.144E-6f, -4.004E-6f, -1.0868E-5f, -1.6588E-5f, -1.7732E-5f, -1.4871999E-5f, -1.2011999E-5f, -9.724E-6f, -7.4359996E-6f, -4.576E-6f, -5.1479997E-6f, -8.008E-6f, -9.724E-6f, -8.008E-6f, -2.8599998E-6f, -5.72E-7f, -1.144E-6f, -6.292E-6f, -9.724E-6f, -7.4359996E-6f, -5.72E-7f, 4.004E-6f, 2.288E-6f, -1.7159999E-6f, -4.004E-6f, -4.004E-6f, -5.72E-7f, 3.4319999E-6f, 8.008E-6f, 1.2011999E-5f, 1.43E-5f, 1.2584E-5f, 6.292E-6f, 0.0f, -3.4319999E-6f, -2.8599998E-6f, 5.72E-7f, 2.8599998E-6f, 2.288E-6f, 1.7159999E-6f, 1.7159999E-6f, 3.4319999E-6f, 4.576E-6f, 5.7199995E-6f, 7.4359996E-6f, 9.724E-6f, 1.0295999E-5f, 6.292E-6f, -5.72E-7f, -6.292E-6f, -8.579999E-6f, -8.008E-6f, -9.724E-6f, -1.2584E-5f, -1.2011999E-5f, -9.152E-6f, -5.7199995E-6f, -5.1479997E-6f, -8.008E-6f, -1.0868E-5f, -1.4871999E-5f, -1.7732E-5f, -1.7159999E-5f, -1.3727999E-5f, -8.008E-6f, -3.4319999E-6f, -2.8599998E-6f, -1.0295999E-5f, -2.1736E-5f, -2.6884E-5f, -2.4023999E-5f, -1.7159999E-5f, -1.2011999E-5f, -1.0295999E-5f, -1.2011999E-5f, -1.7732E-5f, -2.002E-5f, -2.1164E-5f, -2.1736E-5f, -2.0591999E-5f, -1.3727999E-5f, -4.004E-6f, 3.4319999E-6f, 3.4319999E-6f, -5.72E-7f, -5.7199995E-6f, -8.008E-6f, -4.004E-6f, 5.7199995E-6f, 1.7159999E-5f, 2.2307999E-5f, 2.0591999E-5f, 1.3155999E-5f, 2.8599998E-6f, -2.8599998E-6f, -3.4319999E-6f, -1.144E-6f
        )));
        channelsData.add(new ArrayList<>(Arrays.asList(-1.4871999E-5f, -1.8304E-5f, -1.7159999E-5f, -1.43E-5f, -1.2011999E-5f, -1.1439999E-5f, -1.0295999E-5f, -4.576E-6f, 9.724E-6f, 2.6311998E-5f, 3.4319997E-5f, 3.2032E-5f, 2.3452E-5f, 1.3727999E-5f, 7.4359996E-6f, 4.576E-6f, 3.4319999E-6f, 2.288E-6f, 5.72E-7f, 0.0f, 1.144E-6f, 5.1479997E-6f, 1.1439999E-5f, 1.6588E-5f, 1.6588E-5f, 9.724E-6f, 4.004E-6f, 2.288E-6f, 2.288E-6f, 2.288E-6f, -5.72E-7f, -2.288E-6f, -1.144E-6f, 4.004E-6f, 9.724E-6f, 1.4871999E-5f, 2.1736E-5f, 2.6311998E-5f, 2.5168E-5f, 2.0591999E-5f, 1.6588E-5f, 1.4871999E-5f, 1.43E-5f, 1.4871999E-5f, 1.2584E-5f, 5.7199995E-6f, -3.4319999E-6f, -9.152E-6f, -9.724E-6f, -6.292E-6f, -1.144E-6f, 4.576E-6f, 8.008E-6f, 8.008E-6f, 6.292E-6f, 5.72E-7f, -6.292E-6f, -1.1439999E-5f, -1.3155999E-5f, -1.0868E-5f, -2.8599998E-6f, 8.008E-6f, 1.9448E-5f, 2.6884E-5f, 2.5168E-5f, 1.4871999E-5f, 1.144E-6f, -6.8639997E-6f, -6.292E-6f, 1.144E-6f, 7.4359996E-6f, 1.1439999E-5f, 1.2584E-5f, 1.2584E-5f, 1.43E-5f, 1.7159999E-5f, 1.9448E-5f, 1.8304E-5f, 1.6588E-5f, 1.7732E-5f, 2.2307999E-5f, 2.9743998E-5f, 3.9468E-5f, 4.8619997E-5f, 5.2623996E-5f, 4.9191996E-5f, 4.4043998E-5f, 3.8896E-5f, 3.5464E-5f, 3.3176E-5f, 2.86E-5f, 2.4023999E-5f, 2.1164E-5f, 1.9448E-5f, 1.8875999E-5f, 1.9448E-5f, 2.1164E-5f, 2.4595998E-5f, 2.8027998E-5f, 2.9171999E-5f, 2.6311998E-5f, 2.3452E-5f, 2.2879998E-5f, 2.2307999E-5f, 2.002E-5f, 1.3727999E-5f, 5.7199995E-6f, -5.72E-7f, -1.144E-6f, 5.7199995E-6f, 1.43E-5f, 2.0591999E-5f, 2.4595998E-5f, 2.6311998E-5f, 2.86E-5f, 3.0316E-5f, 2.9743998E-5f, 2.7455999E-5f, 2.2879998E-5f, 1.9448E-5f, 1.5443999E-5f, 1.4871999E-5f, 2.2307999E-5f, 3.5464E-5f, 4.5759996E-5f, 4.6904E-5f, 3.8896E-5f, 2.6884E-5f, 1.7732E-5f, 1.6016E-5f, 1.8875999E-5f, 2.1736E-5f, 2.1736E-5f, 1.9448E-5f, 1.9448E-5f, 2.0591999E-5f, 2.4023999E-5f, 2.7455999E-5f, 2.7455999E-5f, 2.1736E-5f, 1.3155999E-5f, 5.7199995E-6f, 4.576E-6f, 7.4359996E-6f, 9.724E-6f, 6.8639997E-6f, -5.72E-7f, -8.008E-6f, -1.3727999E-5f, -1.3155999E-5f, -7.4359996E-6f, -2.288E-6f, 5.72E-7f, -5.72E-7f, -4.576E-6f, -1.1439999E-5f, -1.8304E-5f, -1.9448E-5f, -1.6016E-5f, -1.1439999E-5f, -6.8639997E-6f, -2.288E-6f, -5.72E-7f, -3.4319999E-6f, -9.152E-6f, -1.2584E-5f, -1.1439999E-5f, -7.4359996E-6f, -6.292E-6f, -9.724E-6f, -1.6016E-5f, -2.002E-5f, -1.7732E-5f, -1.2011999E-5f, -8.579999E-6f, -9.152E-6f, -1.3727999E-5f, -1.7732E-5f, -1.9448E-5f, -1.8875999E-5f, -1.7732E-5f, -1.6588E-5f, -1.4871999E-5f, -1.43E-5f, -1.6016E-5f, -2.002E-5f, -2.6311998E-5f, -3.146E-5f, -3.3176E-5f, -3.146E-5f, -2.9743998E-5f, -2.9743998E-5f, -3.0316E-5f, -3.0316E-5f, -3.0887997E-5f, -3.3176E-5f, -3.7179998E-5f, -4.0611998E-5f, -4.004E-5f, -3.7751997E-5f, -3.7751997E-5f, -4.1755997E-5f, -4.6332E-5f, -4.8047998E-5f, -4.7475998E-5f, -4.6904E-5f, -4.7475998E-5f, -4.5187997E-5f, -4.0611998E-5f, -3.4892E-5f, -3.0887997E-5f, -3.0887997E-5f, -3.2604E-5f, -3.4892E-5f, -3.6036E-5f, -3.3176E-5f, -2.7455999E-5f, -2.0591999E-5f, -1.7159999E-5f, -2.002E-5f, -2.9743998E-5f, -4.1755997E-5f, -4.5759996E-5f, -4.1183997E-5f, -3.3176E-5f, -2.8027998E-5f, -2.8027998E-5f, -3.2032E-5f, -3.7179998E-5f, -3.9468E-5f, -3.7751997E-5f, -3.5464E-5f, -3.2604E-5f, -2.6884E-5f, -1.8875999E-5f, -1.3155999E-5f, -1.3727999E-5f, -1.7732E-5f, -2.2879998E-5f, -2.4595998E-5f, -1.9448E-5f, -1.0295999E-5f, -5.72E-7f, 4.004E-6f, 3.4319999E-6f, -1.144E-6f, -6.292E-6f, -9.152E-6f, -8.579999E-6f, -6.292E-6f
        )));
        eegPacket = new MbtEEGPacket(channelsData);
        if(useQualities)
            eegPacket.setQualities(new ArrayList<>(Arrays.asList(ArrayUtils.toObject(MBTSignalQualityChecker.computeQualitiesForPacketNew(250,250,channelsData)))));
        eegPacketsList.add(eegPacket);
        channelsData = new ArrayList<>();

        channelsData.add(new ArrayList<>(Arrays.asList(0.0f, 0.0f, 1.7159999E-6f, 1.7159999E-6f, 1.144E-6f, 0.0f, -2.288E-6f, -2.8599998E-6f, -2.8599998E-6f, -4.004E-6f, -6.292E-6f, -7.4359996E-6f, -4.004E-6f, 5.72E-7f, 4.004E-6f, 2.288E-6f, -1.7159999E-6f, -4.576E-6f, -2.8599998E-6f, 1.7159999E-6f, 5.1479997E-6f, 4.004E-6f, 1.7159999E-6f, -1.7159999E-6f, -6.292E-6f, -9.152E-6f, -9.152E-6f, -3.4319999E-6f, 2.288E-6f, 5.7199995E-6f, 3.4319999E-6f, -5.72E-7f, -1.7159999E-6f, -5.72E-7f, 5.72E-7f, 0.0f, -2.8599998E-6f, -4.576E-6f, -4.576E-6f, -1.7159999E-6f, 5.72E-7f, -5.72E-7f, -3.4319999E-6f, -6.8639997E-6f, -8.579999E-6f, -8.008E-6f, -5.1479997E-6f, 1.144E-6f, 6.8639997E-6f, 1.0868E-5f, 1.2011999E-5f, 9.152E-6f, 5.7199995E-6f, 6.292E-6f, 9.724E-6f, 1.0868E-5f, 6.292E-6f, 3.4319999E-6f, 5.7199995E-6f, 1.43E-5f, 2.2879998E-5f, 2.7455999E-5f, 2.8027998E-5f, 2.6311998E-5f, 2.5168E-5f, 2.4023999E-5f, 2.1736E-5f, 1.8304E-5f, 1.3727999E-5f, 8.579999E-6f, 5.1479997E-6f, 2.8599998E-6f, 5.1479997E-6f, 9.152E-6f, 1.2011999E-5f, 1.1439999E-5f, 9.152E-6f, 8.579999E-6f, 1.0295999E-5f, 1.0868E-5f, 8.579999E-6f, 3.4319999E-6f, 2.288E-6f, 7.4359996E-6f, 1.6016E-5f, 2.2307999E-5f, 2.1736E-5f, 1.8875999E-5f, 1.6588E-5f, 1.3727999E-5f, 8.579999E-6f, 1.144E-6f, -2.8599998E-6f, -5.72E-7f, 5.1479997E-6f, 1.1439999E-5f, 1.3727999E-5f, 1.1439999E-5f, 8.008E-6f, 4.004E-6f, -5.72E-7f, -6.8639997E-6f, -1.1439999E-5f, -1.2011999E-5f, -9.724E-6f, -7.4359996E-6f, -8.008E-6f, -9.724E-6f, -1.1439999E-5f, -1.3155999E-5f, -1.4871999E-5f, -1.9448E-5f, -2.5168E-5f, -2.8027998E-5f, -2.4595998E-5f, -1.6588E-5f, -1.0295999E-5f, -7.4359996E-6f, -8.579999E-6f, -1.2011999E-5f, -1.4871999E-5f, -1.7732E-5f, -1.7159999E-5f, -1.3155999E-5f, -1.0295999E-5f, -9.724E-6f, -1.3727999E-5f, -1.7732E-5f, -1.8875999E-5f, -1.7159999E-5f, -1.43E-5f, -1.2584E-5f, -1.0295999E-5f, -5.1479997E-6f, 0.0f, 2.8599998E-6f, 2.8599998E-6f, 2.8599998E-6f, 4.576E-6f, 6.292E-6f, 6.8639997E-6f, 4.576E-6f, 2.8599998E-6f, 5.7199995E-6f, 1.2011999E-5f, 1.7159999E-5f, 1.7732E-5f, 1.6016E-5f, 1.2584E-5f, 8.579999E-6f, 4.576E-6f, 2.288E-6f, 3.4319999E-6f, 8.008E-6f, 1.2011999E-5f, 1.3155999E-5f, 1.0868E-5f, 1.1439999E-5f, 1.6016E-5f, 1.9448E-5f, 1.7159999E-5f, 8.008E-6f, -1.7159999E-6f, -5.7199995E-6f, -4.004E-6f, 5.72E-7f, 4.004E-6f, 5.7199995E-6f, 5.1479997E-6f, 2.8599998E-6f, 0.0f, -5.1479997E-6f, -8.579999E-6f, -9.152E-6f, -6.8639997E-6f, -1.144E-6f, 3.4319999E-6f, 4.004E-6f, 1.7159999E-6f, -1.144E-6f, -5.72E-7f, 5.72E-7f, 3.4319999E-6f, 7.4359996E-6f, 7.4359996E-6f, 5.7199995E-6f, 1.144E-6f, -5.72E-7f, 1.144E-6f, 2.8599998E-6f, 2.8599998E-6f, -5.72E-7f, -2.8599998E-6f, -5.72E-7f, 5.1479997E-6f, 8.579999E-6f, 5.7199995E-6f, 1.7159999E-6f, -1.144E-6f, -4.004E-6f, -6.8639997E-6f, -1.0295999E-5f, -1.1439999E-5f, -9.724E-6f, -8.579999E-6f, -1.0295999E-5f, -1.6016E-5f, -2.2307999E-5f, -2.6884E-5f, -2.9171999E-5f, -2.6884E-5f, -2.1164E-5f, -1.2584E-5f, -5.72E-7f, 8.579999E-6f, 1.2011999E-5f, 8.008E-6f, 5.72E-7f, -3.4319999E-6f, -4.004E-6f, -3.4319999E-6f, -4.576E-6f, -5.7199995E-6f, -4.576E-6f, -1.7159999E-6f, 5.72E-7f, -2.288E-6f, -8.579999E-6f, -1.3155999E-5f, -1.3727999E-5f, -1.2011999E-5f, -1.3727999E-5f, -1.8875999E-5f, -2.1736E-5f, -2.1164E-5f, -1.8304E-5f, -1.43E-5f, -1.0868E-5f, -8.579999E-6f, -8.579999E-6f, -8.579999E-6f, -1.1439999E-5f, -1.5443999E-5f, -1.6016E-5f, -1.2011999E-5f, -5.7199995E-6f, 0.0f, 3.4319999E-6f, 5.1479997E-6f, 4.004E-6f
        )));
        channelsData.add(new ArrayList<>(Arrays.asList(-4.004E-6f, -2.8599998E-6f, -1.7159999E-6f, -1.144E-6f, -1.144E-6f, -5.72E-7f, 0.0f, 5.72E-7f, 5.72E-7f, -1.144E-6f, -4.576E-6f, -7.4359996E-6f, -6.292E-6f, -1.7159999E-6f, 2.288E-6f, 2.288E-6f, -1.7159999E-6f, -5.7199995E-6f, -5.7199995E-6f, -5.72E-7f, 4.576E-6f, 5.1479997E-6f, 3.4319999E-6f, 0.0f, -3.4319999E-6f, -4.576E-6f, -1.7159999E-6f, 5.1479997E-6f, 1.2584E-5f, 1.5443999E-5f, 1.3727999E-5f, 8.008E-6f, 3.4319999E-6f, 2.8599998E-6f, 4.576E-6f, 6.292E-6f, 6.292E-6f, 5.1479997E-6f, 4.004E-6f, 5.7199995E-6f, 8.008E-6f, 7.4359996E-6f, 4.576E-6f, 1.144E-6f, -5.72E-7f, 2.288E-6f, 8.008E-6f, 1.43E-5f, 1.8875999E-5f, 2.1164E-5f, 2.1736E-5f, 2.002E-5f, 1.8304E-5f, 2.002E-5f, 2.4595998E-5f, 2.7455999E-5f, 2.4595998E-5f, 2.1164E-5f, 2.3452E-5f, 3.146E-5f, 4.0611998E-5f, 4.6904E-5f, 4.8047998E-5f, 4.6332E-5f, 4.3472E-5f, 4.1183997E-5f, 3.6608E-5f, 3.0887997E-5f, 2.4595998E-5f, 2.0591999E-5f, 2.1164E-5f, 2.4595998E-5f, 3.0316E-5f, 3.4892E-5f, 3.6036E-5f, 3.4892E-5f, 3.3176E-5f, 3.4319997E-5f, 3.7751997E-5f, 3.9468E-5f, 3.7179998E-5f, 3.146E-5f, 2.7455999E-5f, 2.9743998E-5f, 3.6608E-5f, 4.4043998E-5f, 4.6332E-5f, 4.5187997E-5f, 4.4043998E-5f, 4.1755997E-5f, 3.5464E-5f, 2.6311998E-5f, 1.8875999E-5f, 1.8875999E-5f, 2.4595998E-5f, 3.146E-5f, 3.3176E-5f, 2.86E-5f, 2.1736E-5f, 1.43E-5f, 7.4359996E-6f, 2.288E-6f, -5.72E-7f, -1.144E-6f, 1.7159999E-6f, 6.292E-6f, 8.008E-6f, 6.8639997E-6f, 3.4319999E-6f, 0.0f, -2.288E-6f, -4.576E-6f, -8.008E-6f, -9.724E-6f, -8.008E-6f, -2.288E-6f, 2.8599998E-6f, 4.576E-6f, 2.8599998E-6f, -1.144E-6f, -5.1479997E-6f, -8.008E-6f, -8.008E-6f, -6.292E-6f, -4.004E-6f, -1.144E-6f, -1.144E-6f, -1.7159999E-6f, -1.144E-6f, 1.144E-6f, 4.004E-6f, 5.1479997E-6f, 6.292E-6f, 9.152E-6f, 1.1439999E-5f, 1.2011999E-5f, 1.0868E-5f, 8.579999E-6f, 8.008E-6f, 8.579999E-6f, 8.579999E-6f, 7.4359996E-6f, 6.292E-6f, 9.152E-6f, 1.4871999E-5f, 1.9448E-5f, 2.002E-5f, 1.6588E-5f, 1.2584E-5f, 7.4359996E-6f, 2.288E-6f, -1.144E-6f, -1.7159999E-6f, -5.72E-7f, 1.7159999E-6f, 3.4319999E-6f, 4.004E-6f, 5.7199995E-6f, 9.724E-6f, 1.0868E-5f, 5.7199995E-6f, -6.292E-6f, -1.9448E-5f, -2.6311998E-5f, -2.5739999E-5f, -1.9448E-5f, -1.2584E-5f, -8.008E-6f, -8.579999E-6f, -1.3155999E-5f, -1.8304E-5f, -2.4023999E-5f, -2.6311998E-5f, -2.5168E-5f, -2.1164E-5f, -1.43E-5f, -9.724E-6f, -1.0295999E-5f, -1.43E-5f, -1.7159999E-5f, -1.5443999E-5f, -1.2584E-5f, -9.724E-6f, -9.724E-6f, -1.3155999E-5f, -1.8304E-5f, -2.2879998E-5f, -2.6311998E-5f, -2.7455999E-5f, -2.8027998E-5f, -2.8027998E-5f, -2.8027998E-5f, -2.8027998E-5f, -2.6884E-5f, -2.3452E-5f, -2.0591999E-5f, -2.0591999E-5f, -2.4023999E-5f, -2.6311998E-5f, -2.9171999E-5f, -3.2604E-5f, -3.5464E-5f, -3.6608E-5f, -3.5464E-5f, -3.4319997E-5f, -3.4892E-5f, -3.7179998E-5f, -4.1183997E-5f, -4.5187997E-5f, -4.8047998E-5f, -4.7475998E-5f, -4.2328E-5f, -3.3176E-5f, -1.9448E-5f, -8.008E-6f, -4.004E-6f, -9.724E-6f, -1.9448E-5f, -2.4595998E-5f, -2.4595998E-5f, -2.2307999E-5f, -2.1164E-5f, -2.002E-5f, -1.7732E-5f, -1.4871999E-5f, -1.2584E-5f, -1.4871999E-5f, -2.1164E-5f, -2.6311998E-5f, -2.7455999E-5f, -2.4595998E-5f, -2.2879998E-5f, -2.4023999E-5f, -2.4595998E-5f, -2.2307999E-5f, -1.7732E-5f, -1.2011999E-5f, -8.008E-6f, -7.4359996E-6f, -7.4359996E-6f, -6.8639997E-6f, -8.008E-6f, -1.2584E-5f, -1.7159999E-5f, -1.7732E-5f, -1.2584E-5f, -4.004E-6f, 3.4319999E-6f, 7.4359996E-6f, 7.4359996E-6f
        )));
        eegPacket = new MbtEEGPacket(channelsData);
        if(useQualities)
            eegPacket.setQualities(new ArrayList<>(Arrays.asList(ArrayUtils.toObject(MBTSignalQualityChecker.computeQualitiesForPacketNew(250,250,channelsData)))));
        eegPacketsList.add(eegPacket);
        channelsData = new ArrayList<>();

        channelsData.add(new ArrayList<>(Arrays.asList(1.7159999E-6f, -2.8599998E-6f, -8.008E-6f, -9.152E-6f, -8.008E-6f, -6.8639997E-6f, -8.579999E-6f, -1.3155999E-5f, -1.7159999E-5f, -2.0591999E-5f, -2.002E-5f, -1.6588E-5f, -1.0868E-5f, -3.4319999E-6f, 2.8599998E-6f, 5.1479997E-6f, 2.8599998E-6f, 1.144E-6f, 2.8599998E-6f, 5.1479997E-6f, 5.1479997E-6f, 3.4319999E-6f, 2.288E-6f, 5.7199995E-6f, 9.724E-6f, 1.0868E-5f, 6.292E-6f, 0.0f, -2.288E-6f, 5.72E-7f, 5.1479997E-6f, 6.8639997E-6f, 5.7199995E-6f, 5.1479997E-6f, 5.7199995E-6f, 4.576E-6f, 5.72E-7f, -2.8599998E-6f, 2.8599998E-6f, 1.5443999E-5f, 3.0316E-5f, 4.1183997E-5f, 4.2328E-5f, 3.6608E-5f, 2.86E-5f, 2.2879998E-5f, 1.9448E-5f, 1.7732E-5f, 1.7159999E-5f, 1.7159999E-5f, 1.6016E-5f, 1.3727999E-5f, 1.0868E-5f, 1.2584E-5f, 1.6016E-5f, 1.8304E-5f, 1.6016E-5f, 1.0295999E-5f, 5.1479997E-6f, 3.4319999E-6f, 5.7199995E-6f, 9.152E-6f, 6.8639997E-6f, 0.0f, -5.7199995E-6f, -6.292E-6f, -4.004E-6f, -1.7159999E-6f, 1.7159999E-6f, 4.004E-6f, 4.576E-6f, 2.8599998E-6f, -1.144E-6f, -2.288E-6f, -1.144E-6f, 0.0f, -1.144E-6f, -5.7199995E-6f, -7.4359996E-6f, -5.7199995E-6f, -3.4319999E-6f, -5.7199995E-6f, -1.4871999E-5f, -2.4023999E-5f, -2.8027998E-5f, -2.9743998E-5f, -3.0316E-5f, -2.8027998E-5f, -2.1736E-5f, -1.3155999E-5f, -3.4319999E-6f, 4.004E-6f, 6.292E-6f, 7.4359996E-6f, 7.4359996E-6f, 6.292E-6f, 4.576E-6f, 2.288E-6f, 1.144E-6f, 1.144E-6f, 1.144E-6f, 0.0f, -2.288E-6f, -4.004E-6f, -4.576E-6f, -4.576E-6f, -2.8599998E-6f, -2.288E-6f, -5.72E-7f, 4.004E-6f, 8.579999E-6f, 9.724E-6f, 7.4359996E-6f, 6.292E-6f, 8.579999E-6f, 1.1439999E-5f, 1.2584E-5f, 9.152E-6f, 6.8639997E-6f, 6.8639997E-6f, 8.579999E-6f, 1.0295999E-5f, 9.152E-6f, 7.4359996E-6f, 6.292E-6f, 5.7199995E-6f, 4.004E-6f, 0.0f, -1.144E-6f, 1.7159999E-6f, 8.579999E-6f, 1.2584E-5f, 9.724E-6f, 4.004E-6f, 0.0f, -1.7159999E-6f, -2.8599998E-6f, -4.004E-6f, -1.144E-6f, 3.4319999E-6f, 6.8639997E-6f, 6.8639997E-6f, 2.8599998E-6f, -1.7159999E-6f, -3.4319999E-6f, -3.4319999E-6f, -2.8599998E-6f, -4.004E-6f, -1.7159999E-6f, 2.8599998E-6f, 5.1479997E-6f, 5.1479997E-6f, 1.7159999E-6f, -1.144E-6f, -2.288E-6f, -2.8599998E-6f, -2.8599998E-6f, -5.1479997E-6f, -8.008E-6f, -1.2011999E-5f, -1.7159999E-5f, -1.9448E-5f, -1.9448E-5f, -1.4871999E-5f, -6.8639997E-6f, -1.7159999E-6f, -2.288E-6f, -9.724E-6f, -1.8304E-5f, -2.3452E-5f, -2.5168E-5f, -2.1736E-5f, -1.7159999E-5f, -1.1439999E-5f, -6.292E-6f, -3.4319999E-6f, -4.576E-6f, -6.292E-6f, -5.1479997E-6f, -1.144E-6f, 2.288E-6f, 3.4319999E-6f, 5.72E-7f, -4.004E-6f, -6.292E-6f, -5.7199995E-6f, -1.7159999E-6f, 1.144E-6f, 2.8599998E-6f, 2.8599998E-6f, 1.144E-6f, -5.72E-7f, -2.288E-6f, -1.144E-6f, 2.288E-6f, 6.8639997E-6f, 8.008E-6f, 4.004E-6f, 5.72E-7f, 1.7159999E-6f, 7.4359996E-6f, 1.3155999E-5f, 1.1439999E-5f, 5.7199995E-6f, 1.144E-6f, 1.144E-6f, 4.004E-6f, 6.292E-6f, 5.7199995E-6f, 4.576E-6f, 2.8599998E-6f, 1.7159999E-6f, -5.72E-7f, -1.7159999E-6f, -1.7159999E-6f, 5.72E-7f, 2.288E-6f, -5.72E-7f, -5.1479997E-6f, -6.292E-6f, -4.576E-6f, -4.004E-6f, -8.008E-6f, -1.43E-5f, -1.8875999E-5f, -1.7732E-5f, -1.0868E-5f, -4.576E-6f, -5.72E-7f, 4.004E-6f, 8.579999E-6f, 1.2011999E-5f, 1.0868E-5f, 5.7199995E-6f, 2.8599998E-6f, 2.8599998E-6f, 5.7199995E-6f, 8.008E-6f, 1.0295999E-5f, 1.4871999E-5f, 1.8304E-5f, 1.8875999E-5f, 1.4871999E-5f, 8.579999E-6f, 2.8599998E-6f, -1.7159999E-6f, -2.8599998E-6f, -2.288E-6f, 1.7159999E-6f, 1.0868E-5f
        )));
        channelsData.add(new ArrayList<>(Arrays.asList(4.576E-6f, 0.0f, -4.576E-6f, -5.7199995E-6f, -4.576E-6f, -2.8599998E-6f, -4.004E-6f, -8.008E-6f, -1.3155999E-5f, -1.7159999E-5f, -1.6588E-5f, -1.0295999E-5f, -1.7159999E-6f, 6.292E-6f, 1.1439999E-5f, 1.2584E-5f, 1.0295999E-5f, 9.152E-6f, 1.2011999E-5f, 1.5443999E-5f, 1.7159999E-5f, 1.6016E-5f, 1.3727999E-5f, 1.2584E-5f, 1.3155999E-5f, 1.2584E-5f, 9.152E-6f, 3.4319999E-6f, 0.0f, 1.7159999E-6f, 6.8639997E-6f, 1.2584E-5f, 1.4871999E-5f, 1.5443999E-5f, 1.4871999E-5f, 1.43E-5f, 1.2584E-5f, 1.2584E-5f, 1.8875999E-5f, 2.9743998E-5f, 4.1183997E-5f, 4.8619997E-5f, 4.5759996E-5f, 3.7179998E-5f, 2.8027998E-5f, 2.1736E-5f, 2.002E-5f, 2.002E-5f, 2.002E-5f, 1.9448E-5f, 1.7732E-5f, 1.43E-5f, 1.0868E-5f, 1.2011999E-5f, 1.5443999E-5f, 1.8304E-5f, 1.8875999E-5f, 1.5443999E-5f, 1.2584E-5f, 1.1439999E-5f, 1.43E-5f, 1.8304E-5f, 1.7732E-5f, 1.2011999E-5f, 7.4359996E-6f, 8.008E-6f, 1.3155999E-5f, 1.8304E-5f, 2.4023999E-5f, 2.8027998E-5f, 2.9171999E-5f, 2.7455999E-5f, 2.2879998E-5f, 2.002E-5f, 1.8875999E-5f, 1.8875999E-5f, 1.7732E-5f, 1.43E-5f, 1.2584E-5f, 1.43E-5f, 1.6588E-5f, 1.5443999E-5f, 8.579999E-6f, 0.0f, -5.7199995E-6f, -1.0868E-5f, -1.3727999E-5f, -1.2584E-5f, -8.008E-6f, -1.7159999E-6f, 5.7199995E-6f, 1.0868E-5f, 1.2584E-5f, 1.3155999E-5f, 1.2584E-5f, 9.724E-6f, 8.579999E-6f, 8.008E-6f, 8.579999E-6f, 9.152E-6f, 9.724E-6f, 8.008E-6f, 4.004E-6f, -5.72E-7f, -2.8599998E-6f, -1.144E-6f, 4.576E-6f, 8.579999E-6f, 9.152E-6f, 9.724E-6f, 1.0868E-5f, 1.0868E-5f, 1.0295999E-5f, 1.0295999E-5f, 1.2584E-5f, 1.4871999E-5f, 1.5443999E-5f, 1.3155999E-5f, 9.724E-6f, 7.4359996E-6f, 7.4359996E-6f, 9.152E-6f, 9.724E-6f, 8.008E-6f, 6.292E-6f, 3.4319999E-6f, 0.0f, -4.004E-6f, -6.292E-6f, -5.7199995E-6f, -2.288E-6f, 0.0f, -2.8599998E-6f, -6.8639997E-6f, -9.724E-6f, -1.0868E-5f, -1.2011999E-5f, -1.2584E-5f, -1.0295999E-5f, -6.8639997E-6f, -4.576E-6f, -5.7199995E-6f, -1.1439999E-5f, -1.8875999E-5f, -2.2879998E-5f, -2.3452E-5f, -2.2307999E-5f, -1.9448E-5f, -1.43E-5f, -7.4359996E-6f, -4.004E-6f, -4.004E-6f, -6.8639997E-6f, -9.152E-6f, -9.724E-6f, -7.4359996E-6f, -4.004E-6f, -1.7159999E-6f, -2.288E-6f, -6.292E-6f, -1.0868E-5f, -1.2584E-5f, -1.2011999E-5f, -7.4359996E-6f, -1.7159999E-6f, 2.288E-6f, 2.8599998E-6f, -2.288E-6f, -9.724E-6f, -1.43E-5f, -1.4871999E-5f, -1.0295999E-5f, -4.004E-6f, 0.0f, 1.7159999E-6f, 5.72E-7f, -1.7159999E-6f, -2.8599998E-6f, -1.144E-6f, 5.72E-7f, 0.0f, -3.4319999E-6f, -8.579999E-6f, -1.3727999E-5f, -1.6016E-5f, -1.6016E-5f, -1.2584E-5f, -9.724E-6f, -8.579999E-6f, -8.579999E-6f, -1.0868E-5f, -1.0868E-5f, -9.724E-6f, -8.008E-6f, -4.576E-6f, -1.144E-6f, 0.0f, -4.004E-6f, -9.724E-6f, -1.0868E-5f, -7.4359996E-6f, -1.7159999E-6f, 0.0f, -4.004E-6f, -8.579999E-6f, -8.579999E-6f, -4.004E-6f, 5.72E-7f, 5.72E-7f, -2.288E-6f, -6.8639997E-6f, -1.0868E-5f, -1.3727999E-5f, -1.5443999E-5f, -1.4871999E-5f, -1.3727999E-5f, -1.3727999E-5f, -1.7732E-5f, -2.1736E-5f, -2.1736E-5f, -1.7159999E-5f, -1.3155999E-5f, -1.4871999E-5f, -2.002E-5f, -2.4595998E-5f, -2.5168E-5f, -1.8875999E-5f, -1.2011999E-5f, -6.8639997E-6f, -1.7159999E-6f, 3.4319999E-6f, 6.8639997E-6f, 6.8639997E-6f, 2.8599998E-6f, 0.0f, -5.72E-7f, 5.72E-7f, 2.288E-6f, 4.576E-6f, 9.152E-6f, 1.3155999E-5f, 1.5443999E-5f, 1.43E-5f, 9.152E-6f, 2.288E-6f, -4.004E-6f, -6.8639997E-6f, -6.8639997E-6f, -3.4319999E-6f, 3.4319999E-6f
        )));
        eegPacket = new MbtEEGPacket(channelsData);
        if(useQualities)
            eegPacket.setQualities(new ArrayList<>(Arrays.asList(ArrayUtils.toObject(MBTSignalQualityChecker.computeQualitiesForPacketNew(250,250,channelsData)))));
        eegPacketsList.add(eegPacket);
        channelsData = new ArrayList<>();

        channelsData.add(new ArrayList<>(Arrays.asList(1.9448E-5f, 2.4023999E-5f, 2.2879998E-5f, 1.8875999E-5f, 1.5443999E-5f, 1.0868E-5f, 7.4359996E-6f, 2.8599998E-6f, -5.72E-7f, -2.8599998E-6f, -5.7199995E-6f, -9.724E-6f, -1.43E-5f, -1.7732E-5f, -1.7159999E-5f, -1.3155999E-5f, -9.724E-6f, -9.152E-6f, -1.0868E-5f, -9.724E-6f, -6.292E-6f, -4.004E-6f, -3.4319999E-6f, -2.288E-6f, 1.144E-6f, 4.576E-6f, 5.7199995E-6f, 2.8599998E-6f, -1.144E-6f, -3.4319999E-6f, -4.004E-6f, -4.576E-6f, -8.008E-6f, -1.2011999E-5f, -1.0295999E-5f, -4.004E-6f, 2.8599998E-6f, 4.576E-6f, -1.144E-6f, -8.579999E-6f, -1.2584E-5f, -1.1439999E-5f, -9.152E-6f, -8.008E-6f, -8.579999E-6f, -9.152E-6f, -8.579999E-6f, -8.008E-6f, -9.724E-6f, -1.0295999E-5f, -9.724E-6f, -7.4359996E-6f, -5.7199995E-6f, -6.8639997E-6f, -8.008E-6f, -1.0295999E-5f, -1.2584E-5f, -1.4871999E-5f, -1.5443999E-5f, -1.1439999E-5f, -5.1479997E-6f, 5.72E-7f, 5.7199995E-6f, 7.4359996E-6f, 8.008E-6f, 6.8639997E-6f, 3.4319999E-6f, -3.4319999E-6f, -1.0295999E-5f, -6.8639997E-6f, 4.576E-6f, 1.5443999E-5f, 1.8875999E-5f, 1.7159999E-5f, 1.3727999E-5f, 1.0295999E-5f, 9.152E-6f, 9.152E-6f, 1.0295999E-5f, 1.43E-5f, 1.8875999E-5f, 2.1164E-5f, 1.7159999E-5f, 1.0868E-5f, 7.4359996E-6f, 6.8639997E-6f, 7.4359996E-6f, 6.8639997E-6f, 5.7199995E-6f, 5.1479997E-6f, 3.4319999E-6f, 2.288E-6f, 2.288E-6f, 2.8599998E-6f, 4.576E-6f, 6.292E-6f, 5.1479997E-6f, 2.288E-6f, -1.144E-6f, -1.144E-6f, 1.7159999E-6f, 5.1479997E-6f, 6.292E-6f, 3.4319999E-6f, -1.144E-6f, -2.288E-6f, 1.7159999E-6f, 7.4359996E-6f, 1.2011999E-5f, 1.3727999E-5f, 1.2011999E-5f, 8.579999E-6f, 4.576E-6f, -2.8599998E-6f, -9.724E-6f, -1.2584E-5f, -1.0295999E-5f, -5.1479997E-6f, -1.144E-6f, -1.144E-6f, -2.288E-6f, -1.7159999E-6f, -3.4319999E-6f, -8.008E-6f, -1.2011999E-5f, -1.3727999E-5f, -1.2011999E-5f, -1.0868E-5f, -1.3727999E-5f, -1.8304E-5f, -2.0591999E-5f, -1.9448E-5f, -1.7732E-5f, -1.43E-5f, -8.579999E-6f, -3.4319999E-6f, -2.8599998E-6f, -6.8639997E-6f, -1.3155999E-5f, -1.3727999E-5f, -9.152E-6f, -5.1479997E-6f, -7.4359996E-6f, -1.1439999E-5f, -9.724E-6f, -5.1479997E-6f, -2.288E-6f, -1.7159999E-6f, -2.8599998E-6f, 0.0f, 7.4359996E-6f, 1.2584E-5f, 1.1439999E-5f, 6.292E-6f, 4.576E-6f, 6.8639997E-6f, 8.579999E-6f, 6.8639997E-6f, 2.288E-6f, -1.144E-6f, -1.7159999E-6f, 0.0f, 2.288E-6f, 2.8599998E-6f, 4.004E-6f, 4.004E-6f, 2.288E-6f, -2.288E-6f, -9.152E-6f, -1.43E-5f, -1.6016E-5f, -1.3155999E-5f, -7.4359996E-6f, -3.4319999E-6f, -5.72E-7f, 0.0f, 0.0f, 3.4319999E-6f, 8.008E-6f, 1.2584E-5f, 1.3727999E-5f, 1.0868E-5f, 5.7199995E-6f, 5.72E-7f, 0.0f, 4.004E-6f, 6.8639997E-6f, 5.7199995E-6f, 2.288E-6f, 1.7159999E-6f, 7.4359996E-6f, 1.43E-5f, 1.6016E-5f, 9.724E-6f, 1.144E-6f, -4.576E-6f, -6.292E-6f, -5.7199995E-6f, -6.8639997E-6f, -6.8639997E-6f, -3.4319999E-6f, 0.0f, 1.144E-6f, -5.72E-7f, 0.0f, 4.576E-6f, 1.0868E-5f, 1.5443999E-5f, 1.2584E-5f, 6.292E-6f, 1.144E-6f, -1.144E-6f, -2.8599998E-6f, -4.576E-6f, -6.292E-6f, -8.008E-6f, -9.152E-6f, -1.0295999E-5f, -1.2011999E-5f, -1.3155999E-5f, -1.2584E-5f, -1.1439999E-5f, -9.724E-6f, -1.0868E-5f, -1.1439999E-5f, -9.724E-6f, -6.8639997E-6f, -2.8599998E-6f, -1.144E-6f, -1.144E-6f, -5.72E-7f, -2.288E-6f, -4.576E-6f, -7.4359996E-6f, -7.4359996E-6f, -3.4319999E-6f, 1.144E-6f, 4.004E-6f, 1.7159999E-6f, -3.4319999E-6f, -8.579999E-6f, -1.0868E-5f, -9.152E-6f, -6.292E-6f, -4.004E-6f, -1.7159999E-6f, -1.7159999E-6f, -4.576E-6f, -1.1439999E-5f, -1.6588E-5f
        )));
        channelsData.add(new ArrayList<>(Arrays.asList(1.0868E-5f, 1.5443999E-5f, 1.7732E-5f, 1.7159999E-5f, 1.4871999E-5f, 1.2584E-5f, 1.0868E-5f, 8.008E-6f, 5.1479997E-6f, 2.288E-6f, -2.8599998E-6f, -8.579999E-6f, -1.3727999E-5f, -1.7732E-5f, -1.7732E-5f, -1.4871999E-5f, -1.1439999E-5f, -1.0868E-5f, -1.2584E-5f, -1.1439999E-5f, -6.8639997E-6f, -2.288E-6f, 0.0f, 5.72E-7f, 5.72E-7f, 0.0f, -1.7159999E-6f, -2.8599998E-6f, -4.576E-6f, -5.7199995E-6f, -6.292E-6f, -6.292E-6f, -8.579999E-6f, -1.0868E-5f, -7.4359996E-6f, 1.144E-6f, 9.152E-6f, 1.1439999E-5f, 4.576E-6f, -7.4359996E-6f, -1.6016E-5f, -1.7159999E-5f, -1.3727999E-5f, -8.579999E-6f, -5.7199995E-6f, -2.8599998E-6f, 0.0f, 2.288E-6f, 2.8599998E-6f, 2.288E-6f, 2.288E-6f, 4.004E-6f, 6.8639997E-6f, 8.579999E-6f, 8.579999E-6f, 7.4359996E-6f, 5.1479997E-6f, 3.4319999E-6f, 2.8599998E-6f, 6.8639997E-6f, 1.3155999E-5f, 2.0591999E-5f, 2.6884E-5f, 2.9171999E-5f, 2.8027998E-5f, 2.5739999E-5f, 2.1164E-5f, 1.43E-5f, 9.152E-6f, 1.2011999E-5f, 2.4023999E-5f, 3.4892E-5f, 4.0611998E-5f, 3.9468E-5f, 3.3747998E-5f, 2.7455999E-5f, 2.4023999E-5f, 2.4595998E-5f, 2.86E-5f, 3.4892E-5f, 4.1755997E-5f, 4.4615997E-5f, 4.0611998E-5f, 3.2032E-5f, 2.4595998E-5f, 1.9448E-5f, 1.5443999E-5f, 1.3727999E-5f, 1.3727999E-5f, 1.3155999E-5f, 1.1439999E-5f, 9.724E-6f, 1.0295999E-5f, 1.1439999E-5f, 1.43E-5f, 1.7159999E-5f, 1.7732E-5f, 1.5443999E-5f, 1.3155999E-5f, 1.1439999E-5f, 1.1439999E-5f, 1.43E-5f, 1.6016E-5f, 1.2011999E-5f, 3.4319999E-6f, -3.4319999E-6f, -5.7199995E-6f, -2.8599998E-6f, 2.288E-6f, 4.576E-6f, 5.72E-7f, -5.1479997E-6f, -9.724E-6f, -1.3727999E-5f, -1.6588E-5f, -1.7732E-5f, -1.6588E-5f, -1.3727999E-5f, -1.1439999E-5f, -1.1439999E-5f, -1.2584E-5f, -1.3727999E-5f, -1.8304E-5f, -2.4595998E-5f, -2.9171999E-5f, -2.9171999E-5f, -2.6884E-5f, -2.4595998E-5f, -2.7455999E-5f, -3.3747998E-5f, -3.7751997E-5f, -3.7751997E-5f, -3.4892E-5f, -2.9171999E-5f, -2.1164E-5f, -1.4871999E-5f, -1.3727999E-5f, -1.8304E-5f, -2.5739999E-5f, -2.9171999E-5f, -2.8027998E-5f, -2.6311998E-5f, -2.7455999E-5f, -2.9171999E-5f, -2.6311998E-5f, -2.0591999E-5f, -1.5443999E-5f, -1.1439999E-5f, -8.579999E-6f, -4.004E-6f, 2.8599998E-6f, 6.8639997E-6f, 5.7199995E-6f, 0.0f, -4.004E-6f, -6.292E-6f, -6.292E-6f, -5.1479997E-6f, -5.1479997E-6f, -6.292E-6f, -8.008E-6f, -9.152E-6f, -9.724E-6f, -1.0295999E-5f, -1.0868E-5f, -1.0868E-5f, -1.2011999E-5f, -1.4871999E-5f, -2.002E-5f, -2.4595998E-5f, -2.5739999E-5f, -2.2307999E-5f, -1.4871999E-5f, -9.152E-6f, -5.1479997E-6f, -2.8599998E-6f, -2.288E-6f, 1.7159999E-6f, 8.008E-6f, 1.3155999E-5f, 1.4871999E-5f, 1.3155999E-5f, 9.724E-6f, 6.292E-6f, 5.1479997E-6f, 7.4359996E-6f, 8.008E-6f, 6.8639997E-6f, 4.004E-6f, 4.004E-6f, 9.152E-6f, 1.6016E-5f, 1.9448E-5f, 1.6588E-5f, 9.724E-6f, 3.4319999E-6f, 1.144E-6f, 1.7159999E-6f, 2.8599998E-6f, 5.7199995E-6f, 1.1439999E-5f, 1.6588E-5f, 1.8304E-5f, 1.7159999E-5f, 1.6016E-5f, 1.8875999E-5f, 2.4595998E-5f, 2.9171999E-5f, 2.5739999E-5f, 1.7159999E-5f, 1.0295999E-5f, 6.8639997E-6f, 5.7199995E-6f, 5.7199995E-6f, 4.004E-6f, 1.7159999E-6f, -5.72E-7f, -2.288E-6f, -5.1479997E-6f, -8.579999E-6f, -1.2011999E-5f, -1.43E-5f, -1.3155999E-5f, -1.0295999E-5f, -7.4359996E-6f, -2.8599998E-6f, 1.7159999E-6f, 4.576E-6f, 4.576E-6f, 2.8599998E-6f, 1.7159999E-6f, 5.72E-7f, 0.0f, 0.0f, 5.72E-7f, 2.288E-6f, 4.004E-6f, 5.1479997E-6f, 3.4319999E-6f, -5.72E-7f, -6.8639997E-6f, -1.2011999E-5f, -1.2584E-5f, -1.0295999E-5f, -8.008E-6f, -6.8639997E-6f, -8.008E-6f, -1.2011999E-5f, -1.8875999E-5f, -2.4023999E-5f
        )));
        eegPacket = new MbtEEGPacket(channelsData);
        if(useQualities)
            eegPacket.setQualities(new ArrayList<>(Arrays.asList(ArrayUtils.toObject(MBTSignalQualityChecker.computeQualitiesForPacketNew(250,250,channelsData)))));
        eegPacketsList.add(eegPacket);
        return eegPacketsList;
    }

    private ArrayList<MbtEEGPacket> getEEGDataSet4(boolean useQualities){
        ArrayList<MbtEEGPacket> eegPacketsList = new ArrayList<>();
        ArrayList<ArrayList<Float>> channelsData = new ArrayList<>();

        channelsData.add(new ArrayList<>(Arrays.asList(-1.3155999E-5f, -3.4319999E-6f, 6.292E-6f, 9.724E-6f, 9.152E-6f, 6.8639997E-6f, 3.4319999E-6f, 1.144E-6f, -3.4319999E-6f, -8.008E-6f, -8.008E-6f, -2.8599998E-6f, 4.576E-6f, 8.008E-6f, 8.579999E-6f, 8.579999E-6f, 6.8639997E-6f, 4.576E-6f, 5.72E-7f, -1.144E-6f, -5.72E-7f, 0.0f, 0.0f, -1.7159999E-6f, -2.8599998E-6f, 1.144E-6f, 7.4359996E-6f, 1.3155999E-5f, 1.3155999E-5f, 9.724E-6f, 6.8639997E-6f, 5.1479997E-6f, 4.004E-6f, 2.288E-6f, 1.7159999E-6f, 5.7199995E-6f, 9.724E-6f, 1.0868E-5f, 5.1479997E-6f, -2.8599998E-6f, -8.579999E-6f, -1.0295999E-5f, -8.579999E-6f, -9.724E-6f, -1.1439999E-5f, -1.0295999E-5f, -7.4359996E-6f, -4.004E-6f, -1.7159999E-6f, -2.288E-6f, -2.288E-6f, -1.144E-6f, 1.144E-6f, 1.7159999E-6f, 5.72E-7f, -5.72E-7f, 1.144E-6f, 6.8639997E-6f, 1.2011999E-5f, 1.3727999E-5f, 1.3727999E-5f, 1.2011999E-5f, 1.0295999E-5f, 8.579999E-6f, 8.008E-6f, 8.579999E-6f, 9.724E-6f, 8.579999E-6f, 4.004E-6f, -1.7159999E-6f, -3.4319999E-6f, 1.144E-6f, 1.1439999E-5f, 1.8304E-5f, 1.9448E-5f, 1.8304E-5f, 1.6016E-5f, 1.43E-5f, 1.0868E-5f, 7.4359996E-6f, 7.4359996E-6f, 9.152E-6f, 1.2584E-5f, 1.3727999E-5f, 1.3155999E-5f, 1.3155999E-5f, 1.43E-5f, 1.3727999E-5f, 1.1439999E-5f, 1.0295999E-5f, 1.2011999E-5f, 1.3155999E-5f, 1.3155999E-5f, 1.0295999E-5f, 6.292E-6f, 5.7199995E-6f, 7.4359996E-6f, 9.152E-6f, 7.4359996E-6f, 3.4319999E-6f, 5.72E-7f, 5.72E-7f, 1.7159999E-6f, 0.0f, -4.004E-6f, -5.7199995E-6f, -4.004E-6f, 1.144E-6f, 7.4359996E-6f, 1.0868E-5f, 1.0295999E-5f, 6.292E-6f, 1.7159999E-6f, -1.7159999E-6f, -4.004E-6f, -2.8599998E-6f, -5.72E-7f, -5.72E-7f, -3.4319999E-6f, -8.579999E-6f, -1.1439999E-5f, -1.2584E-5f, -1.3727999E-5f, -1.6016E-5f, -1.9448E-5f, -2.002E-5f, -1.8875999E-5f, -1.6588E-5f, -1.5443999E-5f, -1.4871999E-5f, -1.4871999E-5f, -1.3727999E-5f, -1.2011999E-5f, -1.0295999E-5f, -9.152E-6f, -8.008E-6f, -8.008E-6f, -7.4359996E-6f, -6.292E-6f, -2.8599998E-6f, 1.7159999E-6f, 4.004E-6f, 2.288E-6f, -3.4319999E-6f, -1.0295999E-5f, -1.3727999E-5f, -1.3155999E-5f, -9.724E-6f, -6.8639997E-6f, -5.7199995E-6f, -5.7199995E-6f, -7.4359996E-6f, -9.152E-6f, -1.0295999E-5f, -1.1439999E-5f, -9.152E-6f, -5.7199995E-6f, -4.576E-6f, -6.292E-6f, -1.0295999E-5f, -1.1439999E-5f, -9.724E-6f, -5.1479997E-6f, -3.4319999E-6f, -6.8639997E-6f, -9.152E-6f, -6.8639997E-6f, -2.8599998E-6f, -1.144E-6f, -2.288E-6f, 1.144E-6f, 1.0295999E-5f, 2.002E-5f, 2.4595998E-5f, 2.0591999E-5f, 1.3727999E-5f, 9.152E-6f, 6.292E-6f, 3.4319999E-6f, -1.144E-6f, -1.144E-6f, 2.8599998E-6f, 9.152E-6f, 1.3155999E-5f, 1.2011999E-5f, 9.724E-6f, 8.579999E-6f, 7.4359996E-6f, 6.8639997E-6f, 6.8639997E-6f, 9.724E-6f, 1.3727999E-5f, 1.5443999E-5f, 1.5443999E-5f, 1.43E-5f, 1.4871999E-5f, 1.6588E-5f, 1.8304E-5f, 1.8304E-5f, 1.6016E-5f, 1.43E-5f, 1.3727999E-5f, 1.3727999E-5f, 1.3155999E-5f, 1.0295999E-5f, 6.8639997E-6f, 5.7199995E-6f, 8.579999E-6f, 1.0295999E-5f, 8.579999E-6f, 4.576E-6f, 5.72E-7f, -5.1479997E-6f, -1.0295999E-5f, -1.4871999E-5f, -1.6588E-5f, -1.5443999E-5f, -1.2011999E-5f, -9.152E-6f, -1.2011999E-5f, -1.6588E-5f, -1.8304E-5f, -1.6588E-5f, -1.43E-5f, -1.5443999E-5f, -1.6588E-5f, -1.7159999E-5f, -1.8875999E-5f, -2.3452E-5f, -2.9743998E-5f, -3.2604E-5f, -3.0316E-5f, -2.5739999E-5f, -2.2307999E-5f, -2.2879998E-5f, -2.4023999E-5f, -2.2879998E-5f, -1.7732E-5f, -1.1439999E-5f, -9.724E-6f, -9.724E-6f, -1.0295999E-5f, -1.3155999E-5f, -1.6016E-5f, -1.8304E-5f, -1.7732E-5f, -1.6016E-5f, -1.4871999E-5f, -1.6016E-5f, -2.1736E-5f
        )));
        channelsData.add(new ArrayList<>(Arrays.asList(-2.0591999E-5f, -9.724E-6f, 1.144E-6f, 6.8639997E-6f, 7.4359996E-6f, 5.1479997E-6f, 1.7159999E-6f, -1.144E-6f, -5.1479997E-6f, -1.1439999E-5f, -1.4871999E-5f, -1.2584E-5f, -6.292E-6f, -1.144E-6f, 1.7159999E-6f, 2.8599998E-6f, 2.288E-6f, 0.0f, -4.004E-6f, -8.008E-6f, -9.152E-6f, -9.724E-6f, -1.0295999E-5f, -1.0295999E-5f, -8.579999E-6f, -2.8599998E-6f, 4.004E-6f, 8.579999E-6f, 8.008E-6f, 4.576E-6f, 1.7159999E-6f, 1.144E-6f, 2.8599998E-6f, 5.1479997E-6f, 8.008E-6f, 1.0868E-5f, 1.2011999E-5f, 9.724E-6f, 4.576E-6f, -1.7159999E-6f, -5.7199995E-6f, -6.8639997E-6f, -6.292E-6f, -7.4359996E-6f, -8.579999E-6f, -5.7199995E-6f, 0.0f, 6.8639997E-6f, 1.1439999E-5f, 1.0868E-5f, 8.008E-6f, 5.7199995E-6f, 6.8639997E-6f, 9.152E-6f, 1.0295999E-5f, 1.2011999E-5f, 1.5443999E-5f, 2.1736E-5f, 2.6311998E-5f, 2.6884E-5f, 2.5168E-5f, 2.3452E-5f, 2.2307999E-5f, 2.1164E-5f, 1.8304E-5f, 1.5443999E-5f, 1.3155999E-5f, 1.0295999E-5f, 8.008E-6f, 5.1479997E-6f, 6.292E-6f, 1.2011999E-5f, 2.1736E-5f, 2.9171999E-5f, 3.0316E-5f, 2.9171999E-5f, 2.8027998E-5f, 2.6884E-5f, 2.4595998E-5f, 2.1164E-5f, 1.9448E-5f, 1.8875999E-5f, 2.0591999E-5f, 2.4023999E-5f, 2.6311998E-5f, 2.6884E-5f, 2.5739999E-5f, 2.3452E-5f, 2.1736E-5f, 2.2307999E-5f, 2.4595998E-5f, 2.4595998E-5f, 2.1164E-5f, 1.4871999E-5f, 9.152E-6f, 7.4359996E-6f, 1.0295999E-5f, 1.3155999E-5f, 1.2584E-5f, 8.008E-6f, 2.288E-6f, -1.144E-6f, -2.8599998E-6f, -5.7199995E-6f, -1.0295999E-5f, -1.3155999E-5f, -1.2011999E-5f, -6.8639997E-6f, 0.0f, 4.576E-6f, 4.576E-6f, 5.72E-7f, -5.1479997E-6f, -9.724E-6f, -1.3727999E-5f, -1.3727999E-5f, -1.2011999E-5f, -1.0295999E-5f, -1.1439999E-5f, -1.5443999E-5f, -1.8304E-5f, -2.0591999E-5f, -2.2307999E-5f, -2.4023999E-5f, -2.6311998E-5f, -2.8027998E-5f, -2.9743998E-5f, -3.0887997E-5f, -3.0316E-5f, -3.0316E-5f, -3.0887997E-5f, -3.0887997E-5f, -2.9743998E-5f, -2.6884E-5f, -2.4595998E-5f, -2.3452E-5f, -2.4595998E-5f, -2.7455999E-5f, -2.86E-5f, -2.6884E-5f, -2.2879998E-5f, -1.9448E-5f, -1.8875999E-5f, -2.2879998E-5f, -2.86E-5f, -3.2032E-5f, -3.0887997E-5f, -2.5168E-5f, -1.8875999E-5f, -1.4871999E-5f, -1.6016E-5f, -2.1164E-5f, -2.6884E-5f, -3.0887997E-5f, -3.2032E-5f, -2.9743998E-5f, -2.6311998E-5f, -2.3452E-5f, -2.4023999E-5f, -2.5168E-5f, -2.5739999E-5f, -2.2307999E-5f, -1.8304E-5f, -1.8304E-5f, -2.4023999E-5f, -3.0316E-5f, -3.146E-5f, -2.86E-5f, -2.6311998E-5f, -2.5168E-5f, -1.8875999E-5f, -9.724E-6f, -5.72E-7f, 2.288E-6f, -1.7159999E-6f, -8.008E-6f, -1.2011999E-5f, -1.2011999E-5f, -1.2011999E-5f, -1.3155999E-5f, -1.3155999E-5f, -9.724E-6f, -5.7199995E-6f, -2.8599998E-6f, -3.4319999E-6f, -5.7199995E-6f, -8.008E-6f, -9.724E-6f, -1.0295999E-5f, -1.0295999E-5f, -8.008E-6f, -5.7199995E-6f, -5.1479997E-6f, -4.576E-6f, -4.576E-6f, -4.004E-6f, -1.7159999E-6f, 2.8599998E-6f, 8.008E-6f, 1.0868E-5f, 1.2011999E-5f, 1.2584E-5f, 1.2584E-5f, 1.3727999E-5f, 1.2584E-5f, 9.152E-6f, 8.008E-6f, 9.724E-6f, 1.3155999E-5f, 1.3727999E-5f, 1.3155999E-5f, 1.0295999E-5f, 4.576E-6f, -2.288E-6f, -9.152E-6f, -1.4871999E-5f, -1.4871999E-5f, -1.0868E-5f, -5.7199995E-6f, -4.004E-6f, -6.292E-6f, -7.4359996E-6f, -5.1479997E-6f, -1.144E-6f, 1.7159999E-6f, 1.144E-6f, -5.72E-7f, -3.4319999E-6f, -6.292E-6f, -9.724E-6f, -9.724E-6f, -4.576E-6f, 2.288E-6f, 6.292E-6f, 5.7199995E-6f, 2.288E-6f, 0.0f, 4.004E-6f, 9.724E-6f, 1.3155999E-5f, 1.43E-5f, 1.3727999E-5f, 1.1439999E-5f, 9.152E-6f, 8.579999E-6f, 8.579999E-6f, 9.152E-6f, 1.0868E-5f, 1.2011999E-5f, 1.2011999E-5f
        )));
        MbtEEGPacket eegPacket = new MbtEEGPacket(channelsData);
        if(useQualities)
            eegPacket.setQualities(new ArrayList<>(Arrays.asList(ArrayUtils.toObject(MBTSignalQualityChecker.computeQualitiesForPacketNew(250,250,channelsData)))));
        eegPacketsList.add(eegPacket);
        channelsData = new ArrayList<>();

        channelsData.add(new ArrayList<>(Arrays.asList(-2.6884E-5f, -2.9171999E-5f, -2.86E-5f, -2.5168E-5f, -2.2879998E-5f, -2.1736E-5f, -2.0591999E-5f, -1.9448E-5f, -1.8875999E-5f, -2.002E-5f, -2.002E-5f, -1.6588E-5f, -1.3155999E-5f, -1.0295999E-5f, -9.152E-6f, -5.7199995E-6f, 0.0f, 6.292E-6f, 1.0295999E-5f, 9.724E-6f, 7.4359996E-6f, 6.8639997E-6f, 8.579999E-6f, 1.0868E-5f, 9.724E-6f, 7.4359996E-6f, 6.8639997E-6f, 6.8639997E-6f, 8.008E-6f, 6.8639997E-6f, 5.1479997E-6f, 4.576E-6f, 3.4319999E-6f, 4.004E-6f, 2.288E-6f, 5.72E-7f, 5.72E-7f, 2.8599998E-6f, 5.1479997E-6f, 4.576E-6f, 2.288E-6f, 1.7159999E-6f, 5.1479997E-6f, 1.2584E-5f, 1.9448E-5f, 2.1736E-5f, 2.0591999E-5f, 1.7159999E-5f, 1.4871999E-5f, 1.3727999E-5f, 1.6588E-5f, 2.4595998E-5f, 3.2604E-5f, 3.8323997E-5f, 3.7179998E-5f, 3.146E-5f, 2.9743998E-5f, 3.2032E-5f, 3.7751997E-5f, 4.1183997E-5f, 3.8896E-5f, 3.2604E-5f, 2.7455999E-5f, 2.5739999E-5f, 2.4023999E-5f, 1.8875999E-5f, 1.2011999E-5f, 5.1479997E-6f, 1.144E-6f, -1.7159999E-6f, -4.004E-6f, -4.576E-6f, -4.004E-6f, -2.8599998E-6f, -2.8599998E-6f, -4.576E-6f, -5.7199995E-6f, -6.8639997E-6f, -6.8639997E-6f, -1.0295999E-5f, -1.5443999E-5f, -1.43E-5f, -7.4359996E-6f, -5.72E-7f, 1.7159999E-6f, 1.144E-6f, 5.72E-7f, -5.72E-7f, -1.144E-6f, -2.288E-6f, -4.004E-6f, -2.288E-6f, 5.72E-7f, 2.8599998E-6f, 1.144E-6f, -3.4319999E-6f, -5.7199995E-6f, -4.576E-6f, -1.144E-6f, 0.0f, -2.288E-6f, -5.1479997E-6f, -8.008E-6f, -8.008E-6f, -6.292E-6f, -4.576E-6f, -2.8599998E-6f, -3.4319999E-6f, -5.1479997E-6f, -6.8639997E-6f, -7.4359996E-6f, -5.7199995E-6f, -5.1479997E-6f, -6.8639997E-6f, -1.0868E-5f, -1.2584E-5f, -9.152E-6f, -4.004E-6f, -2.288E-6f, -4.004E-6f, -6.292E-6f, -4.004E-6f, -5.72E-7f, 2.8599998E-6f, 3.4319999E-6f, 1.7159999E-6f, 5.72E-7f, 2.288E-6f, 6.292E-6f, 8.008E-6f, 8.008E-6f, 8.008E-6f, 9.724E-6f, 1.2011999E-5f, 1.3727999E-5f, 1.2584E-5f, 9.152E-6f, 6.292E-6f, 6.8639997E-6f, 8.008E-6f, 9.152E-6f, 1.1439999E-5f, 1.3727999E-5f, 1.2584E-5f, 5.7199995E-6f, -4.576E-6f, -1.0295999E-5f, -9.724E-6f, -5.7199995E-6f, -4.004E-6f, -8.008E-6f, -1.2011999E-5f, -1.43E-5f, -1.2584E-5f, -8.579999E-6f, -3.4319999E-6f, 1.7159999E-6f, 4.004E-6f, 1.144E-6f, -5.7199995E-6f, -1.3155999E-5f, -1.5443999E-5f, -1.2584E-5f, -8.579999E-6f, -6.8639997E-6f, -6.8639997E-6f, -6.292E-6f, -5.1479997E-6f, -4.576E-6f, -5.7199995E-6f, -9.152E-6f, -9.152E-6f, -4.004E-6f, 4.576E-6f, 1.0868E-5f, 1.1439999E-5f, 1.0295999E-5f, 8.579999E-6f, 6.8639997E-6f, 5.1479997E-6f, 1.144E-6f, -2.288E-6f, -1.7159999E-6f, 4.004E-6f, 1.2011999E-5f, 1.9448E-5f, 2.6311998E-5f, 3.0316E-5f, 2.86E-5f, 2.2307999E-5f, 1.4871999E-5f, 1.2011999E-5f, 1.43E-5f, 1.7159999E-5f, 1.7159999E-5f, 1.2584E-5f, 8.579999E-6f, 9.152E-6f, 1.2584E-5f, 1.3155999E-5f, 8.579999E-6f, 4.004E-6f, 2.8599998E-6f, 4.576E-6f, 6.8639997E-6f, 6.8639997E-6f, 6.8639997E-6f, 9.152E-6f, 1.2584E-5f, 1.43E-5f, 9.724E-6f, 4.004E-6f, 0.0f, -1.7159999E-6f, -4.004E-6f, -9.152E-6f, -1.3727999E-5f, -1.5443999E-5f, -1.3155999E-5f, -1.0868E-5f, -1.2584E-5f, -1.7732E-5f, -2.4023999E-5f, -2.86E-5f, -2.9743998E-5f, -2.8027998E-5f, -2.4023999E-5f, -2.1164E-5f, -2.0591999E-5f, -2.0591999E-5f, -2.0591999E-5f, -1.9448E-5f, -1.6016E-5f, -1.2011999E-5f, -8.008E-6f, -4.576E-6f, 5.72E-7f, 5.1479997E-6f, 8.579999E-6f, 9.724E-6f, 7.4359996E-6f, 4.004E-6f, 2.8599998E-6f, 3.4319999E-6f, 2.288E-6f, -2.8599998E-6f, -8.008E-6f, -1.0295999E-5f, -1.0295999E-5f, -8.008E-6f
        )));
        channelsData.add(new ArrayList<>(Arrays.asList(1.1439999E-5f, 1.0295999E-5f, 9.724E-6f, 1.1439999E-5f, 1.3727999E-5f, 1.7159999E-5f, 1.8875999E-5f, 1.8875999E-5f, 1.8875999E-5f, 1.7732E-5f, 1.7732E-5f, 2.1164E-5f, 2.4023999E-5f, 2.6884E-5f, 2.86E-5f, 3.3176E-5f, 3.8896E-5f, 4.4043998E-5f, 4.6904E-5f, 4.5759996E-5f, 4.1755997E-5f, 3.8896E-5f, 3.8323997E-5f, 3.9468E-5f, 3.7751997E-5f, 3.4892E-5f, 3.2032E-5f, 3.0316E-5f, 3.0316E-5f, 3.0316E-5f, 2.9171999E-5f, 2.8027998E-5f, 2.6884E-5f, 2.8027998E-5f, 2.86E-5f, 2.6884E-5f, 2.4595998E-5f, 2.2307999E-5f, 2.1164E-5f, 2.002E-5f, 1.8304E-5f, 1.8304E-5f, 2.1164E-5f, 2.6884E-5f, 3.146E-5f, 3.2604E-5f, 3.0887997E-5f, 2.8027998E-5f, 2.4595998E-5f, 2.2879998E-5f, 2.4023999E-5f, 2.8027998E-5f, 3.2604E-5f, 3.4892E-5f, 3.0887997E-5f, 2.1736E-5f, 1.4871999E-5f, 1.2011999E-5f, 1.4871999E-5f, 1.8304E-5f, 1.7732E-5f, 1.3727999E-5f, 8.579999E-6f, 5.1479997E-6f, 3.4319999E-6f, 0.0f, -4.576E-6f, -9.724E-6f, -1.3155999E-5f, -1.6016E-5f, -1.8875999E-5f, -2.0591999E-5f, -2.2307999E-5f, -2.4595998E-5f, -2.6311998E-5f, -2.8027998E-5f, -2.9171999E-5f, -2.9743998E-5f, -2.9743998E-5f, -3.146E-5f, -3.4319997E-5f, -3.2032E-5f, -2.5739999E-5f, -2.002E-5f, -1.8875999E-5f, -2.1164E-5f, -2.5739999E-5f, -2.9171999E-5f, -3.0316E-5f, -3.0316E-5f, -3.0887997E-5f, -3.0316E-5f, -2.8027998E-5f, -2.6884E-5f, -2.7455999E-5f, -3.0887997E-5f, -3.2604E-5f, -3.146E-5f, -2.7455999E-5f, -2.5168E-5f, -2.6311998E-5f, -2.9171999E-5f, -3.2604E-5f, -3.3176E-5f, -3.2032E-5f, -3.0316E-5f, -2.86E-5f, -2.6884E-5f, -2.5168E-5f, -2.3452E-5f, -2.2307999E-5f, -2.1736E-5f, -2.2307999E-5f, -2.2879998E-5f, -2.2879998E-5f, -2.2307999E-5f, -1.8304E-5f, -1.43E-5f, -1.43E-5f, -1.7732E-5f, -2.1736E-5f, -2.1164E-5f, -1.7732E-5f, -1.4871999E-5f, -1.4871999E-5f, -1.8875999E-5f, -2.4023999E-5f, -2.5168E-5f, -2.1164E-5f, -1.6016E-5f, -1.1439999E-5f, -6.8639997E-6f, -2.288E-6f, 2.288E-6f, 5.1479997E-6f, 3.4319999E-6f, -2.288E-6f, -8.008E-6f, -1.1439999E-5f, -1.0868E-5f, -8.579999E-6f, -4.576E-6f, -1.7159999E-6f, -4.004E-6f, -1.0868E-5f, -2.0591999E-5f, -2.5739999E-5f, -2.2307999E-5f, -1.3155999E-5f, -5.1479997E-6f, -3.4319999E-6f, -4.576E-6f, -5.7199995E-6f, -5.7199995E-6f, -2.288E-6f, 3.4319999E-6f, 9.724E-6f, 1.2584E-5f, 1.0868E-5f, 5.1479997E-6f, -1.144E-6f, -3.4319999E-6f, -1.144E-6f, 3.4319999E-6f, 8.008E-6f, 1.0295999E-5f, 1.1439999E-5f, 1.1439999E-5f, 1.0868E-5f, 8.579999E-6f, 5.7199995E-6f, 5.7199995E-6f, 9.724E-6f, 1.8304E-5f, 2.6311998E-5f, 2.9171999E-5f, 2.9171999E-5f, 2.7455999E-5f, 2.4595998E-5f, 2.0591999E-5f, 1.5443999E-5f, 9.724E-6f, 8.579999E-6f, 1.43E-5f, 2.4023999E-5f, 3.4319997E-5f, 4.3472E-5f, 4.8047998E-5f, 4.5187997E-5f, 3.6608E-5f, 2.6884E-5f, 2.0591999E-5f, 1.8304E-5f, 1.8875999E-5f, 1.7732E-5f, 1.3155999E-5f, 9.152E-6f, 8.579999E-6f, 1.0295999E-5f, 1.2011999E-5f, 1.0868E-5f, 8.008E-6f, 8.008E-6f, 9.152E-6f, 1.0868E-5f, 1.0868E-5f, 1.1439999E-5f, 1.2584E-5f, 1.4871999E-5f, 1.4871999E-5f, 1.0868E-5f, 4.576E-6f, 0.0f, -1.7159999E-6f, -2.8599998E-6f, -4.576E-6f, -7.4359996E-6f, -8.008E-6f, -6.292E-6f, -4.004E-6f, -4.004E-6f, -6.292E-6f, -9.724E-6f, -1.2584E-5f, -1.1439999E-5f, -8.579999E-6f, -6.292E-6f, -5.7199995E-6f, -8.008E-6f, -8.008E-6f, -5.7199995E-6f, -3.4319999E-6f, -2.288E-6f, -1.7159999E-6f, -1.144E-6f, 2.288E-6f, 9.152E-6f, 1.4871999E-5f, 1.8875999E-5f, 2.002E-5f, 1.7732E-5f, 1.5443999E-5f, 1.5443999E-5f, 1.6588E-5f, 1.6588E-5f, 1.2011999E-5f, 6.8639997E-6f, 3.4319999E-6f, 3.4319999E-6f, 6.8639997E-6f
        )));
        eegPacket = new MbtEEGPacket(channelsData);
        if(useQualities)
            eegPacket.setQualities(new ArrayList<>(Arrays.asList(ArrayUtils.toObject(MBTSignalQualityChecker.computeQualitiesForPacketNew(250,250,channelsData)))));
        eegPacketsList.add(eegPacket);
        channelsData = new ArrayList<>();

        channelsData.add(new ArrayList<>(Arrays.asList(-8.579999E-6f, -9.724E-6f, -8.579999E-6f, -4.004E-6f, 5.72E-7f, 1.144E-6f, -3.4319999E-6f, -1.0868E-5f, -1.6016E-5f, -1.3727999E-5f, -7.4359996E-6f, 2.288E-6f, 1.2011999E-5f, 1.6588E-5f, 1.2584E-5f, 2.8599998E-6f, -4.576E-6f, -6.8639997E-6f, -5.1479997E-6f, -3.4319999E-6f, -5.7199995E-6f, -8.579999E-6f, -9.724E-6f, -9.152E-6f, -8.008E-6f, -9.724E-6f, -1.3155999E-5f, -1.4871999E-5f, -1.5443999E-5f, -1.4871999E-5f, -1.4871999E-5f, -9.724E-6f, 5.72E-7f, 1.0295999E-5f, 1.5443999E-5f, 1.6588E-5f, 1.6588E-5f, 1.4871999E-5f, 1.2011999E-5f, 8.008E-6f, 5.72E-7f, -7.4359996E-6f, -1.2011999E-5f, -9.724E-6f, -3.4319999E-6f, 1.144E-6f, 1.144E-6f, -2.8599998E-6f, -9.152E-6f, -1.3727999E-5f, -1.6016E-5f, -1.43E-5f, -9.152E-6f, -3.4319999E-6f, 2.8599998E-6f, 4.004E-6f, 1.144E-6f, -2.8599998E-6f, -5.7199995E-6f, -5.7199995E-6f, -5.7199995E-6f, -4.576E-6f, 0.0f, 4.576E-6f, 4.576E-6f, -1.7159999E-6f, -9.152E-6f, -1.3155999E-5f, -1.3155999E-5f, -1.1439999E-5f, -1.0295999E-5f, -9.152E-6f, -6.8639997E-6f, -4.576E-6f, -2.8599998E-6f, -4.576E-6f, -6.292E-6f, -4.004E-6f, -5.72E-7f, 2.288E-6f, -1.144E-6f, -8.579999E-6f, -1.43E-5f, -1.7159999E-5f, -1.8304E-5f, -1.7732E-5f, -1.3727999E-5f, -3.4319999E-6f, 8.008E-6f, 1.7732E-5f, 2.002E-5f, 1.7732E-5f, 1.4871999E-5f, 1.2584E-5f, 1.1439999E-5f, 1.0295999E-5f, 1.0868E-5f, 1.43E-5f, 1.7159999E-5f, 1.8304E-5f, 1.5443999E-5f, 1.0868E-5f, 9.152E-6f, 7.4359996E-6f, 6.8639997E-6f, 6.8639997E-6f, 9.724E-6f, 1.5443999E-5f, 1.8875999E-5f, 1.7732E-5f, 1.2011999E-5f, 6.292E-6f, 6.292E-6f, 9.724E-6f, 1.2011999E-5f, 9.152E-6f, 3.4319999E-6f, 2.288E-6f, 4.576E-6f, 7.4359996E-6f, 6.8639997E-6f, 2.8599998E-6f, 1.144E-6f, 5.72E-7f, 1.144E-6f, -1.144E-6f, -5.7199995E-6f, -7.4359996E-6f, -4.004E-6f, 1.7159999E-6f, 5.1479997E-6f, 6.292E-6f, 5.7199995E-6f, 4.004E-6f, 2.288E-6f, 1.144E-6f, 1.7159999E-6f, 6.292E-6f, 1.2584E-5f, 1.8304E-5f, 2.002E-5f, 1.7159999E-5f, 1.43E-5f, 1.2011999E-5f, 1.0295999E-5f, 6.8639997E-6f, 5.72E-7f, -5.7199995E-6f, -1.0868E-5f, -1.3727999E-5f, -1.3727999E-5f, -1.2584E-5f, -1.0295999E-5f, -9.724E-6f, -1.0868E-5f, -1.43E-5f, -1.7732E-5f, -1.8304E-5f, -1.6588E-5f, -1.3155999E-5f, -1.2011999E-5f, -1.43E-5f, -1.6016E-5f, -1.43E-5f, -1.2011999E-5f, -1.2584E-5f, -1.6016E-5f, -1.8304E-5f, -1.7732E-5f, -1.1439999E-5f, -1.7159999E-6f, 5.7199995E-6f, 1.0295999E-5f, 1.2011999E-5f, 1.0868E-5f, 6.292E-6f, 5.72E-7f, -1.144E-6f, -5.72E-7f, 5.72E-7f, 5.72E-7f, 4.004E-6f, 1.1439999E-5f, 1.7732E-5f, 1.8304E-5f, 1.3155999E-5f, 4.576E-6f, 0.0f, 2.288E-6f, 7.4359996E-6f, 7.4359996E-6f, 2.8599998E-6f, -1.144E-6f, -4.576E-6f, -6.8639997E-6f, -6.8639997E-6f, -4.576E-6f, -1.144E-6f, 1.144E-6f, 4.004E-6f, 5.1479997E-6f, 1.7159999E-6f, 0.0f, 4.576E-6f, 1.1439999E-5f, 1.7732E-5f, 1.8875999E-5f, 1.7732E-5f, 1.5443999E-5f, 1.3155999E-5f, 9.724E-6f, 6.292E-6f, 4.004E-6f, 2.8599998E-6f, 1.7159999E-6f, 5.72E-7f, -1.144E-6f, 0.0f, 4.004E-6f, 6.8639997E-6f, 5.1479997E-6f, -1.7159999E-6f, -7.4359996E-6f, -1.0868E-5f, -1.2011999E-5f, -1.2011999E-5f, -1.2011999E-5f, -9.152E-6f, -5.1479997E-6f, -2.8599998E-6f, -3.4319999E-6f, -5.7199995E-6f, -7.4359996E-6f, -9.152E-6f, -9.724E-6f, -8.579999E-6f, -8.008E-6f, -6.292E-6f, -4.576E-6f, -5.1479997E-6f, -7.4359996E-6f, -9.724E-6f, -6.8639997E-6f, -2.288E-6f, -1.144E-6f, -4.004E-6f, -6.8639997E-6f, -4.004E-6f, 1.144E-6f, 4.576E-6f
        )));
        channelsData.add(new ArrayList<>(Arrays.asList(9.724E-6f, 1.0295999E-5f, 1.2584E-5f, 1.6588E-5f, 1.9448E-5f, 1.8304E-5f, 1.1439999E-5f, 1.144E-6f, -4.576E-6f, -1.7159999E-6f, 5.7199995E-6f, 1.4871999E-5f, 2.2879998E-5f, 2.5739999E-5f, 2.1736E-5f, 1.3155999E-5f, 4.004E-6f, -2.8599998E-6f, -5.7199995E-6f, -5.7199995E-6f, -6.8639997E-6f, -8.579999E-6f, -1.0868E-5f, -1.2011999E-5f, -1.3155999E-5f, -1.6016E-5f, -1.9448E-5f, -2.1164E-5f, -2.1736E-5f, -2.2307999E-5f, -2.3452E-5f, -2.2307999E-5f, -1.5443999E-5f, -7.4359996E-6f, -1.7159999E-6f, 2.8599998E-6f, 6.292E-6f, 8.579999E-6f, 8.008E-6f, 4.576E-6f, -2.8599998E-6f, -1.1439999E-5f, -1.6588E-5f, -1.3727999E-5f, -5.7199995E-6f, -1.144E-6f, -3.4319999E-6f, -1.2584E-5f, -2.4023999E-5f, -3.146E-5f, -3.4319997E-5f, -3.3176E-5f, -2.86E-5f, -2.4023999E-5f, -2.002E-5f, -1.9448E-5f, -2.4023999E-5f, -3.0887997E-5f, -3.7179998E-5f, -3.8896E-5f, -3.8896E-5f, -3.8896E-5f, -3.6036E-5f, -3.3176E-5f, -3.146E-5f, -3.3176E-5f, -3.7179998E-5f, -3.8323997E-5f, -3.7179998E-5f, -3.3176E-5f, -2.9743998E-5f, -2.7455999E-5f, -2.5168E-5f, -2.4023999E-5f, -2.2879998E-5f, -2.2307999E-5f, -2.1164E-5f, -1.7732E-5f, -1.2011999E-5f, -6.8639997E-6f, -6.292E-6f, -9.724E-6f, -1.3155999E-5f, -1.43E-5f, -1.4871999E-5f, -1.3727999E-5f, -9.152E-6f, 1.144E-6f, 1.3155999E-5f, 2.4595998E-5f, 2.9743998E-5f, 2.9171999E-5f, 2.6311998E-5f, 2.2879998E-5f, 2.1164E-5f, 2.1164E-5f, 2.2879998E-5f, 2.5168E-5f, 2.6311998E-5f, 2.4595998E-5f, 2.0591999E-5f, 1.6016E-5f, 1.3727999E-5f, 1.2011999E-5f, 1.2011999E-5f, 1.3155999E-5f, 1.4871999E-5f, 1.7159999E-5f, 1.6016E-5f, 1.1439999E-5f, 4.576E-6f, -1.7159999E-6f, -2.8599998E-6f, 0.0f, 2.8599998E-6f, 2.8599998E-6f, 0.0f, -5.72E-7f, 1.7159999E-6f, 6.292E-6f, 7.4359996E-6f, 5.7199995E-6f, 3.4319999E-6f, 2.8599998E-6f, 3.4319999E-6f, 4.004E-6f, 2.288E-6f, 3.4319999E-6f, 8.008E-6f, 1.43E-5f, 1.9448E-5f, 2.002E-5f, 1.8304E-5f, 1.6016E-5f, 1.3727999E-5f, 1.3727999E-5f, 1.6016E-5f, 2.1164E-5f, 2.6884E-5f, 3.0316E-5f, 3.0316E-5f, 2.7455999E-5f, 2.4595998E-5f, 2.2879998E-5f, 2.1736E-5f, 1.8875999E-5f, 1.3155999E-5f, 6.8639997E-6f, 5.72E-7f, -2.8599998E-6f, -4.576E-6f, -4.576E-6f, -4.004E-6f, -4.004E-6f, -4.004E-6f, -4.576E-6f, -6.292E-6f, -6.8639997E-6f, -6.292E-6f, -4.004E-6f, -2.288E-6f, -2.8599998E-6f, -4.576E-6f, -5.1479997E-6f, -4.004E-6f, -4.576E-6f, -8.579999E-6f, -1.2584E-5f, -1.4871999E-5f, -1.0868E-5f, -1.144E-6f, 6.8639997E-6f, 1.1439999E-5f, 1.3155999E-5f, 1.1439999E-5f, 6.8639997E-6f, 1.7159999E-6f, -1.144E-6f, -1.7159999E-6f, -5.72E-7f, 2.288E-6f, 8.579999E-6f, 1.8304E-5f, 2.4023999E-5f, 2.1736E-5f, 1.3155999E-5f, 1.7159999E-6f, -2.8599998E-6f, 1.7159999E-6f, 9.724E-6f, 1.3155999E-5f, 8.008E-6f, 0.0f, -8.008E-6f, -1.2011999E-5f, -9.724E-6f, -4.004E-6f, 5.72E-7f, 2.288E-6f, 3.4319999E-6f, 5.7199995E-6f, 6.8639997E-6f, 9.724E-6f, 1.6016E-5f, 2.2879998E-5f, 2.6311998E-5f, 2.4595998E-5f, 2.002E-5f, 1.6588E-5f, 1.5443999E-5f, 1.5443999E-5f, 1.43E-5f, 1.2011999E-5f, 8.008E-6f, 4.576E-6f, 2.288E-6f, 0.0f, 2.288E-6f, 8.008E-6f, 1.2584E-5f, 1.3727999E-5f, 8.579999E-6f, 1.144E-6f, -4.576E-6f, -8.008E-6f, -6.8639997E-6f, -2.8599998E-6f, 2.288E-6f, 6.8639997E-6f, 7.4359996E-6f, 4.576E-6f, 0.0f, -3.4319999E-6f, -4.576E-6f, -3.4319999E-6f, 5.72E-7f, 3.4319999E-6f, 6.292E-6f, 7.4359996E-6f, 5.7199995E-6f, 1.144E-6f, -2.8599998E-6f, -2.8599998E-6f, 5.72E-7f, 5.72E-7f, -1.7159999E-6f, -4.004E-6f, -3.4319999E-6f, 0.0f, 2.288E-6f
        )));
        eegPacket = new MbtEEGPacket(channelsData);
        if(useQualities)
            eegPacket.setQualities(new ArrayList<>(Arrays.asList(ArrayUtils.toObject(MBTSignalQualityChecker.computeQualitiesForPacketNew(250,250,channelsData)))));
        eegPacketsList.add(eegPacket);
        channelsData = new ArrayList<>();

        channelsData.add(new ArrayList<>(Arrays.asList(4.004E-6f, -2.288E-6f, -7.4359996E-6f, -5.7199995E-6f, -5.72E-7f, 2.288E-6f, 5.72E-7f, -1.144E-6f, -1.7159999E-6f, -4.004E-6f, -7.4359996E-6f, -1.1439999E-5f, -1.43E-5f, -1.3727999E-5f, -1.2011999E-5f, -1.1439999E-5f, -1.5443999E-5f, -2.0591999E-5f, -2.4023999E-5f, -2.4595998E-5f, -2.1164E-5f, -1.8875999E-5f, -1.7732E-5f, -1.7732E-5f, -1.8875999E-5f, -2.002E-5f, -2.002E-5f, -1.6016E-5f, -8.008E-6f, 5.72E-7f, 5.7199995E-6f, 4.576E-6f, -1.144E-6f, -6.8639997E-6f, -9.152E-6f, -8.008E-6f, -8.008E-6f, -8.008E-6f, -6.292E-6f, -2.288E-6f, 5.72E-7f, -5.72E-7f, -3.4319999E-6f, -5.7199995E-6f, -6.292E-6f, -1.7159999E-6f, 3.4319999E-6f, 7.4359996E-6f, 1.0868E-5f, 1.3727999E-5f, 1.5443999E-5f, 1.43E-5f, 1.5443999E-5f, 1.8304E-5f, 2.0591999E-5f, 2.0591999E-5f, 1.8304E-5f, 1.6016E-5f, 1.4871999E-5f, 1.3155999E-5f, 9.724E-6f, 2.8599998E-6f, -2.288E-6f, -1.7159999E-6f, 5.1479997E-6f, 1.1439999E-5f, 1.1439999E-5f, 9.152E-6f, 7.4359996E-6f, 7.4359996E-6f, 9.724E-6f, 9.724E-6f, 9.152E-6f, 9.724E-6f, 1.2011999E-5f, 1.3727999E-5f, 1.2584E-5f, 9.724E-6f, 9.724E-6f, 1.0868E-5f, 1.2584E-5f, 1.3155999E-5f, 1.3155999E-5f, 1.4871999E-5f, 1.6016E-5f, 1.6016E-5f, 1.5443999E-5f, 1.5443999E-5f, 1.7159999E-5f, 2.002E-5f, 2.2879998E-5f, 2.002E-5f, 1.6588E-5f, 1.5443999E-5f, 1.6588E-5f, 1.7159999E-5f, 1.2584E-5f, 4.576E-6f, -2.288E-6f, -6.292E-6f, -6.8639997E-6f, -8.579999E-6f, -1.1439999E-5f, -1.1439999E-5f, -8.579999E-6f, -3.4319999E-6f, -1.7159999E-6f, -4.004E-6f, -6.8639997E-6f, -9.152E-6f, -9.152E-6f, -7.4359996E-6f, -4.004E-6f, 1.144E-6f, 6.8639997E-6f, 1.0295999E-5f, 9.724E-6f, 8.579999E-6f, 1.0295999E-5f, 1.2584E-5f, 1.43E-5f, 1.0295999E-5f, 4.576E-6f, 1.144E-6f, 1.7159999E-6f, 4.004E-6f, 3.4319999E-6f, 1.144E-6f, 1.144E-6f, 2.8599998E-6f, 4.004E-6f, 3.4319999E-6f, 1.7159999E-6f, 1.144E-6f, 1.144E-6f, 0.0f, -3.4319999E-6f, -6.292E-6f, -4.576E-6f, -5.72E-7f, 2.8599998E-6f, 1.144E-6f, -5.1479997E-6f, -9.152E-6f, -1.1439999E-5f, -1.1439999E-5f, -1.1439999E-5f, -1.0868E-5f, -7.4359996E-6f, -4.576E-6f, -2.288E-6f, -3.4319999E-6f, -5.7199995E-6f, -6.292E-6f, -6.292E-6f, -7.4359996E-6f, -1.0295999E-5f, -1.0868E-5f, -5.1479997E-6f, 4.004E-6f, 1.1439999E-5f, 1.2584E-5f, 8.008E-6f, 3.4319999E-6f, 1.7159999E-6f, 2.288E-6f, 2.8599998E-6f, 1.7159999E-6f, 2.8599998E-6f, 4.004E-6f, 5.7199995E-6f, 4.576E-6f, 0.0f, -4.004E-6f, -6.292E-6f, -6.8639997E-6f, -7.4359996E-6f, -8.579999E-6f, -9.152E-6f, -1.0295999E-5f, -1.1439999E-5f, -1.43E-5f, -1.7159999E-5f, -1.7159999E-5f, -1.6016E-5f, -1.6016E-5f, -1.6016E-5f, -1.3727999E-5f, -8.008E-6f, -2.8599998E-6f, -2.288E-6f, -8.008E-6f, -1.4871999E-5f, -1.6016E-5f, -1.2584E-5f, -8.579999E-6f, -8.008E-6f, -9.724E-6f, -9.724E-6f, -9.724E-6f, -7.4359996E-6f, -6.8639997E-6f, -8.008E-6f, -6.8639997E-6f, -2.8599998E-6f, 1.7159999E-6f, 4.004E-6f, 4.004E-6f, 2.8599998E-6f, 1.7159999E-6f, 5.72E-7f, 0.0f, 5.72E-7f, 5.7199995E-6f, 1.0295999E-5f, 1.0295999E-5f, 3.4319999E-6f, -4.576E-6f, -4.004E-6f, 3.4319999E-6f, 1.2011999E-5f, 1.3727999E-5f, 8.008E-6f, -5.72E-7f, -8.579999E-6f, -1.43E-5f, -1.6016E-5f, -1.4871999E-5f, -9.152E-6f, -2.8599998E-6f, 1.144E-6f, -5.72E-7f, -7.4359996E-6f, -1.5443999E-5f, -2.0591999E-5f, -1.6588E-5f, -3.4319999E-6f, 9.152E-6f, 1.6016E-5f, 1.6016E-5f, 1.0868E-5f, 4.004E-6f, -2.288E-6f, -2.8599998E-6f, 5.72E-7f, 4.004E-6f, 3.4319999E-6f, 0.0f, -2.8599998E-6f, -4.004E-6f
        )));
        channelsData.add(new ArrayList<>(Arrays.asList(1.144E-6f, -5.1479997E-6f, -1.3155999E-5f, -1.43E-5f, -9.152E-6f, -4.576E-6f, -4.576E-6f, -5.7199995E-6f, -8.579999E-6f, -1.3155999E-5f, -1.7159999E-5f, -2.0591999E-5f, -2.4023999E-5f, -2.5168E-5f, -2.5739999E-5f, -2.6884E-5f, -3.146E-5f, -3.6608E-5f, -3.9468E-5f, -3.8896E-5f, -3.4892E-5f, -3.146E-5f, -2.9743998E-5f, -2.9743998E-5f, -3.146E-5f, -3.3176E-5f, -3.3176E-5f, -2.9743998E-5f, -2.4023999E-5f, -1.7732E-5f, -1.2584E-5f, -1.2584E-5f, -1.6016E-5f, -2.002E-5f, -2.1736E-5f, -2.2307999E-5f, -2.2879998E-5f, -2.4595998E-5f, -2.4595998E-5f, -2.1736E-5f, -1.7732E-5f, -1.7159999E-5f, -1.8875999E-5f, -2.0591999E-5f, -2.2307999E-5f, -1.9448E-5f, -1.5443999E-5f, -1.1439999E-5f, -7.4359996E-6f, -4.004E-6f, -2.288E-6f, -2.288E-6f, -1.7159999E-6f, 5.72E-7f, 1.144E-6f, -5.72E-7f, -4.576E-6f, -9.152E-6f, -1.2011999E-5f, -1.3727999E-5f, -1.43E-5f, -1.6016E-5f, -1.7159999E-5f, -1.3727999E-5f, -6.292E-6f, 5.72E-7f, 1.144E-6f, -2.8599998E-6f, -8.008E-6f, -1.0868E-5f, -1.0868E-5f, -9.724E-6f, -9.724E-6f, -8.008E-6f, -4.576E-6f, -5.72E-7f, 5.72E-7f, 5.72E-7f, 2.8599998E-6f, 6.292E-6f, 1.0295999E-5f, 1.2011999E-5f, 1.2011999E-5f, 1.2011999E-5f, 1.0868E-5f, 1.0868E-5f, 1.1439999E-5f, 1.2011999E-5f, 1.3727999E-5f, 1.7159999E-5f, 2.0591999E-5f, 1.9448E-5f, 1.6016E-5f, 1.3155999E-5f, 1.0868E-5f, 9.724E-6f, 5.7199995E-6f, -1.144E-6f, -7.4359996E-6f, -1.0868E-5f, -9.724E-6f, -8.579999E-6f, -7.4359996E-6f, -6.8639997E-6f, -4.004E-6f, 5.72E-7f, 2.8599998E-6f, 1.7159999E-6f, -5.72E-7f, -2.8599998E-6f, -2.8599998E-6f, -5.72E-7f, 2.8599998E-6f, 6.8639997E-6f, 9.724E-6f, 1.1439999E-5f, 9.724E-6f, 8.008E-6f, 1.0295999E-5f, 1.4871999E-5f, 1.8875999E-5f, 1.7732E-5f, 1.2584E-5f, 7.4359996E-6f, 5.1479997E-6f, 6.292E-6f, 6.8639997E-6f, 6.8639997E-6f, 8.008E-6f, 1.0868E-5f, 1.2011999E-5f, 1.1439999E-5f, 8.579999E-6f, 6.8639997E-6f, 6.292E-6f, 5.7199995E-6f, 3.4319999E-6f, 0.0f, 0.0f, 3.4319999E-6f, 8.008E-6f, 1.0295999E-5f, 8.579999E-6f, 7.4359996E-6f, 7.4359996E-6f, 9.152E-6f, 1.0868E-5f, 1.3155999E-5f, 1.6588E-5f, 1.8875999E-5f, 1.9448E-5f, 1.8875999E-5f, 1.6588E-5f, 1.6016E-5f, 1.6588E-5f, 1.6588E-5f, 1.6016E-5f, 1.6588E-5f, 2.2307999E-5f, 3.0316E-5f, 3.7751997E-5f, 3.9468E-5f, 3.6036E-5f, 3.146E-5f, 2.7455999E-5f, 2.6884E-5f, 2.86E-5f, 3.0887997E-5f, 3.3747998E-5f, 3.7179998E-5f, 4.004E-5f, 4.004E-5f, 3.6036E-5f, 3.0887997E-5f, 2.6884E-5f, 2.5168E-5f, 2.5168E-5f, 2.4595998E-5f, 2.2307999E-5f, 1.7732E-5f, 1.3155999E-5f, 7.4359996E-6f, 2.8599998E-6f, 1.7159999E-6f, 2.288E-6f, 2.288E-6f, 1.144E-6f, 5.72E-7f, 2.8599998E-6f, 5.1479997E-6f, 5.1479997E-6f, 5.72E-7f, -5.7199995E-6f, -8.579999E-6f, -6.292E-6f, -1.7159999E-6f, 1.144E-6f, 1.144E-6f, 0.0f, -5.72E-7f, 1.144E-6f, 3.4319999E-6f, 3.4319999E-6f, 3.4319999E-6f, 4.004E-6f, 6.292E-6f, 8.579999E-6f, 1.0868E-5f, 1.1439999E-5f, 1.0868E-5f, 9.152E-6f, 6.8639997E-6f, 6.292E-6f, 9.724E-6f, 1.3155999E-5f, 1.2011999E-5f, 5.1479997E-6f, -2.8599998E-6f, -5.1479997E-6f, 0.0f, 7.4359996E-6f, 9.724E-6f, 5.1479997E-6f, -4.576E-6f, -1.4871999E-5f, -2.2307999E-5f, -2.5168E-5f, -2.5168E-5f, -2.1736E-5f, -1.7159999E-5f, -1.4871999E-5f, -1.6016E-5f, -2.1736E-5f, -2.9743998E-5f, -3.6036E-5f, -3.4319997E-5f, -2.3452E-5f, -1.2584E-5f, -7.4359996E-6f, -8.008E-6f, -1.2011999E-5f, -1.7732E-5f, -2.4023999E-5f, -2.6884E-5f, -2.5739999E-5f, -2.4023999E-5f, -2.3452E-5f, -2.5168E-5f, -2.6311998E-5f, -2.6884E-5f
        )));
        eegPacket = new MbtEEGPacket(channelsData);
        if(useQualities)
            eegPacket.setQualities(new ArrayList<>(Arrays.asList(ArrayUtils.toObject(MBTSignalQualityChecker.computeQualitiesForPacketNew(250,250,channelsData)))));
        eegPacketsList.add(eegPacket);
        channelsData = new ArrayList<>();

        channelsData.add(new ArrayList<>(Arrays.asList(Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN
        )));
        channelsData.add(new ArrayList<>(Arrays.asList(-2.6311998E-5f, -2.5168E-5f, -2.5168E-5f, -2.4023999E-5f, -2.0591999E-5f, -1.9448E-5f, -2.4023999E-5f, -3.146E-5f, -3.4892E-5f, -3.2032E-5f, -2.8027998E-5f, -2.6311998E-5f, -2.7455999E-5f, -2.7455999E-5f, -2.4595998E-5f, -2.0591999E-5f, -1.6588E-5f, -1.6016E-5f, -1.7732E-5f, -1.8304E-5f, -1.7732E-5f, -1.7159999E-5f, -1.5443999E-5f, -1.2011999E-5f, -8.008E-6f, -4.004E-6f, -2.8599998E-6f, -5.1479997E-6f, -6.292E-6f, -4.004E-6f, 5.72E-7f, 3.4319999E-6f, 1.144E-6f, -1.7159999E-6f, -3.4319999E-6f, -2.288E-6f, 0.0f, 0.0f, -2.288E-6f, -4.004E-6f, -3.4319999E-6f, -2.288E-6f, -3.4319999E-6f, -4.576E-6f, -4.004E-6f, -1.144E-6f, 1.7159999E-6f, 1.7159999E-6f, -1.7159999E-6f, -6.8639997E-6f, -1.0868E-5f, -1.1439999E-5f, -9.152E-6f, -6.8639997E-6f, -5.1479997E-6f, -5.1479997E-6f, -5.7199995E-6f, -7.4359996E-6f, -5.7199995E-6f, 1.7159999E-6f, 9.724E-6f, 1.3155999E-5f, 1.0295999E-5f, 4.004E-6f, -5.72E-7f, -1.144E-6f, 5.72E-7f, 1.144E-6f, 0.0f, -1.144E-6f, -2.288E-6f, -2.8599998E-6f, -2.8599998E-6f, -2.8599998E-6f, -1.7159999E-6f, 0.0f, 1.144E-6f, 0.0f, -5.72E-7f, 5.72E-7f, 5.72E-7f, -1.144E-6f, -5.7199995E-6f, -9.724E-6f, -9.724E-6f, -7.4359996E-6f, -5.1479997E-6f, -5.7199995E-6f, -8.579999E-6f, -1.0295999E-5f, -1.0868E-5f, -1.0868E-5f, -1.1439999E-5f, -1.2011999E-5f, -9.724E-6f, -5.1479997E-6f, -1.144E-6f, 0.0f, -1.7159999E-6f, -2.8599998E-6f, -4.004E-6f, -4.004E-6f, -2.8599998E-6f, 0.0f, 2.8599998E-6f, 5.1479997E-6f, 5.1479997E-6f, 3.4319999E-6f, 3.4319999E-6f, 6.8639997E-6f, 1.0868E-5f, 1.2011999E-5f, 8.008E-6f, 1.144E-6f, -3.4319999E-6f, -3.4319999E-6f, 1.144E-6f, 1.0295999E-5f, 2.002E-5f, 2.9171999E-5f, 3.2604E-5f, 3.0316E-5f, 2.2307999E-5f, 1.1439999E-5f, 3.4319999E-6f, 2.288E-6f, 7.4359996E-6f, 1.43E-5f, 1.8875999E-5f, 2.1736E-5f, 2.1736E-5f, 1.9448E-5f, 1.5443999E-5f, 1.2584E-5f, 1.3155999E-5f, 1.6016E-5f, 1.8875999E-5f, 1.8875999E-5f, 1.6016E-5f, 1.3155999E-5f, 1.1439999E-5f, 8.579999E-6f, 4.004E-6f, 1.144E-6f, 3.4319999E-6f, 1.0868E-5f, 1.8304E-5f, 2.2879998E-5f, 2.6311998E-5f, 3.0316E-5f, 3.146E-5f, 3.0887997E-5f, 2.6311998E-5f, 2.0591999E-5f, 1.8304E-5f, 1.9448E-5f, 2.1164E-5f, 1.8304E-5f, 1.2011999E-5f, 6.292E-6f, 3.4319999E-6f, 2.288E-6f, 5.72E-7f, -2.8599998E-6f, -6.8639997E-6f, -9.724E-6f, -1.0868E-5f, -1.0295999E-5f, -8.008E-6f, -4.576E-6f, 5.72E-7f, 5.1479997E-6f, 7.4359996E-6f, 1.0295999E-5f, 1.7159999E-5f, 2.3452E-5f, 2.5739999E-5f, 2.0591999E-5f, 9.152E-6f, -5.72E-7f, -4.576E-6f, -4.576E-6f, -4.576E-6f, -6.8639997E-6f, -8.579999E-6f, -6.8639997E-6f, -3.4319999E-6f, -1.7159999E-6f, -1.7159999E-6f, -5.72E-7f, 5.72E-7f, 1.144E-6f, 1.7159999E-6f, 1.144E-6f, 1.7159999E-6f, 2.8599998E-6f, 5.7199995E-6f, 4.576E-6f, -1.7159999E-6f, -5.7199995E-6f, -4.004E-6f, 5.72E-7f, 3.4319999E-6f, 3.4319999E-6f, -5.72E-7f, -5.7199995E-6f, -1.0868E-5f, -1.43E-5f, -1.6016E-5f, -1.6016E-5f, -1.43E-5f, -1.2584E-5f, -1.3155999E-5f, -1.5443999E-5f, -1.7732E-5f, -1.7159999E-5f, -1.3155999E-5f, -7.4359996E-6f, -2.288E-6f, 1.144E-6f, 4.004E-6f, 6.292E-6f, 6.292E-6f, 4.576E-6f, 4.576E-6f, 6.292E-6f, 9.724E-6f, 1.3155999E-5f, 1.3727999E-5f, 1.0295999E-5f, 3.4319999E-6f, -4.004E-6f, -1.0868E-5f, -1.7159999E-5f, -1.8875999E-5f, -1.6016E-5f, -1.0868E-5f, -6.8639997E-6f, -4.004E-6f, -1.7159999E-6f, 0.0f, 0.0f, -1.144E-6f, -4.576E-6f, -8.579999E-6f, -1.2011999E-5f, -1.3727999E-5f, -1.6016E-5f, -1.7159999E-5f, -1.1439999E-5f
        )));
        eegPacket = new MbtEEGPacket(channelsData);
        if(useQualities)
            eegPacket.setQualities(new ArrayList<>(Arrays.asList(ArrayUtils.toObject(MBTSignalQualityChecker.computeQualitiesForPacketNew(250,250,channelsData)))));
        eegPacketsList.add(eegPacket);
        channelsData = new ArrayList<>();

        channelsData.add(new ArrayList<>(Arrays.asList(Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN, Float.NaN
        )));
        channelsData.add(new ArrayList<>(Arrays.asList(-4.004E-6f, 5.72E-7f, 0.0f, -5.1479997E-6f, -9.152E-6f, -9.152E-6f, -4.004E-6f, 2.8599998E-6f, 4.576E-6f, 2.288E-6f, -3.4319999E-6f, -1.0295999E-5f, -1.7732E-5f, -2.3452E-5f, -2.3452E-5f, -1.9448E-5f, -1.43E-5f, -1.1439999E-5f, -1.2011999E-5f, -1.3727999E-5f, -1.3155999E-5f, -9.724E-6f, -8.008E-6f, -1.2584E-5f, -1.8304E-5f, -1.8304E-5f, -1.3727999E-5f, -8.008E-6f, -6.292E-6f, -5.7199995E-6f, -5.1479997E-6f, -4.004E-6f, -3.4319999E-6f, -5.7199995E-6f, -8.008E-6f, -8.008E-6f, -6.292E-6f, -3.4319999E-6f, -2.8599998E-6f, -3.4319999E-6f, -5.7199995E-6f, -9.152E-6f, -1.2584E-5f, -1.5443999E-5f, -1.6588E-5f, -1.4871999E-5f, -1.2011999E-5f, -9.152E-6f, -8.579999E-6f, -8.579999E-6f, -9.152E-6f, -8.579999E-6f, -7.4359996E-6f, -6.8639997E-6f, -4.576E-6f, -2.288E-6f, 5.72E-7f, 1.144E-6f, -3.4319999E-6f, -9.724E-6f, -1.2584E-5f, -1.0868E-5f, -7.4359996E-6f, -2.288E-6f, 5.7199995E-6f, 1.3727999E-5f, 1.6588E-5f, 1.3727999E-5f, 6.8639997E-6f, 2.8599998E-6f, 6.8639997E-6f, 1.43E-5f, 1.9448E-5f, 1.7732E-5f, 1.2011999E-5f, 8.008E-6f, 6.8639997E-6f, 9.152E-6f, 1.0868E-5f, 1.2011999E-5f, 1.2584E-5f, 1.3727999E-5f, 1.3727999E-5f, 1.1439999E-5f, 9.724E-6f, 8.579999E-6f, 8.579999E-6f, 8.579999E-6f, 6.8639997E-6f, 5.7199995E-6f, 6.292E-6f, 1.0295999E-5f, 1.4871999E-5f, 1.6016E-5f, 1.6016E-5f, 1.5443999E-5f, 1.3155999E-5f, 1.2584E-5f, 1.4871999E-5f, 2.002E-5f, 2.5739999E-5f, 3.0316E-5f, 3.2032E-5f, 3.0887997E-5f, 2.9171999E-5f, 2.9743998E-5f, 2.9743998E-5f, 2.8027998E-5f, 2.3452E-5f, 1.8875999E-5f, 1.7732E-5f, 2.002E-5f, 2.3452E-5f, 2.3452E-5f, 2.2307999E-5f, 2.0591999E-5f, 1.8875999E-5f, 1.7159999E-5f, 1.2584E-5f, 7.4359996E-6f, 7.4359996E-6f, 1.2584E-5f, 1.8875999E-5f, 2.002E-5f, 1.5443999E-5f, 9.724E-6f, 5.7199995E-6f, 4.004E-6f, 3.4319999E-6f, 2.8599998E-6f, 1.144E-6f, -2.8599998E-6f, -8.008E-6f, -1.3155999E-5f, -1.6588E-5f, -1.6016E-5f, -1.3727999E-5f, -1.3155999E-5f, -1.7159999E-5f, -2.1736E-5f, -2.3452E-5f, -2.3452E-5f, -2.4023999E-5f, -2.86E-5f, -3.146E-5f, -2.9743998E-5f, -2.5168E-5f, -1.9448E-5f, -1.7159999E-5f, -1.7159999E-5f, -1.6588E-5f, -1.4871999E-5f, -1.5443999E-5f, -2.1164E-5f, -2.9743998E-5f, -3.6036E-5f, -3.7179998E-5f, -3.4319997E-5f, -3.146E-5f, -2.9171999E-5f, -2.6884E-5f, -2.4595998E-5f, -2.2307999E-5f, -2.002E-5f, -1.6588E-5f, -1.0868E-5f, -5.7199995E-6f, -1.144E-6f, 5.72E-7f, 5.72E-7f, -5.72E-7f, -1.144E-6f, -1.144E-6f, -2.288E-6f, -3.4319999E-6f, -1.7159999E-6f, 5.72E-7f, 2.288E-6f, -5.72E-7f, -5.1479997E-6f, -8.008E-6f, -8.579999E-6f, -9.152E-6f, -1.0295999E-5f, -1.1439999E-5f, -1.0868E-5f, -1.1439999E-5f, -1.3155999E-5f, -1.6588E-5f, -2.1164E-5f, -2.4023999E-5f, -2.2879998E-5f, -1.8875999E-5f, -1.6016E-5f, -1.4871999E-5f, -1.3155999E-5f, -1.2584E-5f, -1.2011999E-5f, -1.2584E-5f, -1.2584E-5f, -1.0295999E-5f, -8.579999E-6f, -8.008E-6f, -8.579999E-6f, -8.008E-6f, -5.1479997E-6f, -5.72E-7f, 3.4319999E-6f, 4.576E-6f, 3.4319999E-6f, 4.004E-6f, 5.1479997E-6f, 4.576E-6f, 2.8599998E-6f, 1.144E-6f, 4.004E-6f, 9.724E-6f, 1.4871999E-5f, 1.6016E-5f, 1.3727999E-5f, 1.2011999E-5f, 1.0295999E-5f, 8.579999E-6f, 6.8639997E-6f, 6.292E-6f, 9.152E-6f, 1.3155999E-5f, 1.7159999E-5f, 1.6588E-5f, 1.2011999E-5f, 7.4359996E-6f, 4.576E-6f, 5.1479997E-6f, 5.7199995E-6f, 5.1479997E-6f, 4.004E-6f, 4.004E-6f, 5.7199995E-6f, 6.8639997E-6f, 4.576E-6f, 1.144E-6f, -5.72E-7f, 0.0f, 0.0f, -1.7159999E-6f, -2.8599998E-6f, -2.8599998E-6f, -1.144E-6f, -5.72E-7f, -2.288E-6f
        )));
        eegPacket = new MbtEEGPacket(channelsData);
        if(useQualities)
            eegPacket.setQualities(new ArrayList<>(Arrays.asList(ArrayUtils.toObject(MBTSignalQualityChecker.computeQualitiesForPacketNew(250,250,channelsData)))));
        eegPacketsList.add(eegPacket);
        channelsData = new ArrayList<>();

        channelsData.add(new ArrayList<>(Arrays.asList(7.8936E-5f, 7.2644E-5f, 6.6352E-5f, 5.72E-5f, 4.7475998E-5f, 4.1183997E-5f, 3.7751997E-5f, 3.4892E-5f, 2.9171999E-5f, 2.2307999E-5f, 1.7732E-5f, 1.2584E-5f, 6.8639997E-6f, -5.72E-7f, -8.008E-6f, -1.2011999E-5f, -1.6016E-5f, -2.0591999E-5f, -2.86E-5f, -3.7751997E-5f, -4.4615997E-5f, -5.0908E-5f, -5.5483997E-5f, -6.0059996E-5f, -6.578E-5f, -6.9211994E-5f, -7.15E-5f, -7.4359996E-5f, -8.1795995E-5f, -9.2092E-5f, -1.01244E-4f, -1.08108E-4f, -1.1325599E-4f, -1.17831994E-4f, -1.1954799E-4f, -1.17831994E-4f, -1.16687996E-4f, -1.2069199E-4f, -1.29272E-4f, -1.3727999E-4f, -1.3727999E-4f, -1.33276E-4f, -1.2984399E-4f, -1.3098799E-4f, -1.3499199E-4f, -1.36708E-4f, -1.36708E-4f, -1.3727999E-4f, -1.4242799E-4f, -1.48148E-4f, -1.49292E-4f, -1.46432E-4f, -1.44144E-4f, -1.46432E-4f, -1.5158E-4f, -1.5501199E-4f, -1.5444E-4f, -1.5215199E-4f, -1.5215199E-4f, -1.5501199E-4f, -1.57872E-4f, -1.5958799E-4f, -1.6016E-4f, -1.61304E-4f, -1.6359199E-4f, -1.64164E-4f, -1.6359199E-4f, -1.64164E-4f, -1.65308E-4f, -1.66452E-4f, -1.6473599E-4f, -1.61876E-4f, -1.61304E-4f, -1.6302E-4f, -1.66452E-4f, -1.6702399E-4f, -1.6359199E-4f, -1.6016E-4f, -1.59016E-4f, -1.6016E-4f, -1.59016E-4f, -1.5501199E-4f, -1.5158E-4f, -1.50436E-4f, -1.5329599E-4f, -1.56728E-4f, -1.56728E-4f, -1.5215199E-4f, -1.46432E-4f, -1.45288E-4f, -1.45288E-4f, -1.44144E-4f, -1.40712E-4f, -1.3842399E-4f, -1.38996E-4f, -1.3727999E-4f, -1.33276E-4f, -1.29272E-4f, -1.26412E-4f, -1.2584E-4f, -1.25268E-4f, -1.24124E-4f, -1.2240799E-4f, -1.2298E-4f, -1.2584E-4f, -1.24696E-4f, -1.1954799E-4f, -1.1211199E-4f, -1.08108E-4f, -1.0868E-4f, -1.07536E-4f, -1.02387996E-4f, -9.5523996E-5f, -9.0375994E-5f, -8.8659996E-5f, -8.7516E-5f, -8.58E-5f, -8.2939994E-5f, -8.0652E-5f, -7.8936E-5f, -7.3788E-5f, -6.6352E-5f, -5.8915997E-5f, -5.6055997E-5f, -5.8343998E-5f, -5.8915997E-5f, -5.4911998E-5f, -4.8047998E-5f, -4.3472E-5f, -4.29E-5f, -4.4043998E-5f, -4.3472E-5f, -3.9468E-5f, -3.5464E-5f, -3.4319997E-5f, -3.2604E-5f, -2.86E-5f, -2.3452E-5f, -1.9448E-5f, -1.7732E-5f, -1.6588E-5f, -1.43E-5f, -8.579999E-6f, -1.7159999E-6f, 1.144E-6f, 2.8599998E-6f, 5.1479997E-6f, 7.4359996E-6f, 9.152E-6f, 9.724E-6f, 1.2011999E-5f, 1.6588E-5f, 2.1164E-5f, 2.3452E-5f, 2.2879998E-5f, 2.4023999E-5f, 2.6311998E-5f, 2.9171999E-5f, 2.9171999E-5f, 2.6311998E-5f, 2.5739999E-5f, 2.9171999E-5f, 3.0887997E-5f, 3.2032E-5f, 3.0887997E-5f, 3.3747998E-5f, 4.2328E-5f, 5.3196E-5f, 5.7772E-5f, 5.3196E-5f, 4.6904E-5f, 4.3472E-5f, 4.5187997E-5f, 4.8047998E-5f, 4.9191996E-5f, 4.8619997E-5f, 4.8047998E-5f, 5.0908E-5f, 5.4911998E-5f, 5.5483997E-5f, 5.5483997E-5f, 5.5483997E-5f, 5.72E-5f, 6.0059996E-5f, 6.1203995E-5f, 6.1203995E-5f, 6.1775994E-5f, 6.1203995E-5f, 5.8343998E-5f, 5.3196E-5f, 4.8619997E-5f, 4.6904E-5f, 4.9191996E-5f, 5.2051997E-5f, 5.1479998E-5f, 4.9191996E-5f, 4.6904E-5f, 4.5187997E-5f, 4.29E-5f, 4.004E-5f, 3.8896E-5f, 4.0611998E-5f, 4.1755997E-5f, 4.1183997E-5f, 3.6036E-5f, 3.3176E-5f, 3.4892E-5f, 3.9468E-5f, 4.2328E-5f, 3.9468E-5f, 3.4892E-5f, 3.146E-5f, 2.8027998E-5f, 2.4023999E-5f, 1.6588E-5f, 1.0868E-5f, 1.1439999E-5f, 1.6588E-5f, 1.9448E-5f, 1.4871999E-5f, 8.008E-6f, 4.576E-6f, 5.1479997E-6f, 9.724E-6f, 1.0868E-5f, 1.0868E-5f, 1.1439999E-5f, 1.3155999E-5f, 1.3727999E-5f, 1.0295999E-5f, 6.8639997E-6f, 5.1479997E-6f, 5.7199995E-6f, 5.7199995E-6f, 4.004E-6f, 1.144E-6f, 0.0f, 5.72E-7f, 5.72E-7f, -1.144E-6f, -2.288E-6f, -2.288E-6f, -1.7159999E-6f, -2.8599998E-6f, -6.292E-6f, -8.008E-6f, -5.7199995E-6f, -5.72E-7f, 4.576E-6f, 5.7199995E-6f
        )));
        channelsData.add(new ArrayList<>(Arrays.asList(-3.4319999E-6f, -4.004E-6f, -3.4319999E-6f, -2.288E-6f, -5.72E-7f, 2.8599998E-6f, 7.4359996E-6f, 1.2011999E-5f, 1.2584E-5f, 1.1439999E-5f, 1.1439999E-5f, 1.3155999E-5f, 1.4871999E-5f, 1.6016E-5f, 1.6016E-5f, 1.6588E-5f, 1.7159999E-5f, 1.7159999E-5f, 1.4871999E-5f, 1.0868E-5f, 7.4359996E-6f, 4.576E-6f, 4.004E-6f, 4.004E-6f, 2.8599998E-6f, 2.8599998E-6f, 4.576E-6f, 8.008E-6f, 8.579999E-6f, 4.576E-6f, -1.7159999E-6f, -6.8639997E-6f, -1.0868E-5f, -1.1439999E-5f, -8.579999E-6f, -3.4319999E-6f, 5.72E-7f, 0.0f, -5.1479997E-6f, -9.724E-6f, -9.152E-6f, -4.576E-6f, -5.72E-7f, 1.144E-6f, 1.7159999E-6f, 4.576E-6f, 7.4359996E-6f, 8.008E-6f, 3.4319999E-6f, -2.8599998E-6f, -4.576E-6f, -1.144E-6f, 4.004E-6f, 5.7199995E-6f, 3.4319999E-6f, 1.144E-6f, 2.8599998E-6f, 7.4359996E-6f, 1.2011999E-5f, 1.2584E-5f, 9.724E-6f, 7.4359996E-6f, 7.4359996E-6f, 9.152E-6f, 1.0868E-5f, 1.3155999E-5f, 1.43E-5f, 1.3155999E-5f, 1.1439999E-5f, 9.152E-6f, 9.724E-6f, 1.2584E-5f, 1.43E-5f, 1.43E-5f, 1.2011999E-5f, 1.0868E-5f, 1.2011999E-5f, 1.3727999E-5f, 1.4871999E-5f, 1.4871999E-5f, 1.6016E-5f, 1.7732E-5f, 1.9448E-5f, 1.8875999E-5f, 1.5443999E-5f, 1.0868E-5f, 6.8639997E-6f, 6.8639997E-6f, 8.579999E-6f, 9.152E-6f, 9.152E-6f, 1.0868E-5f, 1.43E-5f, 1.6016E-5f, 1.3727999E-5f, 1.1439999E-5f, 1.0868E-5f, 9.724E-6f, 9.152E-6f, 8.008E-6f, 5.7199995E-6f, 3.4319999E-6f, 1.144E-6f, -1.7159999E-6f, -4.576E-6f, -4.576E-6f, -1.7159999E-6f, 1.7159999E-6f, 1.7159999E-6f, -3.4319999E-6f, -8.579999E-6f, -9.152E-6f, -7.4359996E-6f, -5.1479997E-6f, -5.1479997E-6f, -6.8639997E-6f, -8.579999E-6f, -8.579999E-6f, -7.4359996E-6f, -6.292E-6f, -2.8599998E-6f, 1.144E-6f, 4.576E-6f, 5.1479997E-6f, 1.7159999E-6f, -2.8599998E-6f, -4.576E-6f, -4.004E-6f, -3.4319999E-6f, -5.1479997E-6f, -6.8639997E-6f, -6.8639997E-6f, -4.004E-6f, -2.288E-6f, -4.004E-6f, -8.008E-6f, -9.724E-6f, -9.724E-6f, -9.152E-6f, -9.724E-6f, -1.3155999E-5f, -1.4871999E-5f, -1.2584E-5f, -6.292E-6f, -1.7159999E-6f, -5.72E-7f, -5.72E-7f, -2.8599998E-6f, -5.7199995E-6f, -9.724E-6f, -1.2584E-5f, -1.3727999E-5f, -1.4871999E-5f, -1.6588E-5f, -1.9448E-5f, -2.1736E-5f, -2.1736E-5f, -2.0591999E-5f, -2.002E-5f, -2.2307999E-5f, -2.3452E-5f, -2.3452E-5f, -2.5168E-5f, -2.6311998E-5f, -2.7455999E-5f, -2.5739999E-5f, -1.8304E-5f, -1.0295999E-5f, -7.4359996E-6f, -1.2011999E-5f, -1.8875999E-5f, -2.2879998E-5f, -2.2307999E-5f, -2.0591999E-5f, -2.002E-5f, -2.1736E-5f, -2.2879998E-5f, -1.9448E-5f, -1.4871999E-5f, -1.2584E-5f, -1.2011999E-5f, -1.0868E-5f, -7.4359996E-6f, -2.288E-6f, 1.7159999E-6f, 3.4319999E-6f, 4.576E-6f, 5.1479997E-6f, 6.292E-6f, 5.7199995E-6f, 3.4319999E-6f, 2.288E-6f, 4.004E-6f, 6.8639997E-6f, 6.8639997E-6f, 5.7199995E-6f, 5.7199995E-6f, 5.1479997E-6f, 4.004E-6f, 3.4319999E-6f, 3.4319999E-6f, 3.4319999E-6f, 3.4319999E-6f, 1.7159999E-6f, -5.72E-7f, -2.288E-6f, 5.72E-7f, 5.7199995E-6f, 9.724E-6f, 9.724E-6f, 7.4359996E-6f, 4.004E-6f, -5.72E-7f, -5.1479997E-6f, -1.0295999E-5f, -1.2584E-5f, -9.724E-6f, -4.576E-6f, -2.288E-6f, -6.292E-6f, -1.2584E-5f, -1.6016E-5f, -1.43E-5f, -9.152E-6f, -5.1479997E-6f, -3.4319999E-6f, -2.8599998E-6f, -1.144E-6f, 5.72E-7f, 0.0f, -1.144E-6f, -5.72E-7f, 2.288E-6f, 5.1479997E-6f, 4.576E-6f, 1.7159999E-6f, -1.144E-6f, -2.8599998E-6f, -2.288E-6f, -1.144E-6f, 0.0f, 2.8599998E-6f, 4.576E-6f, 4.576E-6f, 2.288E-6f, -1.7159999E-6f, -3.4319999E-6f, -1.144E-6f, 2.8599998E-6f, 5.7199995E-6f
        )));
        eegPacket = new MbtEEGPacket(channelsData);
        if(useQualities)
            eegPacket.setQualities(new ArrayList<>(Arrays.asList(ArrayUtils.toObject(MBTSignalQualityChecker.computeQualitiesForPacketNew(250,250,channelsData)))));
        eegPacketsList.add(eegPacket);
        channelsData = new ArrayList<>();

        channelsData.add(new ArrayList<>(Arrays.asList(4.004E-6f, 2.288E-6f, 3.4319999E-6f, 5.1479997E-6f, 4.004E-6f, 1.7159999E-6f, 0.0f, -5.72E-7f, -1.7159999E-6f, -6.292E-6f, -1.1439999E-5f, -1.43E-5f, -1.43E-5f, -1.3727999E-5f, -1.4871999E-5f, -1.8304E-5f, -1.8304E-5f, -1.4871999E-5f, -1.1439999E-5f, -1.0868E-5f, -1.2011999E-5f, -1.1439999E-5f, -8.579999E-6f, -5.1479997E-6f, -4.576E-6f, -3.4319999E-6f, 0.0f, 2.288E-6f, 1.144E-6f, -5.1479997E-6f, -1.3727999E-5f, -1.7732E-5f, -1.43E-5f, -6.292E-6f, 0.0f, 1.7159999E-6f, 2.288E-6f, 5.72E-7f, -2.8599998E-6f, -7.4359996E-6f, -1.0295999E-5f, -8.008E-6f, -1.144E-6f, 5.1479997E-6f, 5.7199995E-6f, 2.288E-6f, 0.0f, -1.7159999E-6f, -5.72E-7f, -5.72E-7f, -2.8599998E-6f, -3.4319999E-6f, -2.8599998E-6f, -3.4319999E-6f, -6.8639997E-6f, -1.2011999E-5f, -1.5443999E-5f, -1.7159999E-5f, -1.8304E-5f, -2.2879998E-5f, -2.8027998E-5f, -2.9743998E-5f, -2.8027998E-5f, -2.4595998E-5f, -2.4023999E-5f, -2.7455999E-5f, -3.2604E-5f, -3.5464E-5f, -3.4319997E-5f, -3.146E-5f, -2.9171999E-5f, -2.5168E-5f, -1.9448E-5f, -1.43E-5f, -1.4871999E-5f, -2.002E-5f, -2.4595998E-5f, -2.6311998E-5f, -2.4595998E-5f, -2.2307999E-5f, -2.2879998E-5f, -2.3452E-5f, -2.3452E-5f, -2.002E-5f, -1.7732E-5f, -1.6588E-5f, -1.4871999E-5f, -1.2584E-5f, -1.3155999E-5f, -1.6016E-5f, -1.7732E-5f, -1.3727999E-5f, -8.579999E-6f, -4.576E-6f, -5.1479997E-6f, -7.4359996E-6f, -6.8639997E-6f, -1.144E-6f, 5.1479997E-6f, 6.292E-6f, 2.8599998E-6f, 5.72E-7f, 5.72E-7f, 2.288E-6f, 3.4319999E-6f, 2.8599998E-6f, 3.4319999E-6f, 6.292E-6f, 9.152E-6f, 9.724E-6f, 8.579999E-6f, 9.724E-6f, 1.1439999E-5f, 1.2584E-5f, 1.0868E-5f, 7.4359996E-6f, 7.4359996E-6f, 1.0868E-5f, 1.4871999E-5f, 1.6016E-5f, 1.43E-5f, 1.3727999E-5f, 1.6016E-5f, 1.9448E-5f, 2.1736E-5f, 2.0591999E-5f, 1.8875999E-5f, 1.7159999E-5f, 1.7159999E-5f, 1.7732E-5f, 1.7159999E-5f, 1.7159999E-5f, 1.7732E-5f, 1.9448E-5f, 2.0591999E-5f, 2.002E-5f, 2.002E-5f, 2.002E-5f, 1.9448E-5f, 1.6016E-5f, 9.152E-6f, 2.8599998E-6f, -5.72E-7f, -1.144E-6f, -1.144E-6f, -1.144E-6f, -5.72E-7f, 1.7159999E-6f, 4.576E-6f, 5.7199995E-6f, 5.1479997E-6f, 5.7199995E-6f, 9.152E-6f, 1.2584E-5f, 1.6016E-5f, 1.7159999E-5f, 1.8875999E-5f, 2.002E-5f, 1.9448E-5f, 1.6588E-5f, 1.2584E-5f, 1.2011999E-5f, 1.5443999E-5f, 1.8875999E-5f, 2.0591999E-5f, 1.8875999E-5f, 1.9448E-5f, 2.1736E-5f, 2.2879998E-5f, 2.0591999E-5f, 1.4871999E-5f, 1.0295999E-5f, 1.0295999E-5f, 1.3155999E-5f, 1.43E-5f, 1.0295999E-5f, 6.8639997E-6f, 8.008E-6f, 1.2011999E-5f, 1.4871999E-5f, 1.3727999E-5f, 1.0868E-5f, 8.579999E-6f, 8.008E-6f, 9.152E-6f, 8.008E-6f, 7.4359996E-6f, 6.8639997E-6f, 7.4359996E-6f, 6.8639997E-6f, 4.576E-6f, 4.004E-6f, 3.4319999E-6f, 4.576E-6f, 5.7199995E-6f, 5.1479997E-6f, 2.8599998E-6f, -5.72E-7f, -4.576E-6f, -6.292E-6f, -6.292E-6f, -4.576E-6f, -4.004E-6f, -7.4359996E-6f, -1.3727999E-5f, -2.2307999E-5f, -2.5739999E-5f, -2.3452E-5f, -2.002E-5f, -1.8304E-5f, -2.2307999E-5f, -2.7455999E-5f, -2.86E-5f, -2.5168E-5f, -2.002E-5f, -1.7732E-5f, -1.6588E-5f, -1.3727999E-5f, -1.0868E-5f, -1.0295999E-5f, -1.3727999E-5f, -1.6016E-5f, -1.3727999E-5f, -8.008E-6f, -3.4319999E-6f, -6.292E-6f, -1.2584E-5f, -1.6016E-5f, -1.3155999E-5f, -5.7199995E-6f, 5.72E-7f, 4.576E-6f, 6.8639997E-6f, 5.7199995E-6f, 2.288E-6f, -2.288E-6f, -5.1479997E-6f, -5.1479997E-6f, -6.292E-6f, -9.724E-6f, -1.7159999E-5f, -2.2307999E-5f, -2.2879998E-5f, -2.0591999E-5f, -1.7732E-5f, -1.6588E-5f, -1.5443999E-5f, -1.2584E-5f, -1.1439999E-5f, -1.1439999E-5f
        )));
        channelsData.add(new ArrayList<>(Arrays.asList(6.8639997E-6f, 7.4359996E-6f, 1.0295999E-5f, 1.4871999E-5f, 1.6588E-5f, 1.6016E-5f, 1.43E-5f, 1.3727999E-5f, 1.3155999E-5f, 1.1439999E-5f, 7.4359996E-6f, 4.004E-6f, 2.8599998E-6f, 3.4319999E-6f, 2.8599998E-6f, 2.288E-6f, 2.8599998E-6f, 5.1479997E-6f, 6.292E-6f, 5.1479997E-6f, 2.8599998E-6f, 2.8599998E-6f, 5.7199995E-6f, 1.1439999E-5f, 1.7159999E-5f, 2.1736E-5f, 2.5168E-5f, 2.5168E-5f, 2.1736E-5f, 1.4871999E-5f, 7.4359996E-6f, 3.4319999E-6f, 5.1479997E-6f, 1.0868E-5f, 1.5443999E-5f, 1.8304E-5f, 1.9448E-5f, 1.9448E-5f, 1.7732E-5f, 1.6016E-5f, 1.6016E-5f, 2.0591999E-5f, 2.8027998E-5f, 3.3747998E-5f, 3.3747998E-5f, 2.9171999E-5f, 2.4595998E-5f, 2.2307999E-5f, 2.3452E-5f, 2.4023999E-5f, 2.1736E-5f, 1.8304E-5f, 1.6588E-5f, 1.5443999E-5f, 1.3155999E-5f, 9.152E-6f, 5.7199995E-6f, 2.288E-6f, -1.144E-6f, -5.7199995E-6f, -1.1439999E-5f, -1.3155999E-5f, -1.1439999E-5f, -8.579999E-6f, -8.008E-6f, -1.3727999E-5f, -2.2879998E-5f, -3.0887997E-5f, -3.3176E-5f, -3.0316E-5f, -2.7455999E-5f, -2.2879998E-5f, -1.8304E-5f, -1.5443999E-5f, -1.7159999E-5f, -2.4023999E-5f, -3.0887997E-5f, -3.4892E-5f, -3.3176E-5f, -2.86E-5f, -2.5168E-5f, -2.4023999E-5f, -2.3452E-5f, -2.2307999E-5f, -2.2307999E-5f, -2.3452E-5f, -2.3452E-5f, -2.2879998E-5f, -2.2879998E-5f, -2.3452E-5f, -2.1736E-5f, -1.5443999E-5f, -1.0868E-5f, -1.0295999E-5f, -1.4871999E-5f, -2.002E-5f, -2.002E-5f, -1.2584E-5f, -3.4319999E-6f, 5.72E-7f, -1.144E-6f, -5.1479997E-6f, -8.008E-6f, -8.579999E-6f, -9.152E-6f, -1.0868E-5f, -1.2584E-5f, -1.3155999E-5f, -1.2584E-5f, -1.1439999E-5f, -1.2011999E-5f, -1.1439999E-5f, -9.724E-6f, -8.008E-6f, -9.152E-6f, -1.2011999E-5f, -1.4871999E-5f, -1.3727999E-5f, -9.152E-6f, -3.4319999E-6f, -5.72E-7f, 0.0f, -5.72E-7f, 5.72E-7f, 1.144E-6f, 5.72E-7f, 1.144E-6f, 4.004E-6f, 9.152E-6f, 1.6016E-5f, 2.1164E-5f, 2.2879998E-5f, 2.1736E-5f, 1.8875999E-5f, 1.7159999E-5f, 1.43E-5f, 1.3155999E-5f, 1.3727999E-5f, 1.3727999E-5f, 1.2584E-5f, 8.579999E-6f, 3.4319999E-6f, -5.72E-7f, -1.7159999E-6f, -1.7159999E-6f, -2.8599998E-6f, -4.576E-6f, -5.7199995E-6f, -5.1479997E-6f, -2.8599998E-6f, -5.72E-7f, 1.7159999E-6f, 3.4319999E-6f, 2.8599998E-6f, 2.288E-6f, 4.004E-6f, 6.8639997E-6f, 1.0295999E-5f, 1.1439999E-5f, 9.724E-6f, 6.292E-6f, 5.1479997E-6f, 8.008E-6f, 1.2584E-5f, 1.43E-5f, 1.2584E-5f, 1.1439999E-5f, 1.2584E-5f, 1.3155999E-5f, 1.1439999E-5f, 7.4359996E-6f, 4.004E-6f, 5.7199995E-6f, 1.1439999E-5f, 1.5443999E-5f, 1.3155999E-5f, 9.152E-6f, 9.724E-6f, 1.2011999E-5f, 1.2584E-5f, 8.579999E-6f, 1.144E-6f, -4.576E-6f, -5.7199995E-6f, -2.8599998E-6f, -1.144E-6f, -2.288E-6f, -5.1479997E-6f, -6.8639997E-6f, -7.4359996E-6f, -7.4359996E-6f, -8.008E-6f, -9.152E-6f, -1.0295999E-5f, -9.724E-6f, -9.724E-6f, -1.1439999E-5f, -1.43E-5f, -1.6588E-5f, -1.6588E-5f, -1.43E-5f, -1.0868E-5f, -1.0295999E-5f, -1.3155999E-5f, -1.7732E-5f, -2.3452E-5f, -2.5739999E-5f, -2.2879998E-5f, -1.8304E-5f, -1.4871999E-5f, -1.5443999E-5f, -1.7732E-5f, -1.7159999E-5f, -1.3155999E-5f, -8.579999E-6f, -6.8639997E-6f, -6.292E-6f, -3.4319999E-6f, 5.72E-7f, 2.8599998E-6f, 1.7159999E-6f, 0.0f, 5.72E-7f, 4.576E-6f, 7.4359996E-6f, 5.1479997E-6f, -2.288E-6f, -8.579999E-6f, -8.008E-6f, -1.7159999E-6f, 5.1479997E-6f, 1.0868E-5f, 1.43E-5f, 1.43E-5f, 1.1439999E-5f, 7.4359996E-6f, 4.576E-6f, 3.4319999E-6f, 1.144E-6f, -2.288E-6f, -8.008E-6f, -1.1439999E-5f, -1.1439999E-5f, -1.0295999E-5f, -9.724E-6f, -1.0868E-5f, -1.2011999E-5f, -1.0295999E-5f, -7.4359996E-6f, -5.1479997E-6f
        )));
        eegPacket = new MbtEEGPacket(channelsData);
        if(useQualities)
            eegPacket.setQualities(new ArrayList<>(Arrays.asList(ArrayUtils.toObject(MBTSignalQualityChecker.computeQualitiesForPacketNew(250,250,channelsData)))));
        eegPacketsList.add(eegPacket);

        return eegPacketsList;
    }
}